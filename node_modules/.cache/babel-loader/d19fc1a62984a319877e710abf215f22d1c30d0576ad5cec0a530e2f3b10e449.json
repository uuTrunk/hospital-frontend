{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport { getAdmissionAssessmentList, getHealthAssessmentDetail, submitHealthAssessment, getCareAssessmentDetail, submitCareAssessment, uploadMedicalReport } from '../api/admission';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    patients: []\n  },\n  getters: {\n    pendingAdmissionCount(state) {\n      return state.patients.filter(patient => patient.healthStatus === '待评估' || patient.careStatus === '待评估').length;\n    },\n    pendingDischargeCount(state) {\n      return state.patients.filter(p => p.status === '待出院').length;\n    }\n  },\n  mutations: {\n    setPatients(state, patients) {\n      state.patients = patients;\n    },\n    updatePatientHealthAssessment(state, {\n      patientId,\n      status,\n      time,\n      operator\n    }) {\n      const patient = state.patients.find(p => p.patientId === patientId);\n      if (patient) {\n        patient.healthStatus = status;\n        patient.healthTime = time;\n        patient.healthOperator = operator;\n      }\n    },\n    updatePatientCareAssessment(state, {\n      patientId,\n      status,\n      time,\n      operator\n    }) {\n      const patient = state.patients.find(p => p.patientId === patientId);\n      if (patient) {\n        patient.careStatus = status;\n        patient.careTime = time;\n        patient.careOperator = operator;\n      }\n    },\n    completeAdmission(state, patientId) {\n      const patient = state.patients.find(p => p.id === patientId);\n      if (patient) {\n        patient.admissionCompleted = true;\n      }\n    }\n  },\n  actions: {\n    async fetchPatients({\n      commit\n    }, params) {\n      try {\n        console.log('Fetching patients with params:', params);\n        const response = await getAdmissionAssessmentList(params);\n        console.log('API Response:', response);\n        if (response.data && response.data.data) {\n          console.log('Setting patients:', response.data.data.list);\n          commit('setPatients', response.data.data.list);\n        } else {\n          console.warn('Invalid response format:', response);\n        }\n      } catch (error) {\n        console.error('获取患者列表失败:', error);\n      }\n    },\n    async updateHealthAssessment({\n      commit\n    }, payload) {\n      try {\n        await submitHealthAssessment(payload);\n        commit('updatePatientHealthAssessment', {\n          patientId: payload.patientId,\n          status: payload.status === 'completed' ? '完成' : payload.status === 'rejected' ? '不同意入院' : '待评估',\n          time: payload.time,\n          operator: payload.operator\n        });\n      } catch (error) {\n        console.error('更新健康评估失败:', error);\n        throw error;\n      }\n    },\n    async updateCareAssessment({\n      commit\n    }, payload) {\n      try {\n        await submitCareAssessment(payload);\n        commit('updatePatientCareAssessment', {\n          patientId: payload.patientId,\n          status: payload.status === 'completed' ? '完成' : payload.status === 'rejected' ? '不同意入院' : '待评估',\n          time: payload.time,\n          operator: payload.operator\n        });\n      } catch (error) {\n        console.error('更新照护评估失败:', error);\n        throw error;\n      }\n    },\n    async fetchHealthAssessmentDetail(commit, id) {\n      const response = await getHealthAssessmentDetail(id);\n      return response;\n    },\n    async fetchCareAssessmentDetail(commit, id) {\n      const response = await getCareAssessmentDetail(id);\n      return response;\n    },\n    async uploadMedicalReport(commit, payload) {\n      const response = await uploadMedicalReport(payload);\n      return response;\n    },\n    async finishAdmission({\n      commit\n    }, patientId) {\n      try {\n        // 这里可以添加完成入院的 API 调用\n        commit('completeAdmission', patientId);\n      } catch (error) {\n        console.error('完成入院失败:', error);\n        throw error;\n      }\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["Vue","Vuex","getAdmissionAssessmentList","getHealthAssessmentDetail","submitHealthAssessment","getCareAssessmentDetail","submitCareAssessment","uploadMedicalReport","use","Store","state","patients","getters","pendingAdmissionCount","filter","patient","healthStatus","careStatus","length","pendingDischargeCount","p","status","mutations","setPatients","updatePatientHealthAssessment","patientId","time","operator","find","healthTime","healthOperator","updatePatientCareAssessment","careTime","careOperator","completeAdmission","id","admissionCompleted","actions","fetchPatients","commit","params","console","log","response","data","list","warn","error","updateHealthAssessment","payload","updateCareAssessment","fetchHealthAssessmentDetail","fetchCareAssessmentDetail","finishAdmission","modules"],"sources":["/Users/seaocean/projects/test/hospital/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport { getAdmissionAssessmentList, getHealthAssessmentDetail, submitHealthAssessment, getCareAssessmentDetail, submitCareAssessment, uploadMedicalReport } from '../api/admission'\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    patients: []\r\n  },\r\n  getters: {\r\n    pendingAdmissionCount(state) {\r\n      return state.patients.filter(patient =>\r\n        patient.healthStatus === '待评估' ||\r\n        patient.careStatus === '待评估'\r\n      ).length;\r\n    },\r\n    pendingDischargeCount(state) {\r\n      return state.patients.filter(p => p.status === '待出院').length;\r\n    }\r\n  },\r\n  mutations: {\r\n    setPatients(state, patients) {\r\n      state.patients = patients;\r\n    },\r\n    updatePatientHealthAssessment(state, { patientId, status, time, operator }) {\r\n      const patient = state.patients.find(p => p.patientId === patientId);\r\n      if (patient) {\r\n        patient.healthStatus = status;\r\n        patient.healthTime = time;\r\n        patient.healthOperator = operator;\r\n      }\r\n    },\r\n    updatePatientCareAssessment(state, { patientId, status, time, operator }) {\r\n      const patient = state.patients.find(p => p.patientId === patientId);\r\n      if (patient) {\r\n        patient.careStatus = status;\r\n        patient.careTime = time;\r\n        patient.careOperator = operator;\r\n      }\r\n    },\r\n    completeAdmission(state, patientId) {\r\n      const patient = state.patients.find(p => p.id === patientId);\r\n      if (patient) {\r\n        patient.admissionCompleted = true;\r\n      }\r\n    }\r\n  },\r\n  actions: {\r\n    async fetchPatients({ commit }, params) {\r\n      try {\r\n        console.log('Fetching patients with params:', params);\r\n        const response = await getAdmissionAssessmentList(params);\r\n        console.log('API Response:', response);\r\n        if (response.data && response.data.data) {\r\n          console.log('Setting patients:', response.data.data.list);\r\n          commit('setPatients', response.data.data.list);\r\n        } else {\r\n          console.warn('Invalid response format:', response);\r\n        }\r\n      } catch (error) {\r\n        console.error('获取患者列表失败:', error);\r\n      }\r\n    },\r\n    async updateHealthAssessment({ commit }, payload) {\r\n      try {\r\n        await submitHealthAssessment(payload);\r\n        commit('updatePatientHealthAssessment', {\r\n          patientId: payload.patientId,\r\n          status: payload.status === 'completed' ? '完成' :\r\n            payload.status === 'rejected' ? '不同意入院' : '待评估',\r\n          time: payload.time,\r\n          operator: payload.operator\r\n        });\r\n      } catch (error) {\r\n        console.error('更新健康评估失败:', error);\r\n        throw error;\r\n      }\r\n    },\r\n    async updateCareAssessment({ commit }, payload) {\r\n      try {\r\n        await submitCareAssessment(payload);\r\n        commit('updatePatientCareAssessment', {\r\n          patientId: payload.patientId,\r\n          status: payload.status === 'completed' ? '完成' :\r\n            payload.status === 'rejected' ? '不同意入院' : '待评估',\r\n          time: payload.time,\r\n          operator: payload.operator\r\n        });\r\n      } catch (error) {\r\n        console.error('更新照护评估失败:', error);\r\n        throw error;\r\n      }\r\n    },\r\n    async fetchHealthAssessmentDetail(commit, id) {\r\n      const response = await getHealthAssessmentDetail(id);\r\n      return response;\r\n    },\r\n    async fetchCareAssessmentDetail(commit, id) {\r\n      const response = await getCareAssessmentDetail(id);\r\n      return response;\r\n    },\r\n    async uploadMedicalReport(commit, payload) {\r\n      const response = await uploadMedicalReport(payload);\r\n      return response;\r\n    },\r\n    async finishAdmission({ commit }, patientId) {\r\n      try {\r\n        // 这里可以添加完成入院的 API 调用\r\n        commit('completeAdmission', patientId);\r\n      } catch (error) {\r\n        console.error('完成入院失败:', error);\r\n        throw error;\r\n      }\r\n    }\r\n  },\r\n  modules: {\r\n  }\r\n}) "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}