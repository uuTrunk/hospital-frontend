{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nexport default {\n  name: 'SymptomDialog',\n  props: {\n    visible: Boolean,\n    type: String,\n    initialSelected: {\n      type: Array,\n      default: () => []\n    }\n  },\n  data() {\n    return {\n      searchKeyword: '',\n      selectedSymptoms: [],\n      commonSymptoms: {\n        '心脏类': [{\n          id: 1,\n          name: '高血压'\n        }, {\n          id: 2,\n          name: '心脏病'\n        }, {\n          id: 3,\n          name: '心绞痛'\n        }, {\n          id: 4,\n          name: '冠心病'\n        }, {\n          id: 5,\n          name: '心律不齐'\n        }],\n        '神经类': [{\n          id: 6,\n          name: '头痛'\n        }, {\n          id: 7,\n          name: '偏头痛'\n        }, {\n          id: 8,\n          name: '癫痫'\n        }, {\n          id: 9,\n          name: '帕金森'\n        }, {\n          id: 10,\n          name: '失眠'\n        }],\n        '消化系统': [{\n          id: 11,\n          name: '胃病'\n        }, {\n          id: 12,\n          name: '胃炎'\n        }, {\n          id: 13,\n          name: '胃溃疡'\n        }, {\n          id: 14,\n          name: '肠炎'\n        }, {\n          id: 15,\n          name: '十二指肠溃疡'\n        }],\n        '呼吸系统': [{\n          id: 16,\n          name: '哮喘'\n        }, {\n          id: 17,\n          name: '支气管炎'\n        }, {\n          id: 18,\n          name: '肺炎'\n        }, {\n          id: 19,\n          name: '肺结核'\n        }, {\n          id: 20,\n          name: '肺气肿'\n        }],\n        '代谢类': [{\n          id: 21,\n          name: '糖尿病'\n        }, {\n          id: 22,\n          name: '高血脂'\n        }, {\n          id: 23,\n          name: '痛风'\n        }, {\n          id: 24,\n          name: '肥胖'\n        }, {\n          id: 25,\n          name: '甲状腺功能亢进'\n        }]\n      }\n    };\n  },\n  computed: {\n    title() {\n      return `添加${this.type}`;\n    },\n    filteredSymptoms() {\n      if (!this.searchKeyword) {\n        return this.commonSymptoms;\n      }\n      const result = {};\n      for (const [category, symptoms] of Object.entries(this.commonSymptoms)) {\n        const filtered = symptoms.filter(s => s.name.toLowerCase().includes(this.searchKeyword.toLowerCase()));\n        if (filtered.length > 0) {\n          result[category] = filtered;\n        }\n      }\n      return result;\n    }\n  },\n  methods: {\n    isSelected(id) {\n      return this.selectedSymptoms.includes(id);\n    },\n    toggleSymptom(symptom) {\n      const index = this.selectedSymptoms.indexOf(symptom.id);\n      if (index === -1) {\n        this.selectedSymptoms.push(symptom.id);\n      } else {\n        this.selectedSymptoms.splice(index, 1);\n      }\n    },\n    getSelectedSymptomsData() {\n      const result = [];\n      for (const category of Object.values(this.commonSymptoms)) {\n        for (const symptom of category) {\n          if (this.selectedSymptoms.includes(symptom.id)) {\n            result.push(symptom);\n          }\n        }\n      }\n      return result;\n    },\n    confirm() {\n      this.$emit('confirm', this.getSelectedSymptomsData());\n    },\n    cancel() {\n      this.$emit('cancel');\n    }\n  },\n  created() {\n    this.selectedSymptoms = [...this.initialSelected];\n  }\n};","map":{"version":3,"names":["name","props","visible","Boolean","type","String","initialSelected","Array","default","data","searchKeyword","selectedSymptoms","commonSymptoms","id","computed","title","filteredSymptoms","result","category","symptoms","Object","entries","filtered","filter","s","toLowerCase","includes","length","methods","isSelected","toggleSymptom","symptom","index","indexOf","push","splice","getSelectedSymptomsData","values","confirm","$emit","cancel","created"],"sources":["src/components/SymptomDialog.vue"],"sourcesContent":["<template>\r\n  <div class=\"dialog-container\" v-if=\"visible\">\r\n    <div class=\"dialog-mask\" @click=\"cancel\"></div>\r\n    <div class=\"dialog-content\">\r\n      <div class=\"dialog-header\">\r\n        <h3>{{ title }}</h3>\r\n        <i class=\"icon-close\" @click=\"cancel\"></i>\r\n      </div>\r\n      \r\n      <div class=\"dialog-body\">\r\n        <div class=\"search-box\">\r\n          <input \r\n            type=\"text\" \r\n            v-model=\"searchKeyword\" \r\n            placeholder=\"搜索疾病名称\" \r\n            class=\"search-input\"\r\n          />\r\n        </div>\r\n        \r\n        <div class=\"symptoms-list\">\r\n          <div class=\"category\" v-for=\"(items, category) in filteredSymptoms\" :key=\"category\">\r\n            <div class=\"category-title\">{{ category }}</div>\r\n            <div class=\"symptoms-grid\">\r\n              <div\r\n                v-for=\"symptom in items\"\r\n                :key=\"symptom.id\"\r\n                class=\"symptom-item\"\r\n                :class=\"{ selected: isSelected(symptom.id) }\"\r\n                @click=\"toggleSymptom(symptom)\"\r\n              >\r\n                {{ symptom.name }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"dialog-footer\">\r\n        <button class=\"cancel-btn\" @click=\"cancel\">取消</button>\r\n        <button class=\"confirm-btn\" @click=\"confirm\">确认</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'SymptomDialog',\r\n  props: {\r\n    visible: Boolean,\r\n    type: String,\r\n    initialSelected: {\r\n      type: Array,\r\n      default: () => []\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      searchKeyword: '',\r\n      selectedSymptoms: [],\r\n      commonSymptoms: {\r\n        '心脏类': [\r\n          { id: 1, name: '高血压' },\r\n          { id: 2, name: '心脏病' },\r\n          { id: 3, name: '心绞痛' },\r\n          { id: 4, name: '冠心病' },\r\n          { id: 5, name: '心律不齐' }\r\n        ],\r\n        '神经类': [\r\n          { id: 6, name: '头痛' },\r\n          { id: 7, name: '偏头痛' },\r\n          { id: 8, name: '癫痫' },\r\n          { id: 9, name: '帕金森' },\r\n          { id: 10, name: '失眠' }\r\n        ],\r\n        '消化系统': [\r\n          { id: 11, name: '胃病' },\r\n          { id: 12, name: '胃炎' },\r\n          { id: 13, name: '胃溃疡' },\r\n          { id: 14, name: '肠炎' },\r\n          { id: 15, name: '十二指肠溃疡' }\r\n        ],\r\n        '呼吸系统': [\r\n          { id: 16, name: '哮喘' },\r\n          { id: 17, name: '支气管炎' },\r\n          { id: 18, name: '肺炎' },\r\n          { id: 19, name: '肺结核' },\r\n          { id: 20, name: '肺气肿' }\r\n        ],\r\n        '代谢类': [\r\n          { id: 21, name: '糖尿病' },\r\n          { id: 22, name: '高血脂' },\r\n          { id: 23, name: '痛风' },\r\n          { id: 24, name: '肥胖' },\r\n          { id: 25, name: '甲状腺功能亢进' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    title() {\r\n      return `添加${this.type}`;\r\n    },\r\n    filteredSymptoms() {\r\n      if (!this.searchKeyword) {\r\n        return this.commonSymptoms;\r\n      }\r\n      \r\n      const result = {};\r\n      \r\n      for (const [category, symptoms] of Object.entries(this.commonSymptoms)) {\r\n        const filtered = symptoms.filter(s => \r\n          s.name.toLowerCase().includes(this.searchKeyword.toLowerCase())\r\n        );\r\n        \r\n        if (filtered.length > 0) {\r\n          result[category] = filtered;\r\n        }\r\n      }\r\n      \r\n      return result;\r\n    }\r\n  },\r\n  methods: {\r\n    isSelected(id) {\r\n      return this.selectedSymptoms.includes(id);\r\n    },\r\n    toggleSymptom(symptom) {\r\n      const index = this.selectedSymptoms.indexOf(symptom.id);\r\n      if (index === -1) {\r\n        this.selectedSymptoms.push(symptom.id);\r\n      } else {\r\n        this.selectedSymptoms.splice(index, 1);\r\n      }\r\n    },\r\n    getSelectedSymptomsData() {\r\n      const result = [];\r\n      \r\n      for (const category of Object.values(this.commonSymptoms)) {\r\n        for (const symptom of category) {\r\n          if (this.selectedSymptoms.includes(symptom.id)) {\r\n            result.push(symptom);\r\n          }\r\n        }\r\n      }\r\n      \r\n      return result;\r\n    },\r\n    confirm() {\r\n      this.$emit('confirm', this.getSelectedSymptomsData());\r\n    },\r\n    cancel() {\r\n      this.$emit('cancel');\r\n    }\r\n  },\r\n  created() {\r\n    this.selectedSymptoms = [...this.initialSelected];\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.dialog-container {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.dialog-mask {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.dialog-content {\r\n  position: relative;\r\n  width: 660px;\r\n  max-width: 90%;\r\n  max-height: 80%;\r\n  background-color: white;\r\n  border-radius: 4px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  z-index: 1001;\r\n}\r\n\r\n.dialog-header {\r\n  padding: 16px;\r\n  border-bottom: 1px solid #eee;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.dialog-header h3 {\r\n  margin: 0;\r\n  font-size: 18px;\r\n}\r\n\r\n.icon-close {\r\n  cursor: pointer;\r\n  width: 24px;\r\n  height: 24px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 50%;\r\n}\r\n\r\n.icon-close:hover {\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n.icon-close:after {\r\n  content: \"×\";\r\n  font-size: 20px;\r\n  color: #999;\r\n}\r\n\r\n.dialog-body {\r\n  padding: 16px;\r\n  overflow-y: auto;\r\n  flex: 1;\r\n}\r\n\r\n.search-box {\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.search-input {\r\n  width: 100%;\r\n  padding: 8px 12px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n}\r\n\r\n.category {\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.category-title {\r\n  font-weight: bold;\r\n  margin-bottom: 12px;\r\n  color: #333;\r\n}\r\n\r\n.symptoms-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  gap: 12px;\r\n}\r\n\r\n.symptom-item {\r\n  padding: 6px 12px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.symptom-item:hover {\r\n  border-color: #2196f3;\r\n  color: #2196f3;\r\n}\r\n\r\n.symptom-item.selected {\r\n  background-color: #e3f2fd;\r\n  border-color: #2196f3;\r\n  color: #2196f3;\r\n}\r\n\r\n.dialog-footer {\r\n  padding: 16px;\r\n  border-top: 1px solid #eee;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.cancel-btn {\r\n  background-color: #f5f5f5;\r\n  color: #666;\r\n  border: 1px solid #ddd;\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  margin-right: 12px;\r\n}\r\n\r\n.confirm-btn {\r\n  background-color: #2196f3;\r\n  color: white;\r\n  border: none;\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}