{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { login } from '@/api/user';\nexport default {\n  name: 'LoginView',\n  data() {\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      loginRules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      },\n      loading: false\n    };\n  },\n  methods: {\n    handleLogin() {\n      this.$refs.loginForm.validate(async valid => {\n        if (valid) {\n          this.loading = true;\n          try {\n            const {\n              data\n            } = await login(this.loginForm);\n            window.sessionStorage.setItem('token', data.token);\n            this.$router.push('/home');\n            this.$message.success('登录成功');\n          } catch (error) {\n            this.$message.error(error.message || '登录失败');\n          } finally {\n            this.loading = false;\n          }\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["login","name","data","loginForm","username","password","loginRules","required","message","trigger","loading","methods","handleLogin","$refs","validate","valid","window","sessionStorage","setItem","token","$router","push","$message","success","error"],"sources":["src/views/LoginView.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <el-card class=\"login-card\">\n      <div class=\"title\">护理管理系统</div>\n      <el-form :model=\"loginForm\" :rules=\"loginRules\" ref=\"loginForm\" class=\"login-form\">\n        <el-form-item prop=\"username\">\n          <el-input \n            v-model=\"loginForm.username\"\n            prefix-icon=\"el-icon-user\"\n            placeholder=\"请输入用户名\">\n          </el-input>\n        </el-form-item>\n        <el-form-item prop=\"password\">\n          <el-input \n            v-model=\"loginForm.password\"\n            prefix-icon=\"el-icon-lock\"\n            type=\"password\"\n            placeholder=\"请输入密码\"\n            @keyup.enter.native=\"handleLogin\">\n          </el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button \n            type=\"primary\" \n            :loading=\"loading\"\n            class=\"login-button\"\n            @click=\"handleLogin\">\n            登录\n          </el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport { login } from '@/api/user'\n\nexport default {\n  name: 'LoginView',\n  data() {\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      loginRules: {\n        username: [\n          { required: true, message: '请输入用户名', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' }\n        ]\n      },\n      loading: false\n    }\n  },\n  methods: {\n    handleLogin() {\n      this.$refs.loginForm.validate(async valid => {\n        if (valid) {\n          this.loading = true\n          try {\n            const { data } = await login(this.loginForm)\n            window.sessionStorage.setItem('token', data.token)\n            this.$router.push('/home')\n            this.$message.success('登录成功')\n          } catch (error) {\n            this.$message.error(error.message || '登录失败')\n          } finally {\n            this.loading = false\n          }\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.login-container {\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #f5f7fa;\n}\n\n.login-card {\n  width: 400px;\n  padding: 20px;\n}\n\n.title {\n  text-align: center;\n  font-size: 24px;\n  color: #303133;\n  margin-bottom: 30px;\n}\n\n.login-form {\n  margin-top: 20px;\n}\n\n.login-button {\n  width: 100%;\n}\n</style> "],"mappings":";AAoCA,SAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;QACAC,QAAA;QACAC,QAAA;MACA;MACAC,UAAA;QACAF,QAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,QAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;MACAC,OAAA;IACA;EACA;EACAC,OAAA;IACAC,YAAA;MACA,KAAAC,KAAA,CAAAV,SAAA,CAAAW,QAAA,OAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAL,OAAA;UACA;YACA;cAAAR;YAAA,UAAAF,KAAA,MAAAG,SAAA;YACAa,MAAA,CAAAC,cAAA,CAAAC,OAAA,UAAAhB,IAAA,CAAAiB,KAAA;YACA,KAAAC,OAAA,CAAAC,IAAA;YACA,KAAAC,QAAA,CAAAC,OAAA;UACA,SAAAC,KAAA;YACA,KAAAF,QAAA,CAAAE,KAAA,CAAAA,KAAA,CAAAhB,OAAA;UACA;YACA,KAAAE,OAAA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}