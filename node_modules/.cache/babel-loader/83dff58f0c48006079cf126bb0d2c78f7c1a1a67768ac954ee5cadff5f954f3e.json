{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport { getAdmissionAssessmentList, getHealthAssessmentDetail, submitHealthAssessment, getCareAssessmentDetail, submitCareAssessment, uploadMedicalReport } from '../api/admission';\nimport axios from 'axios';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    patients: [],\n    currentPatient: null\n  },\n  getters: {\n    pendingAdmissionCount(state) {\n      return state.patients.filter(patient => patient.healthStatus === '待评估' || patient.careStatus === '待评估').length;\n    },\n    pendingDischargeCount(state) {\n      return state.patients.filter(p => p.status === '待出院').length;\n    }\n  },\n  mutations: {\n    SET_PATIENTS(state, patients) {\n      state.patients = patients;\n    },\n    SET_CURRENT_PATIENT(state, patient) {\n      state.currentPatient = patient;\n    },\n    updatePatientHealthAssessment(state, {\n      patientId,\n      status,\n      time,\n      operator\n    }) {\n      const patient = state.patients.find(p => p.patientId === patientId);\n      if (patient) {\n        patient.healthStatus = status;\n        patient.healthTime = time;\n        patient.healthOperator = operator;\n      }\n    },\n    updatePatientCareAssessment(state, {\n      patientId,\n      status,\n      time,\n      operator\n    }) {\n      const patient = state.patients.find(p => p.patientId === patientId);\n      if (patient) {\n        patient.careStatus = status;\n        patient.careTime = time;\n        patient.careOperator = operator;\n      }\n    },\n    completeAdmission(state, patientId) {\n      const patient = state.patients.find(p => p.id === patientId);\n      if (patient) {\n        patient.admissionCompleted = true;\n      }\n    }\n  },\n  actions: {\n    async fetchPatients({\n      commit\n    }) {\n      try {\n        const response = await axios.get('/api/patients');\n        commit('SET_PATIENTS', response.data.data);\n      } catch (error) {\n        console.error('获取患者列表失败:', error);\n        throw error;\n      }\n    },\n    async fetchPatientById({\n      commit\n    }, patientId) {\n      try {\n        const response = await axios.get(`/api/patient/${patientId}`);\n        if (response.data.code === 200) {\n          const patientData = response.data.data;\n          commit('SET_CURRENT_PATIENT', patientData);\n          return patientData;\n        } else {\n          throw new Error(response.data.message || '获取患者信息失败');\n        }\n      } catch (error) {\n        console.error('获取患者信息失败:', error);\n        throw error;\n      }\n    },\n    async updateHealthAssessment({\n      commit\n    }, payload) {\n      try {\n        await submitHealthAssessment(payload);\n        commit('updatePatientHealthAssessment', {\n          patientId: payload.patientId,\n          status: payload.status === 'completed' ? '完成' : payload.status === 'rejected' ? '不同意入院' : '待评估',\n          time: payload.time,\n          operator: payload.operator\n        });\n      } catch (error) {\n        console.error('更新健康评估失败:', error);\n        throw error;\n      }\n    },\n    async updateCareAssessment({\n      commit\n    }, payload) {\n      try {\n        await submitCareAssessment(payload);\n        commit('updatePatientCareAssessment', {\n          patientId: payload.patientId,\n          status: payload.status === 'completed' ? '完成' : payload.status === 'rejected' ? '不同意入院' : '待评估',\n          time: payload.time,\n          operator: payload.operator\n        });\n      } catch (error) {\n        console.error('更新照护评估失败:', error);\n        throw error;\n      }\n    },\n    async fetchHealthAssessmentDetail(commit, id) {\n      const response = await getHealthAssessmentDetail(id);\n      return response;\n    },\n    async fetchCareAssessmentDetail(commit, id) {\n      const response = await getCareAssessmentDetail(id);\n      return response;\n    },\n    async uploadMedicalReport(commit, payload) {\n      const response = await uploadMedicalReport(payload);\n      return response;\n    },\n    async finishAdmission({\n      commit\n    }, patientId) {\n      try {\n        // 这里可以添加完成入院的 API 调用\n        commit('completeAdmission', patientId);\n      } catch (error) {\n        console.error('完成入院失败:', error);\n        throw error;\n      }\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["Vue","Vuex","getAdmissionAssessmentList","getHealthAssessmentDetail","submitHealthAssessment","getCareAssessmentDetail","submitCareAssessment","uploadMedicalReport","axios","use","Store","state","patients","currentPatient","getters","pendingAdmissionCount","filter","patient","healthStatus","careStatus","length","pendingDischargeCount","p","status","mutations","SET_PATIENTS","SET_CURRENT_PATIENT","updatePatientHealthAssessment","patientId","time","operator","find","healthTime","healthOperator","updatePatientCareAssessment","careTime","careOperator","completeAdmission","id","admissionCompleted","actions","fetchPatients","commit","response","get","data","error","console","fetchPatientById","code","patientData","Error","message","updateHealthAssessment","payload","updateCareAssessment","fetchHealthAssessmentDetail","fetchCareAssessmentDetail","finishAdmission","modules"],"sources":["/Users/seaocean/projects/test/hospital/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport { getAdmissionAssessmentList, getHealthAssessmentDetail, submitHealthAssessment, getCareAssessmentDetail, submitCareAssessment, uploadMedicalReport } from '../api/admission'\nimport axios from 'axios'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    patients: [],\n    currentPatient: null\n  },\n  getters: {\n    pendingAdmissionCount(state) {\n      return state.patients.filter(patient =>\n        patient.healthStatus === '待评估' ||\n        patient.careStatus === '待评估'\n      ).length;\n    },\n    pendingDischargeCount(state) {\n      return state.patients.filter(p => p.status === '待出院').length;\n    }\n  },\n  mutations: {\n    SET_PATIENTS(state, patients) {\n      state.patients = patients\n    },\n    SET_CURRENT_PATIENT(state, patient) {\n      state.currentPatient = patient\n    },\n    updatePatientHealthAssessment(state, { patientId, status, time, operator }) {\n      const patient = state.patients.find(p => p.patientId === patientId);\n      if (patient) {\n        patient.healthStatus = status;\n        patient.healthTime = time;\n        patient.healthOperator = operator;\n      }\n    },\n    updatePatientCareAssessment(state, { patientId, status, time, operator }) {\n      const patient = state.patients.find(p => p.patientId === patientId);\n      if (patient) {\n        patient.careStatus = status;\n        patient.careTime = time;\n        patient.careOperator = operator;\n      }\n    },\n    completeAdmission(state, patientId) {\n      const patient = state.patients.find(p => p.id === patientId);\n      if (patient) {\n        patient.admissionCompleted = true;\n      }\n    }\n  },\n  actions: {\n    async fetchPatients({ commit }) {\n      try {\n        const response = await axios.get('/api/patients')\n        commit('SET_PATIENTS', response.data.data)\n      } catch (error) {\n        console.error('获取患者列表失败:', error)\n        throw error\n      }\n    },\n    async fetchPatientById({ commit }, patientId) {\n      try {\n        const response = await axios.get(`/api/patient/${patientId}`);\n        if (response.data.code === 200) {\n          const patientData = response.data.data;\n          commit('SET_CURRENT_PATIENT', patientData);\n          return patientData;\n        } else {\n          throw new Error(response.data.message || '获取患者信息失败');\n        }\n      } catch (error) {\n        console.error('获取患者信息失败:', error);\n        throw error;\n      }\n    },\n    async updateHealthAssessment({ commit }, payload) {\n      try {\n        await submitHealthAssessment(payload);\n        commit('updatePatientHealthAssessment', {\n          patientId: payload.patientId,\n          status: payload.status === 'completed' ? '完成' :\n            payload.status === 'rejected' ? '不同意入院' : '待评估',\n          time: payload.time,\n          operator: payload.operator\n        });\n      } catch (error) {\n        console.error('更新健康评估失败:', error);\n        throw error;\n      }\n    },\n    async updateCareAssessment({ commit }, payload) {\n      try {\n        await submitCareAssessment(payload);\n        commit('updatePatientCareAssessment', {\n          patientId: payload.patientId,\n          status: payload.status === 'completed' ? '完成' :\n            payload.status === 'rejected' ? '不同意入院' : '待评估',\n          time: payload.time,\n          operator: payload.operator\n        });\n      } catch (error) {\n        console.error('更新照护评估失败:', error);\n        throw error;\n      }\n    },\n    async fetchHealthAssessmentDetail(commit, id) {\n      const response = await getHealthAssessmentDetail(id);\n      return response;\n    },\n    async fetchCareAssessmentDetail(commit, id) {\n      const response = await getCareAssessmentDetail(id);\n      return response;\n    },\n    async uploadMedicalReport(commit, payload) {\n      const response = await uploadMedicalReport(payload);\n      return response;\n    },\n    async finishAdmission({ commit }, patientId) {\n      try {\n        // 这里可以添加完成入院的 API 调用\n        commit('completeAdmission', patientId);\n      } catch (error) {\n        console.error('完成入院失败:', error);\n        throw error;\n      }\n    }\n  },\n  modules: {\n  }\n}) "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}