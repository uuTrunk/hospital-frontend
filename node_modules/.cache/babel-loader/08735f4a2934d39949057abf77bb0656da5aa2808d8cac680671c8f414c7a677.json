{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\n// 假设 OrderDialog 组件已存在且功能完善\nimport OrderDialog from '@/components/OrderDialog.vue';\nexport default {\n  name: 'MedicalManagement',\n  // Keep the name consistent with routing\n  components: {\n    OrderDialog\n  },\n  data() {\n    return {\n      patientSearchKeyword: '',\n      // 左侧患者搜索关键字\n      allPatientList: [],\n      // 所有患者列表（模拟）\n      filteredPatientList: [],\n      // 过滤后的患者列表\n      selectedPatient: null,\n      // 当前选中的患者对象\n\n      activeTab: 'temp',\n      // 右侧医嘱类型切换: temp or long\n      smartManagementEnabled: false,\n      // 智能管理开关\n\n      temporaryOrders: [],\n      // 选中患者的临时医嘱\n      longTermOrders: [],\n      // 选中患者的长期医嘱\n      pagination: {\n        currentPage: 1,\n        pageSize: 10,\n        total: 0\n      },\n      // 对话框状态\n      showOrderDialog: false,\n      showStopDialog: false,\n      showPrintDialog: false,\n      isEdit: false,\n      editingOrder: null,\n      // 当前正在编辑或停止的医嘱\n      stopTime: '',\n      // 停止时间选择器\n      printOrders: [],\n      // 待打印的医嘱列表\n      printOrderType: 'temp',\n      // 打印预览时判断是临时还是长期\n      showEmptyPrintDialog: false,\n      // 控制空白打印对话框\n      includePatientInfoOnEmpty: true,\n      // 空白打印时是否包含患者信息\n      startPrintRow: 1 // For the 'start printing from row' input\n    };\n  },\n  computed: {\n    // 根据activeTab动态返回当前应显示的医嘱列表\n    currentOrders() {\n      const orders = this.activeTab === 'temp' ? this.temporaryOrders : this.longTermOrders;\n      // 模拟分页\n      const start = (this.pagination.currentPage - 1) * this.pagination.pageSize;\n      const end = start + this.pagination.pageSize;\n      return orders.slice(start, end);\n    },\n    // 计算当前医嘱列表的总数（用于分页）\n    currentTotalOrders() {\n      return this.activeTab === 'temp' ? this.temporaryOrders.length : this.longTermOrders.length;\n    }\n  },\n  watch: {\n    // 监听 currentTotalOrders 的变化，更新分页总数\n    currentTotalOrders(newTotal) {\n      this.pagination.total = newTotal;\n    },\n    // 当选中的患者变化时，如果之前没有患者，默认勾选包含信息\n    selectedPatient(newPatient, oldPatient) {\n      if (newPatient && !oldPatient) {\n        this.includePatientInfoOnEmpty = true;\n      } else if (!newPatient) {\n        this.includePatientInfoOnEmpty = false; // 没有选中患者时禁用并取消勾选\n      }\n    }\n  },\n  created() {\n    this.fetchAllPatients(); // 初始化时获取所有患者列表\n  },\n  methods: {\n    // --- 左侧患者列表相关方法 ---\n    fetchAllPatients() {\n      console.log('Fetching all patients...');\n      // 模拟API获取所有患者基础信息\n      this.allPatientList = [{\n        id: '1',\n        name: '李大爷',\n        roomNumber: '2201-01',\n        admissionId: '122455478',\n        gender: '男',\n        age: 86,\n        admissionDate: '2021-02',\n        nursingLevel: '二级护理'\n      }, {\n        id: '2',\n        name: '王阿姨',\n        roomNumber: '2201-02',\n        admissionId: '122455479',\n        gender: '女',\n        age: 75,\n        admissionDate: '2021-03',\n        nursingLevel: '一级护理'\n      }, {\n        id: '3',\n        name: '张三',\n        roomNumber: '2202-01',\n        admissionId: '122455480',\n        gender: '男',\n        age: 68,\n        admissionDate: '2021-04',\n        nursingLevel: '三级护理'\n      }, {\n        id: '4',\n        name: '刘能',\n        roomNumber: '2202-02',\n        admissionId: '122455481',\n        gender: '男',\n        age: 72,\n        admissionDate: '2021-05',\n        nursingLevel: '特级护理'\n      }];\n      this.filterPatientList(); // 初始化显示过滤后的列表\n    },\n    filterPatientList() {\n      const keyword = this.patientSearchKeyword.trim().toLowerCase();\n      if (!keyword) {\n        this.filteredPatientList = [...this.allPatientList];\n      } else {\n        this.filteredPatientList = this.allPatientList.filter(p => p.name.toLowerCase().includes(keyword) || p.admissionId.includes(keyword));\n      }\n    },\n    selectPatient(patient) {\n      if (this.selectedPatient && this.selectedPatient.id === patient.id) return; // Avoid re-fetching if already selected\n      console.log('Selected patient:', patient);\n      this.selectedPatient = patient;\n      this.activeTab = 'temp'; // 默认显示临时医嘱\n      this.pagination.currentPage = 1; // 重置分页\n      this.fetchOrdersForSelectedPatient(); // 获取选中患者的医嘱\n    },\n    // --- 右侧医嘱管理相关方法 ---\n    fetchOrdersForSelectedPatient() {\n      if (!this.selectedPatient) return;\n      console.log(`Fetching orders for patient ID: ${this.selectedPatient.id}`);\n      // 模拟API获取选中患者的医嘱\n      // --- Temp Orders Example ---\n      const temp = [{\n        time: '05-12 09:10',\n        group: '1',\n        content: '阿莫西林胶囊\\n0.25g*20粒/盒',\n        dosage: '0.5g',\n        usage: '口服(po), 餐前(ac), 禁止饮酒',\n        days: '2',\n        total: '2盒'\n      }, {\n        time: '05-12 09:15',\n        group: '',\n        content: '行总管置换术一次',\n        dosage: '',\n        usage: '',\n        days: '',\n        total: ''\n      }, {\n        time: '05-13 10:00',\n        group: '2',\n        content: '0.9%葡萄糖注射液\\n500ml*1瓶/盒',\n        dosage: '500ml',\n        usage: '静脉滴注(ivdrip), 每天2次(bid)',\n        days: '3',\n        total: '6瓶'\n      }];\n      // --- Long Term Orders Example ---\n      const long = [{\n        time: '05-10 08:00',\n        group: '',\n        content: '胰岛素注射液',\n        dosage: '10U',\n        usage: '皮下注射(sc), 餐前30分钟',\n        stopTime: ''\n      }, {\n        time: '05-10 08:05',\n        group: '',\n        content: '二甲双胍片',\n        dosage: '0.5g',\n        usage: '口服(po), 每天2次(bid)',\n        stopTime: '07-14 09:10'\n      }];\n      // 实际应用中根据 this.selectedPatient.id 调用API\n      this.temporaryOrders = temp;\n      this.longTermOrders = long;\n      // 更新分页总数 (需要在获取数据后更新)\n      this.pagination.total = this.currentTotalOrders;\n    },\n    switchTab(tab) {\n      if (this.activeTab === tab) return;\n      this.activeTab = tab;\n      this.pagination.currentPage = 1; // 切换tab时重置分页\n      this.pagination.total = this.currentTotalOrders; // 更新分页总数\n    },\n    createNewOrder() {\n      if (!this.selectedPatient) {\n        this.$message.warning('请先在左侧选择患者');\n        return;\n      }\n      console.log(`Navigating to create new ${this.activeTab} order for patient: ${this.selectedPatient.id}`);\n      // Navigate to the detail page, passing patientId and order type\n      this.$router.push({\n        name: 'MedicalOrderDetail',\n        params: {\n          patientId: this.selectedPatient.id\n        },\n        query: {\n          type: this.activeTab\n        } // Pass type as query parameter\n      });\n    },\n    editOrder(order) {\n      if (!this.selectedPatient) {\n        this.$message.warning('请先在左侧选择患者');\n        return;\n      }\n      if (!order || !order.id) {\n        // Assuming orders have a unique ID\n        this.$message.error('无法编辑无效的医嘱记录');\n        return;\n      }\n      console.log(`Navigating to edit ${this.activeTab} order ${order.id} for patient: ${this.selectedPatient.id}`);\n      // Navigate to the detail page for editing\n      this.$router.push({\n        name: 'MedicalOrderDetail',\n        params: {\n          patientId: this.selectedPatient.id\n        },\n        // Pass type and the ID of the order being edited\n        query: {\n          type: this.activeTab,\n          editOrderId: order.id\n        }\n      });\n\n      // Remove old logic that opened a dialog\n      // this.isEdit = true;\n      // this.editingOrder = { ...order, type: this.activeTab }; \n      // this.showOrderDialog = true;\n    },\n    handleOrderSubmit(data) {\n      console.log('Order submitted:', data);\n      if (!this.selectedPatient) return;\n\n      // TODO: 调用API保存医嘱 (data 中应包含患者ID)\n      // 模拟保存成功后的逻辑\n      const targetList = data.type === 'temp' ? this.temporaryOrders : this.longTermOrders;\n      if (this.isEdit) {\n        const index = targetList.findIndex(o => o.time === this.editingOrder.time); // 假设time是唯一标识\n        if (index > -1) {\n          this.$set(targetList, index, data);\n          this.$message.success('医嘱更新成功');\n        } else {\n          this.$message.error('未找到要更新的医嘱');\n        }\n      } else {\n        targetList.unshift(data); // 添加到列表开头\n        this.$message.success('新医嘱添加成功');\n      }\n      this.pagination.total = this.currentTotalOrders; // 更新总数\n      this.showOrderDialog = false;\n      this.editingOrder = null;\n    },\n    stopOrder(order) {\n      this.editingOrder = {\n        ...order\n      };\n      this.stopTime = this.activeTab === 'long' ? order.stopTime || '' : ''; // 初始化停止时间\n      this.showStopDialog = true;\n    },\n    confirmStopOrder() {\n      if (!this.editingOrder) return;\n      console.log('Confirming stop order:', this.editingOrder, 'Stop time:', this.stopTime);\n      // TODO: 调用API停止医嘱\n      // 模拟成功后的逻辑\n      const targetList = this.activeTab === 'temp' ? this.temporaryOrders : this.longTermOrders;\n      const index = targetList.findIndex(o => o.time === this.editingOrder.time); // 假设time是唯一标识\n\n      if (index > -1) {\n        if (this.activeTab === 'long') {\n          if (!this.stopTime) {\n            this.$message.warning('请选择长期医嘱的停止时间');\n            return;\n          }\n          this.$set(targetList[index], 'stopTime', this.stopTime);\n          this.$message.success('长期医嘱已标记停止时间');\n        } else {\n          targetList.splice(index, 1);\n          this.$message.success('临时医嘱已删除');\n        }\n        this.pagination.total = this.currentTotalOrders; // 更新总数\n      } else {\n        this.$message.error('未找到要停止的医嘱');\n      }\n      this.showStopDialog = false;\n      this.editingOrder = null;\n    },\n    printOrder(order) {\n      this.printOrders = [order];\n      this.printOrderType = this.activeTab; // 记录打印类型\n      this.showPrintDialog = true;\n    },\n    printEmptyOrder() {\n      console.log('Opening empty order print dialog');\n      // 如果没有选中患者，默认不勾选包含信息\n      if (!this.selectedPatient) {\n        this.includePatientInfoOnEmpty = false;\n      }\n      this.showEmptyPrintDialog = true;\n    },\n    printCurrentOrderList() {\n      if (!this.selectedPatient) {\n        this.$message.warning('请先选择患者');\n        return;\n      }\n      const ordersToPrint = this.activeTab === 'temp' ? this.temporaryOrders : this.longTermOrders;\n      if (!ordersToPrint || ordersToPrint.length === 0) {\n        this.$message.warning('当前列表没有可打印的医嘱');\n        return;\n      }\n      this.printOrders = [...ordersToPrint];\n      this.printOrderType = this.activeTab;\n      this.startPrintRow = 1; // Reset start row when opening dialog\n      this.showPrintDialog = true;\n      console.log(`Printing all ${this.activeTab} orders for patient ${this.selectedPatient.id}`);\n    },\n    doPrintEmptyOrder() {\n      console.log('Printing empty order sheet...');\n      const printWindow = window.open('', '_blank');\n      const printContentEl = this.$refs.emptyPrintPreviewArea;\n      if (!printContentEl) {\n        console.error('Empty print preview element not found!');\n        this.$message.error('打印预览元素未找到');\n        return;\n      }\n      const printContent = printContentEl.innerHTML;\n\n      // 使用与常规打印类似的样式，但可以按需调整\n      const emptyPrintStyles = `\n            body { font-family: SimSun, serif; margin: 20px; }\n            .empty-print-header { text-align: center; position: relative; margin-bottom: 15px; }\n            .institution-name { font-size: 18px; font-weight: bold; }\n            h1 { font-size: 22px; margin: 5px 0; }\n            .page-number { position: absolute; top: 5px; right: 10px; font-size: 14px; }\n            .patient-info-print { display: flex; justify-content: space-between; margin-bottom: 10px; padding-bottom: 5px; border-bottom: 1px solid #ccc; font-size: 14px; }\n            .patient-info-print span { margin-right: 15px; }\n            .patient-info-print.placeholder span { color: #999; }\n            .empty-print-table { width: 100%; border-collapse: collapse; font-size: 13px; }\n            .empty-print-table th, .empty-print-table td { border: 1px solid #333; height: 35px; /* 控制行高 */ text-align: center; padding: 2px 4px; vertical-align: top; }\n            .empty-print-table th { font-weight: bold; background-color: #f2f2f2; }\n            /* 可以在此添加更多打印特定样式 */\n            @media print {\n                /* 隐藏对话框页脚等非打印元素 */\n                .dialog-footer { display: none; }\n            }\n        `;\n      const html = this.createPrintHtml('空白医嘱单', emptyPrintStyles, printContent);\n      printWindow.document.write(html);\n      printWindow.document.close();\n      // this.showEmptyPrintDialog = false; // 打印后通常不需要立即关闭预览\n    },\n    // 创建一个通用的 HTML 生成函数\n    createPrintHtml(title, styles, content) {\n      const printDoc = document.implementation.createHTMLDocument(title);\n      const styleEl = printDoc.createElement('style');\n      styleEl.textContent = styles;\n      printDoc.head.appendChild(styleEl);\n      const container = printDoc.createElement('div');\n      container.innerHTML = content;\n      printDoc.body.appendChild(container);\n      const scriptEl = printDoc.createElement('script');\n      scriptEl.textContent = `window.onload = function() { window.print(); setTimeout(function() { window.close(); }, 300); };`; // 增加关闭延迟\n      printDoc.body.appendChild(scriptEl);\n      return printDoc.documentElement.outerHTML;\n    },\n    doPrint() {\n      console.log(`Attempting to print starting from row: ${this.startPrintRow}`);\n      // Note: Actually starting print from a specific physical row on paper via browser's print \n      // is not directly possible. This UI element is informational or for manual handling.\n      const printWindow = window.open('', '_blank');\n      // Use a specific ref for the regular print preview area\n      const printContentEl = this.$refs.regularPrintPreviewArea;\n      if (!printContentEl) {\n        console.error('Print preview element (.print-preview) not found!');\n        this.$message.error('打印预览元素未找到');\n        return;\n      }\n      const printContent = printContentEl.innerHTML;\n      const regularPrintStyles = `\n        body { font-family: SimSun, serif; margin: 20px; }\n        .institution-name { text-align: center; font-size: 18px; font-weight: bold; margin-bottom: 5px; }\n        .page-number { position: absolute; top: 5px; right: 10px; font-size: 14px; }\n        .patient-info-print { display: flex; justify-content: space-between; margin-bottom: 10px; padding-bottom: 5px; border-bottom: 1px solid #ccc; font-size: 14px; }\n        .patient-info-print span { margin-right: 15px; }\n        .print-filled-table { width: 100%; border-collapse: collapse; margin-bottom: 20px; font-size: 13px; }\n        .print-filled-table th, .print-filled-table td { border: 1px solid #666; padding: 6px 8px; text-align: center; vertical-align: top; word-break: break-all; }\n        .print-filled-table th { background-color: #f2f2f2; font-weight: bold; }\n        .print-filled-table td:nth-child(2) { text-align: left; } /* Align order content left */\n        .print-filled-table .empty-row td { height: 25px; border: 1px dotted #ccc; } /* Style empty rows */\n        @media print { \n            .dialog-footer { display: none; } \n            @page { size: A4; margin: 15mm; } /* Example print settings */\n        }\n      `;\n      const title = this.printOrderType === 'temp' ? '临时医嘱单' : '长期医嘱单';\n      const html = this.createPrintHtml(title, regularPrintStyles, printContent);\n      printWindow.document.write(html);\n      printWindow.document.close();\n      this.showPrintDialog = false;\n    }\n  }\n};","map":{"version":3,"names":["OrderDialog","name","components","data","patientSearchKeyword","allPatientList","filteredPatientList","selectedPatient","activeTab","smartManagementEnabled","temporaryOrders","longTermOrders","pagination","currentPage","pageSize","total","showOrderDialog","showStopDialog","showPrintDialog","isEdit","editingOrder","stopTime","printOrders","printOrderType","showEmptyPrintDialog","includePatientInfoOnEmpty","startPrintRow","computed","currentOrders","orders","start","end","slice","currentTotalOrders","length","watch","newTotal","newPatient","oldPatient","created","fetchAllPatients","methods","console","log","id","roomNumber","admissionId","gender","age","admissionDate","nursingLevel","filterPatientList","keyword","trim","toLowerCase","filter","p","includes","selectPatient","patient","fetchOrdersForSelectedPatient","temp","time","group","content","dosage","usage","days","long","switchTab","tab","createNewOrder","$message","warning","$router","push","params","patientId","query","type","editOrder","order","error","editOrderId","handleOrderSubmit","targetList","index","findIndex","o","$set","success","unshift","stopOrder","confirmStopOrder","splice","printOrder","printEmptyOrder","printCurrentOrderList","ordersToPrint","doPrintEmptyOrder","printWindow","window","open","printContentEl","$refs","emptyPrintPreviewArea","printContent","innerHTML","emptyPrintStyles","html","createPrintHtml","document","write","close","title","styles","printDoc","implementation","createHTMLDocument","styleEl","createElement","textContent","head","appendChild","container","body","scriptEl","documentElement","outerHTML","doPrint","regularPrintPreviewArea","regularPrintStyles"],"sources":["src/views/MedicalManagement.vue"],"sourcesContent":["<template>\n  <div class=\"medical-management-container\">\n    <!-- 左侧患者选择区域 -->\n    <div class=\"left-panel\">\n      <div class=\"patient-search\">\n        <el-input placeholder=\"姓名/入院编号\" v-model=\"patientSearchKeyword\" clearable @input=\"filterPatientList\">\n          <el-button slot=\"append\" icon=\"el-icon-search\"></el-button>\n        </el-input>\n      </div>\n      <ul class=\"patient-list\">\n        <li\n          v-for=\"patient in filteredPatientList\"\n          :key=\"patient.id\"\n          class=\"patient-item\"\n          :class=\"{ active: selectedPatient && selectedPatient.id === patient.id }\"\n          @click=\"selectPatient(patient)\"\n        >\n          <div class=\"patient-name\">{{ patient.name }}</div>\n          <div class=\"patient-details\">{{ patient.roomNumber }} | {{ patient.admissionId }}</div>\n        </li>\n        <li v-if=\"filteredPatientList.length === 0\" class=\"no-patient\">无匹配患者</li>\n      </ul>\n    </div>\n\n    <!-- 右侧医嘱管理区域 -->\n    <div class=\"right-panel\">\n      <div v-if=\"selectedPatient\">\n        <!-- 顶部患者信息栏 -->\n        <div class=\"patient-info-bar\">\n          <div class=\"avatar\">\n            <span>{{selectedPatient.name ? selectedPatient.name.substring(0,1) : ''}}</span>\n          </div>\n          <div class=\"basic-info\">\n            <div>{{selectedPatient.name}} {{selectedPatient.gender}} {{selectedPatient.age}}岁</div>\n            <div>{{selectedPatient.roomNumber}}</div>\n          </div>\n          <div class=\"nursing-info\">\n            <div>入院日期 {{selectedPatient.admissionDate}}</div>\n            <div>护理等级 <span class=\"nursing-level\">{{selectedPatient.nursingLevel}}</span></div>\n          </div>\n        </div>\n\n        <!-- 功能按钮区 -->\n        <div class=\"action-bar\">\n          <div class=\"left-actions\">\n            <button class=\"tab-btn\" :class=\"{active: activeTab === 'temp'}\" @click=\"switchTab('temp')\">\n              <i class=\"el-icon-document\"></i> 临时医嘱\n            </button>\n            <button class=\"tab-btn\" :class=\"{active: activeTab === 'long'}\" @click=\"switchTab('long')\">\n              <i class=\"el-icon-document-copy\"></i> 长期医嘱\n            </button>\n          </div>\n          <div class=\"right-actions\">\n            <el-button icon=\"el-icon-printer\" @click=\"printEmptyOrder\">打印空白医嘱单</el-button>\n            <el-button icon=\"el-icon-printer\" @click=\"printCurrentOrderList\">批量打印</el-button>\n            <el-button type=\"primary\" icon=\"el-icon-plus\" @click=\"createNewOrder\">新开</el-button>\n          </div>\n        </div>\n\n        <!-- 智能管理开关 -->\n        <div class=\"smart-management\">\n          <el-checkbox v-model=\"smartManagementEnabled\">智能管理</el-checkbox>\n          <!-- 智能管理提示 -->\n          <div class=\"smart-tips\" v-if=\"smartManagementEnabled\">\n            智能管理模式已开启...\n          </div>\n        </div>\n\n        <!-- 医嘱列表 -->\n        <div class=\"orders-table\">\n          <el-table :data=\"currentOrders\" style=\"width: 100%\" ref=\"ordersTable\">\n            <el-table-column prop=\"time\" label=\"时间\" width=\"150\"></el-table-column>\n            <el-table-column prop=\"group\" label=\"组\" width=\"80\"></el-table-column>\n            <el-table-column prop=\"content\" label=\"内容\"></el-table-column>\n            <el-table-column prop=\"dosage\" label=\"单次剂量\" width=\"120\"></el-table-column>\n            <el-table-column prop=\"usage\" label=\"用法/频次/嘱托\" width=\"200\"></el-table-column>\n            <el-table-column prop=\"days\" label=\"天数\" width=\"80\" v-if=\"activeTab === 'temp'\"></el-table-column>\n            <el-table-column prop=\"total\" label=\"总量\" width=\"80\" v-if=\"activeTab === 'temp'\"></el-table-column>\n            <el-table-column prop=\"stopTime\" label=\"停止时间\" width=\"150\" v-if=\"activeTab === 'long'\"></el-table-column>\n            <el-table-column label=\"操作\" width=\"200\">\n              <template slot-scope=\"scope\">\n                <el-button\n                  size=\"mini\"\n                  type=\"text\"\n                  icon=\"el-icon-edit\"\n                  @click=\"editOrder(scope.row)\"\n                >编辑</el-button>\n                <el-button\n                  size=\"mini\"\n                  type=\"text\"\n                  icon=\"el-icon-close\"\n                  @click=\"stopOrder(scope.row)\"\n                  style=\"color: #F56C6C;\"\n                >停止</el-button>\n                <el-button\n                  size=\"mini\"\n                  type=\"text\"\n                  icon=\"el-icon-printer\"\n                  @click=\"printOrder(scope.row)\"\n                >打印</el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n        </div>\n\n        <!-- 分页 -->\n        <div class=\"pagination-bar\">\n          <el-pagination\n            style=\"width: 100%; text-align: right;\"\n            @size-change=\"handleSizeChange\"\n            @current-change=\"handleCurrentChange\"\n            :current-page=\"pagination.currentPage\"\n            :page-sizes=\"[10, 20, 50]\"\n            :page-size=\"pagination.pageSize\"\n            layout=\"total, sizes, prev, pager, next, jumper\"\n            :total=\"pagination.total\"\n          >\n          </el-pagination>\n        </div>\n\n      </div>\n      <div v-else class=\"no-patient-selected\">\n        请先在左侧选择患者\n      </div>\n\n      <!-- 对话框 -->\n      <order-dialog\n        :visible.sync=\"showOrderDialog\"\n        :is-edit=\"isEdit\"\n        :order-data=\"editingOrder\"\n        :order-type=\"activeTab\"  \n        @submit=\"handleOrderSubmit\"\n      />\n\n      <el-dialog title=\"停止医嘱\" :visible.sync=\"showStopDialog\" width=\"400px\" v-if=\"editingOrder\">\n        <div class=\"stop-order-content\">\n          <p>确定要停止以下医嘱吗？</p>\n          <p><strong>医嘱内容:</strong> {{ editingOrder.content || '' }}</p>\n          <div class=\"stop-time\" v-if=\"activeTab === 'long'\">\n            <span style=\"margin-right: 10px;\">停止时间:</span>\n            <el-date-picker\n              v-model=\"stopTime\"\n              type=\"datetime\"\n              placeholder=\"选择停止时间\"\n              size=\"small\"\n              format=\"yyyy-MM-dd HH:mm\"\n              value-format=\"yyyy-MM-dd HH:mm\">\n            </el-date-picker>\n          </div>\n          <div v-else>\n            <p style=\"color: #E6A23C; margin-top: 10px;\">临时医嘱将被直接删除。</p>\n          </div>\n        </div>\n        <div slot=\"footer\">\n          <el-button @click=\"showStopDialog = false\" size=\"small\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"confirmStopOrder\" size=\"small\">确 定</el-button>\n        </div>\n      </el-dialog>\n\n      <el-dialog\n        :title=\"printOrderType === 'temp' ? '临时医嘱单' : '长期医嘱单'\" \n        :visible.sync=\"showPrintDialog\"\n        width=\"85%\" \n        top=\"5vh\"\n        class=\"print-dialog\">\n         <div class=\"print-preview\" ref=\"regularPrintPreviewArea\">\n            <div class=\"preview-header\">\n                <div class=\"institution-name\">上海 XX 机构</div>\n                <div class=\"page-number\">第 ___ 页</div>\n            </div>\n            <div class=\"patient-info-print\" v-if=\"selectedPatient\">\n                <span>姓名: {{ selectedPatient.name }}</span>\n                <span>区域: {{ selectedPatient.area || '生活区' }}</span> \n                <span>房间床位: {{ selectedPatient.roomNumber }}</span>\n                <span>入院号: {{ selectedPatient.admissionId }}</span>\n            </div>\n            <table class=\"preview-table print-filled-table\">\n            <thead>\n                <tr>\n                    <th style=\"width: 15%;\">日期时间</th>\n                    <th style=\"width: 40%;\">{{ printOrderType === 'temp' ? '临时医嘱' : '长期医嘱' }}</th>\n                    <th style=\"width: 10%;\">医生签名</th>\n                    <th style=\"width: 15%;\">执行时间</th>\n                    <th style=\"width: 10%;\">护士签名</th>\n                    <th style=\"width: 10%;\">备注</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr v-for=\"(order, index) in printOrders\" :key=\"index\">\n                    <td>{{ order.time || '' }}</td>\n                    <td style=\"text-align: left; white-space: pre-wrap;\">{{ order.content || '' }} {{ order.dosage || '' }} {{ order.usage || '' }}</td> \n                    <td></td>\n                    <td></td>\n                    <td></td>\n                    <td></td>\n                </tr>\n                 <tr v-for=\"i in Math.max(0, 10 - printOrders.length)\" :key=\"'empty-'+i\" class=\"empty-row\">\n                     <td>&nbsp;</td><td></td><td></td><td></td><td></td><td></td>\n                 </tr>\n            </tbody>\n            </table>\n        </div>\n        <div slot=\"footer\" class=\"dialog-footer print-filled-footer\">\n           <el-button @click=\"showPrintDialog = false\" size=\"small\">关 闭</el-button>\n            <div class=\"footer-print-options\">\n                <span>从纸张第</span>\n                <el-input-number v-model=\"startPrintRow\" controls-position=\"right\" :min=\"1\" size=\"mini\" style=\"width: 70px; margin: 0 5px;\"></el-input-number>\n                <span>行开始打印</span>\n                <el-button type=\"primary\" @click=\"doPrint\" size=\"small\" style=\"margin-left: 15px;\">打 印</el-button>\n            </div>\n        </div>\n      </el-dialog>\n\n      <!-- 新增：打印空白医嘱单对话框 -->\n      <el-dialog\n        title=\"打印空白医嘱单预览\"\n        :visible.sync=\"showEmptyPrintDialog\"\n        width=\"85%\"\n        top=\"5vh\" \n        class=\"empty-print-dialog\"\n      >\n        <div class=\"empty-print-preview\" ref=\"emptyPrintPreviewArea\">\n          <div class=\"empty-print-header\">\n            <div class=\"institution-name\">上海 XX 机构</div>\n            <h1>长期医嘱单</h1> \n            <div class=\"page-number\">第 ___ 页</div>\n          </div>\n          <div class=\"patient-info-print\" v-if=\"includePatientInfoOnEmpty && selectedPatient\">\n            <span>姓名: {{ selectedPatient.name }}</span>\n            <span>区域: {{ selectedPatient.area || '生活区' }}</span> \n            <span>房间床位: {{ selectedPatient.roomNumber }}</span>\n            <span>入院号: {{ selectedPatient.admissionId }}</span>\n          </div><div class=\"patient-info-print placeholder\" v-else>\n             <!-- 占位符或者提示 -->\n             <span>姓名: _________</span>\n             <span>区域: _________</span> \n             <span>房间床位: _________</span>\n             <span>入院号: _________</span>\n          </div>\n          <table class=\"empty-print-table\">\n            <thead>\n              <tr>\n                <th style=\"width: 10%;\">开始时间</th>\n                <th style=\"width: 10%;\">医生签名</th>\n                <th style=\"width: 10%;\">护士签名</th>\n                <th style=\"width: 35%;\">长期医嘱</th>\n                <th style=\"width: 10%;\">停止时间</th>\n                <th style=\"width: 10%;\">医生签名</th>\n                <th style=\"width: 10%;\">护士签名</th>\n              </tr>\n            </thead>\n            <tbody>\n              <!-- 生成多行空行 -->\n              <tr v-for=\"i in 12\" :key=\"i\">\n                <td></td>\n                <td></td>\n                <td></td>\n                <td></td>\n                <td></td>\n                <td></td>\n                <td></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div slot=\"footer\" class=\"dialog-footer empty-print-footer\">\n          <el-button @click=\"showEmptyPrintDialog = false\" size=\"small\">关 闭</el-button>\n          <div class=\"footer-options\">\n            <el-checkbox v-model=\"includePatientInfoOnEmpty\" :disabled=\"!selectedPatient\">\n              包含当前长者信息\n            </el-checkbox>\n            <el-button type=\"primary\" @click=\"doPrintEmptyOrder\" size=\"small\" style=\"margin-left: 15px;\">\n              打 印\n            </el-button>\n          </div>\n        </div>\n      </el-dialog>\n\n    </div>\n  </div>\n</template>\n\n<script>\n// 假设 OrderDialog 组件已存在且功能完善\nimport OrderDialog from '@/components/OrderDialog.vue' \n\nexport default {\n  name: 'MedicalManagement', // Keep the name consistent with routing\n  components: {\n    OrderDialog\n  },\n  data() {\n    return {\n      patientSearchKeyword: '', // 左侧患者搜索关键字\n      allPatientList: [], // 所有患者列表（模拟）\n      filteredPatientList: [], // 过滤后的患者列表\n      selectedPatient: null, // 当前选中的患者对象\n\n      activeTab: 'temp', // 右侧医嘱类型切换: temp or long\n      smartManagementEnabled: false, // 智能管理开关\n      \n      temporaryOrders: [], // 选中患者的临时医嘱\n      longTermOrders: [], // 选中患者的长期医嘱\n      pagination: {\n        currentPage: 1,\n        pageSize: 10,\n        total: 0\n      },\n\n      // 对话框状态\n      showOrderDialog: false,\n      showStopDialog: false,\n      showPrintDialog: false,\n      isEdit: false,\n      editingOrder: null, // 当前正在编辑或停止的医嘱\n      stopTime: '', // 停止时间选择器\n      printOrders: [], // 待打印的医嘱列表\n      printOrderType: 'temp', // 打印预览时判断是临时还是长期\n      showEmptyPrintDialog: false, // 控制空白打印对话框\n      includePatientInfoOnEmpty: true, // 空白打印时是否包含患者信息\n      startPrintRow: 1, // For the 'start printing from row' input\n    };\n  },\n  computed: {\n    // 根据activeTab动态返回当前应显示的医嘱列表\n    currentOrders() {\n      const orders = this.activeTab === 'temp' ? this.temporaryOrders : this.longTermOrders;\n      // 模拟分页\n      const start = (this.pagination.currentPage - 1) * this.pagination.pageSize;\n      const end = start + this.pagination.pageSize;\n      return orders.slice(start, end);\n    },\n    // 计算当前医嘱列表的总数（用于分页）\n    currentTotalOrders() {\n        return this.activeTab === 'temp' ? this.temporaryOrders.length : this.longTermOrders.length;\n    }\n  },\n  watch: {\n    // 监听 currentTotalOrders 的变化，更新分页总数\n    currentTotalOrders(newTotal) {\n        this.pagination.total = newTotal;\n    },\n    // 当选中的患者变化时，如果之前没有患者，默认勾选包含信息\n    selectedPatient(newPatient, oldPatient) {\n        if (newPatient && !oldPatient) {\n            this.includePatientInfoOnEmpty = true;\n        } else if (!newPatient) {\n            this.includePatientInfoOnEmpty = false; // 没有选中患者时禁用并取消勾选\n        }\n    },\n  },\n  created() {\n    this.fetchAllPatients(); // 初始化时获取所有患者列表\n  },\n  methods: {\n    // --- 左侧患者列表相关方法 ---\n    fetchAllPatients() {\n      console.log('Fetching all patients...');\n      // 模拟API获取所有患者基础信息\n      this.allPatientList = [\n        { id: '1', name: '李大爷', roomNumber: '2201-01', admissionId: '122455478', gender: '男', age: 86, admissionDate: '2021-02', nursingLevel: '二级护理' },\n        { id: '2', name: '王阿姨', roomNumber: '2201-02', admissionId: '122455479', gender: '女', age: 75, admissionDate: '2021-03', nursingLevel: '一级护理' },\n        { id: '3', name: '张三', roomNumber: '2202-01', admissionId: '122455480', gender: '男', age: 68, admissionDate: '2021-04', nursingLevel: '三级护理' },\n        { id: '4', name: '刘能', roomNumber: '2202-02', admissionId: '122455481', gender: '男', age: 72, admissionDate: '2021-05', nursingLevel: '特级护理' }\n      ];\n      this.filterPatientList(); // 初始化显示过滤后的列表\n    },\n    filterPatientList() {\n      const keyword = this.patientSearchKeyword.trim().toLowerCase();\n      if (!keyword) {\n        this.filteredPatientList = [...this.allPatientList];\n      } else {\n        this.filteredPatientList = this.allPatientList.filter(p => \n          p.name.toLowerCase().includes(keyword) || p.admissionId.includes(keyword)\n        );\n      }\n    },\n    selectPatient(patient) {\n      if (this.selectedPatient && this.selectedPatient.id === patient.id) return; // Avoid re-fetching if already selected\n      console.log('Selected patient:', patient);\n      this.selectedPatient = patient;\n      this.activeTab = 'temp'; // 默认显示临时医嘱\n      this.pagination.currentPage = 1; // 重置分页\n      this.fetchOrdersForSelectedPatient(); // 获取选中患者的医嘱\n    },\n\n    // --- 右侧医嘱管理相关方法 ---\n    fetchOrdersForSelectedPatient() {\n      if (!this.selectedPatient) return;\n      console.log(`Fetching orders for patient ID: ${this.selectedPatient.id}`);\n      // 模拟API获取选中患者的医嘱\n      // --- Temp Orders Example ---\n      const temp = [\n        { time: '05-12 09:10', group: '1', content: '阿莫西林胶囊\\n0.25g*20粒/盒', dosage: '0.5g', usage: '口服(po), 餐前(ac), 禁止饮酒', days: '2', total: '2盒' },\n        { time: '05-12 09:15', group: '', content: '行总管置换术一次', dosage: '', usage: '', days: '', total: '' },\n        { time: '05-13 10:00', group: '2', content: '0.9%葡萄糖注射液\\n500ml*1瓶/盒', dosage: '500ml', usage: '静脉滴注(ivdrip), 每天2次(bid)', days: '3', total: '6瓶' },\n      ];\n      // --- Long Term Orders Example ---\n      const long = [\n         { time: '05-10 08:00', group: '', content: '胰岛素注射液', dosage: '10U', usage: '皮下注射(sc), 餐前30分钟', stopTime: '' },\n         { time: '05-10 08:05', group: '', content: '二甲双胍片', dosage: '0.5g', usage: '口服(po), 每天2次(bid)', stopTime: '07-14 09:10' },\n      ];\n      // 实际应用中根据 this.selectedPatient.id 调用API\n      this.temporaryOrders = temp; \n      this.longTermOrders = long;\n      // 更新分页总数 (需要在获取数据后更新)\n      this.pagination.total = this.currentTotalOrders; \n    },\n    switchTab(tab) {\n      if (this.activeTab === tab) return;\n      this.activeTab = tab;\n      this.pagination.currentPage = 1; // 切换tab时重置分页\n      this.pagination.total = this.currentTotalOrders; // 更新分页总数\n    },\n    createNewOrder() {\n      if (!this.selectedPatient) {\n        this.$message.warning('请先在左侧选择患者');\n        return;\n      }\n      console.log(`Navigating to create new ${this.activeTab} order for patient: ${this.selectedPatient.id}`);\n      // Navigate to the detail page, passing patientId and order type\n      this.$router.push({ \n        name: 'MedicalOrderDetail', \n        params: { patientId: this.selectedPatient.id },\n        query: { type: this.activeTab } // Pass type as query parameter\n      });\n    },\n    editOrder(order) {\n       if (!this.selectedPatient) {\n        this.$message.warning('请先在左侧选择患者');\n        return;\n      }\n       if (!order || !order.id) { // Assuming orders have a unique ID\n           this.$message.error('无法编辑无效的医嘱记录');\n           return;\n       }\n      console.log(`Navigating to edit ${this.activeTab} order ${order.id} for patient: ${this.selectedPatient.id}`);\n       // Navigate to the detail page for editing\n       this.$router.push({ \n        name: 'MedicalOrderDetail', \n        params: { patientId: this.selectedPatient.id },\n        // Pass type and the ID of the order being edited\n        query: { type: this.activeTab, editOrderId: order.id } \n      });\n\n      // Remove old logic that opened a dialog\n      // this.isEdit = true;\n      // this.editingOrder = { ...order, type: this.activeTab }; \n      // this.showOrderDialog = true;\n    },\n    handleOrderSubmit(data) {\n      console.log('Order submitted:', data);\n      if (!this.selectedPatient) return;\n      \n      // TODO: 调用API保存医嘱 (data 中应包含患者ID)\n      // 模拟保存成功后的逻辑\n      const targetList = data.type === 'temp' ? this.temporaryOrders : this.longTermOrders;\n      if (this.isEdit) {\n        const index = targetList.findIndex(o => o.time === this.editingOrder.time); // 假设time是唯一标识\n        if (index > -1) {\n          this.$set(targetList, index, data);\n          this.$message.success('医嘱更新成功');\n        } else {\n           this.$message.error('未找到要更新的医嘱');\n        }\n      } else {\n        targetList.unshift(data); // 添加到列表开头\n        this.$message.success('新医嘱添加成功');\n      }\n      this.pagination.total = this.currentTotalOrders; // 更新总数\n      this.showOrderDialog = false;\n      this.editingOrder = null;\n    },\n    stopOrder(order) {\n      this.editingOrder = { ...order };\n      this.stopTime = this.activeTab === 'long' ? (order.stopTime || '') : ''; // 初始化停止时间\n      this.showStopDialog = true;\n    },\n    confirmStopOrder() {\n      if (!this.editingOrder) return;\n      console.log('Confirming stop order:', this.editingOrder, 'Stop time:', this.stopTime);\n      // TODO: 调用API停止医嘱\n      // 模拟成功后的逻辑\n      const targetList = this.activeTab === 'temp' ? this.temporaryOrders : this.longTermOrders;\n      const index = targetList.findIndex(o => o.time === this.editingOrder.time); // 假设time是唯一标识\n      \n      if (index > -1) {\n        if (this.activeTab === 'long') {\n          if (!this.stopTime) {\n            this.$message.warning('请选择长期医嘱的停止时间');\n            return;\n          }\n          this.$set(targetList[index], 'stopTime', this.stopTime);\n          this.$message.success('长期医嘱已标记停止时间');\n        } else {\n          targetList.splice(index, 1);\n          this.$message.success('临时医嘱已删除');\n        }\n        this.pagination.total = this.currentTotalOrders; // 更新总数\n      } else {\n         this.$message.error('未找到要停止的医嘱');\n      }\n      this.showStopDialog = false;\n      this.editingOrder = null;\n    },\n    printOrder(order) {\n      this.printOrders = [order];\n      this.printOrderType = this.activeTab; // 记录打印类型\n      this.showPrintDialog = true;\n    },\n    printEmptyOrder() {\n      console.log('Opening empty order print dialog');\n      // 如果没有选中患者，默认不勾选包含信息\n      if (!this.selectedPatient) {\n          this.includePatientInfoOnEmpty = false;\n      }\n      this.showEmptyPrintDialog = true; \n    },\n    printCurrentOrderList() {\n      if (!this.selectedPatient) {\n        this.$message.warning('请先选择患者');\n        return;\n      }\n      const ordersToPrint = this.activeTab === 'temp' ? this.temporaryOrders : this.longTermOrders;\n      \n      if (!ordersToPrint || ordersToPrint.length === 0) {\n        this.$message.warning('当前列表没有可打印的医嘱');\n        return;\n      }\n\n      this.printOrders = [...ordersToPrint]; \n      this.printOrderType = this.activeTab;\n      this.startPrintRow = 1; // Reset start row when opening dialog\n      this.showPrintDialog = true;\n      console.log(`Printing all ${this.activeTab} orders for patient ${this.selectedPatient.id}`);\n    },\n    doPrintEmptyOrder() {\n        console.log('Printing empty order sheet...');\n        const printWindow = window.open('', '_blank');\n        const printContentEl = this.$refs.emptyPrintPreviewArea;\n        if (!printContentEl) {\n            console.error('Empty print preview element not found!');\n            this.$message.error('打印预览元素未找到');\n            return;\n        }\n        const printContent = printContentEl.innerHTML;\n        \n        // 使用与常规打印类似的样式，但可以按需调整\n        const emptyPrintStyles = `\n            body { font-family: SimSun, serif; margin: 20px; }\n            .empty-print-header { text-align: center; position: relative; margin-bottom: 15px; }\n            .institution-name { font-size: 18px; font-weight: bold; }\n            h1 { font-size: 22px; margin: 5px 0; }\n            .page-number { position: absolute; top: 5px; right: 10px; font-size: 14px; }\n            .patient-info-print { display: flex; justify-content: space-between; margin-bottom: 10px; padding-bottom: 5px; border-bottom: 1px solid #ccc; font-size: 14px; }\n            .patient-info-print span { margin-right: 15px; }\n            .patient-info-print.placeholder span { color: #999; }\n            .empty-print-table { width: 100%; border-collapse: collapse; font-size: 13px; }\n            .empty-print-table th, .empty-print-table td { border: 1px solid #333; height: 35px; /* 控制行高 */ text-align: center; padding: 2px 4px; vertical-align: top; }\n            .empty-print-table th { font-weight: bold; background-color: #f2f2f2; }\n            /* 可以在此添加更多打印特定样式 */\n            @media print {\n                /* 隐藏对话框页脚等非打印元素 */\n                .dialog-footer { display: none; }\n            }\n        `;\n\n        const html = this.createPrintHtml('空白医嘱单', emptyPrintStyles, printContent);\n        printWindow.document.write(html);\n        printWindow.document.close();\n        // this.showEmptyPrintDialog = false; // 打印后通常不需要立即关闭预览\n    },\n    // 创建一个通用的 HTML 生成函数\n    createPrintHtml(title, styles, content) {\n      const printDoc = document.implementation.createHTMLDocument(title);\n      \n      const styleEl = printDoc.createElement('style');\n      styleEl.textContent = styles;\n      printDoc.head.appendChild(styleEl);\n      \n      const container = printDoc.createElement('div');\n      container.innerHTML = content;\n      printDoc.body.appendChild(container);\n      \n      const scriptEl = printDoc.createElement('script');\n      scriptEl.textContent = `window.onload = function() { window.print(); setTimeout(function() { window.close(); }, 300); };`; // 增加关闭延迟\n      printDoc.body.appendChild(scriptEl);\n      \n      return printDoc.documentElement.outerHTML;\n    },\n    doPrint() {\n      console.log(`Attempting to print starting from row: ${this.startPrintRow}`);\n      // Note: Actually starting print from a specific physical row on paper via browser's print \n      // is not directly possible. This UI element is informational or for manual handling.\n      const printWindow = window.open('', '_blank');\n      // Use a specific ref for the regular print preview area\n      const printContentEl = this.$refs.regularPrintPreviewArea; \n      if (!printContentEl) {\n        console.error('Print preview element (.print-preview) not found!');\n        this.$message.error('打印预览元素未找到');\n        return;\n      }\n      const printContent = printContentEl.innerHTML;\n      const regularPrintStyles = `\n        body { font-family: SimSun, serif; margin: 20px; }\n        .institution-name { text-align: center; font-size: 18px; font-weight: bold; margin-bottom: 5px; }\n        .page-number { position: absolute; top: 5px; right: 10px; font-size: 14px; }\n        .patient-info-print { display: flex; justify-content: space-between; margin-bottom: 10px; padding-bottom: 5px; border-bottom: 1px solid #ccc; font-size: 14px; }\n        .patient-info-print span { margin-right: 15px; }\n        .print-filled-table { width: 100%; border-collapse: collapse; margin-bottom: 20px; font-size: 13px; }\n        .print-filled-table th, .print-filled-table td { border: 1px solid #666; padding: 6px 8px; text-align: center; vertical-align: top; word-break: break-all; }\n        .print-filled-table th { background-color: #f2f2f2; font-weight: bold; }\n        .print-filled-table td:nth-child(2) { text-align: left; } /* Align order content left */\n        .print-filled-table .empty-row td { height: 25px; border: 1px dotted #ccc; } /* Style empty rows */\n        @media print { \n            .dialog-footer { display: none; } \n            @page { size: A4; margin: 15mm; } /* Example print settings */\n        }\n      `;\n      const title = this.printOrderType === 'temp' ? '临时医嘱单' : '长期医嘱单';\n      const html = this.createPrintHtml(title, regularPrintStyles, printContent);\n      printWindow.document.write(html);\n      printWindow.document.close();\n      this.showPrintDialog = false;\n    },\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.medical-management-container {\n  background-color: #f0f4f7;\n  padding: 20px;\n  border-radius: 8px;\n  min-height: calc(100vh - 40px);\n\n  .left-panel {\n    background-color: #fff;\n    border-radius: 8px;\n    padding: 20px;\n    box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n    margin-bottom: 20px;\n\n    .patient-search {\n      margin-bottom: 20px;\n\n      .el-input {\n        width: 100%;\n      }\n    }\n\n    .patient-list {\n      .patient-item {\n        padding: 12px;\n        border-bottom: 1px solid #e8ecef;\n        cursor: pointer;\n        transition: all 0.3s;\n\n        &:hover {\n          background-color: #f5f7fa;\n        }\n\n        &.active {\n          background-color: #e8f4f4;\n          border-left: 3px solid #3a7d7c;\n        }\n\n        .patient-name {\n          font-size: 14px;\n          color: #3a4a49;\n          margin-bottom: 4px;\n        }\n\n        .patient-details {\n          font-size: 12px;\n          color: #5a6e6c;\n        }\n      }\n    }\n  }\n\n  .right-panel {\n    background-color: #fff;\n    border-radius: 8px;\n    padding: 20px;\n    box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n\n    .patient-info-bar {\n      display: flex;\n      align-items: center;\n      margin-bottom: 20px;\n      padding-bottom: 20px;\n      border-bottom: 1px solid #e8ecef;\n\n      .avatar {\n        width: 40px;\n        height: 40px;\n        background-color: #3a7d7c;\n        color: #fff;\n        border-radius: 50%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        margin-right: 15px;\n        font-size: 18px;\n      }\n\n      .basic-info {\n        flex: 1;\n        font-size: 16px;\n        color: #3a4a49;\n      }\n\n      .nursing-info {\n        color: #5a6e6c;\n        font-size: 14px;\n\n        .nursing-level {\n          color: #3a7d7c;\n          font-weight: 500;\n        }\n      }\n    }\n\n    .action-bar {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 20px;\n\n      .left-actions {\n        .tab-btn {\n          padding: 8px 16px;\n          border: none;\n          background: none;\n          color: #5a6e6c;\n          cursor: pointer;\n          transition: all 0.3s;\n\n          &.active {\n            color: #3a7d7c;\n            border-bottom: 2px solid #3a7d7c;\n          }\n\n          &:hover {\n            color: #3a7d7c;\n          }\n        }\n      }\n\n      .right-actions {\n        .el-button {\n          margin-left: 10px;\n        }\n      }\n    }\n\n    .orders-table {\n      .el-table {\n        th {\n          background-color: #f5f7fa;\n          color: #3a4a49;\n          font-weight: 500;\n        }\n\n        td {\n          color: #5a6e6c;\n        }\n\n        .el-button--text {\n          padding: 0 8px;\n          \n          &:hover {\n            color: #3a7d7c;\n          }\n        }\n      }\n    }\n\n    .pagination-bar {\n      margin-top: 20px;\n      text-align: right;\n\n      .el-pagination {\n        button {\n          &:disabled {\n            background-color: #f5f7fa;\n          }\n        }\n\n        .el-pager li {\n          &.active {\n            background-color: #3a7d7c;\n            color: #fff;\n          }\n\n          &:hover {\n            color: #3a7d7c;\n          }\n        }\n      }\n    }\n  }\n}\n</style> "],"mappings":";;;AA2RA;AACA,OAAAA,WAAA;AAEA;EACAC,IAAA;EAAA;EACAC,UAAA;IACAF;EACA;EACAG,KAAA;IACA;MACAC,oBAAA;MAAA;MACAC,cAAA;MAAA;MACAC,mBAAA;MAAA;MACAC,eAAA;MAAA;;MAEAC,SAAA;MAAA;MACAC,sBAAA;MAAA;;MAEAC,eAAA;MAAA;MACAC,cAAA;MAAA;MACAC,UAAA;QACAC,WAAA;QACAC,QAAA;QACAC,KAAA;MACA;MAEA;MACAC,eAAA;MACAC,cAAA;MACAC,eAAA;MACAC,MAAA;MACAC,YAAA;MAAA;MACAC,QAAA;MAAA;MACAC,WAAA;MAAA;MACAC,cAAA;MAAA;MACAC,oBAAA;MAAA;MACAC,yBAAA;MAAA;MACAC,aAAA;IACA;EACA;EACAC,QAAA;IACA;IACAC,cAAA;MACA,MAAAC,MAAA,QAAArB,SAAA,mBAAAE,eAAA,QAAAC,cAAA;MACA;MACA,MAAAmB,KAAA,SAAAlB,UAAA,CAAAC,WAAA,aAAAD,UAAA,CAAAE,QAAA;MACA,MAAAiB,GAAA,GAAAD,KAAA,QAAAlB,UAAA,CAAAE,QAAA;MACA,OAAAe,MAAA,CAAAG,KAAA,CAAAF,KAAA,EAAAC,GAAA;IACA;IACA;IACAE,mBAAA;MACA,YAAAzB,SAAA,mBAAAE,eAAA,CAAAwB,MAAA,QAAAvB,cAAA,CAAAuB,MAAA;IACA;EACA;EACAC,KAAA;IACA;IACAF,mBAAAG,QAAA;MACA,KAAAxB,UAAA,CAAAG,KAAA,GAAAqB,QAAA;IACA;IACA;IACA7B,gBAAA8B,UAAA,EAAAC,UAAA;MACA,IAAAD,UAAA,KAAAC,UAAA;QACA,KAAAb,yBAAA;MACA,YAAAY,UAAA;QACA,KAAAZ,yBAAA;MACA;IACA;EACA;EACAc,QAAA;IACA,KAAAC,gBAAA;EACA;EACAC,OAAA;IACA;IACAD,iBAAA;MACAE,OAAA,CAAAC,GAAA;MACA;MACA,KAAAtC,cAAA,IACA;QAAAuC,EAAA;QAAA3C,IAAA;QAAA4C,UAAA;QAAAC,WAAA;QAAAC,MAAA;QAAAC,GAAA;QAAAC,aAAA;QAAAC,YAAA;MAAA,GACA;QAAAN,EAAA;QAAA3C,IAAA;QAAA4C,UAAA;QAAAC,WAAA;QAAAC,MAAA;QAAAC,GAAA;QAAAC,aAAA;QAAAC,YAAA;MAAA,GACA;QAAAN,EAAA;QAAA3C,IAAA;QAAA4C,UAAA;QAAAC,WAAA;QAAAC,MAAA;QAAAC,GAAA;QAAAC,aAAA;QAAAC,YAAA;MAAA,GACA;QAAAN,EAAA;QAAA3C,IAAA;QAAA4C,UAAA;QAAAC,WAAA;QAAAC,MAAA;QAAAC,GAAA;QAAAC,aAAA;QAAAC,YAAA;MAAA,EACA;MACA,KAAAC,iBAAA;IACA;IACAA,kBAAA;MACA,MAAAC,OAAA,QAAAhD,oBAAA,CAAAiD,IAAA,GAAAC,WAAA;MACA,KAAAF,OAAA;QACA,KAAA9C,mBAAA,YAAAD,cAAA;MACA;QACA,KAAAC,mBAAA,QAAAD,cAAA,CAAAkD,MAAA,CAAAC,CAAA,IACAA,CAAA,CAAAvD,IAAA,CAAAqD,WAAA,GAAAG,QAAA,CAAAL,OAAA,KAAAI,CAAA,CAAAV,WAAA,CAAAW,QAAA,CAAAL,OAAA,CACA;MACA;IACA;IACAM,cAAAC,OAAA;MACA,SAAApD,eAAA,SAAAA,eAAA,CAAAqC,EAAA,KAAAe,OAAA,CAAAf,EAAA;MACAF,OAAA,CAAAC,GAAA,sBAAAgB,OAAA;MACA,KAAApD,eAAA,GAAAoD,OAAA;MACA,KAAAnD,SAAA;MACA,KAAAI,UAAA,CAAAC,WAAA;MACA,KAAA+C,6BAAA;IACA;IAEA;IACAA,8BAAA;MACA,UAAArD,eAAA;MACAmC,OAAA,CAAAC,GAAA,yCAAApC,eAAA,CAAAqC,EAAA;MACA;MACA;MACA,MAAAiB,IAAA,IACA;QAAAC,IAAA;QAAAC,KAAA;QAAAC,OAAA;QAAAC,MAAA;QAAAC,KAAA;QAAAC,IAAA;QAAApD,KAAA;MAAA,GACA;QAAA+C,IAAA;QAAAC,KAAA;QAAAC,OAAA;QAAAC,MAAA;QAAAC,KAAA;QAAAC,IAAA;QAAApD,KAAA;MAAA,GACA;QAAA+C,IAAA;QAAAC,KAAA;QAAAC,OAAA;QAAAC,MAAA;QAAAC,KAAA;QAAAC,IAAA;QAAApD,KAAA;MAAA,EACA;MACA;MACA,MAAAqD,IAAA,IACA;QAAAN,IAAA;QAAAC,KAAA;QAAAC,OAAA;QAAAC,MAAA;QAAAC,KAAA;QAAA7C,QAAA;MAAA,GACA;QAAAyC,IAAA;QAAAC,KAAA;QAAAC,OAAA;QAAAC,MAAA;QAAAC,KAAA;QAAA7C,QAAA;MAAA,EACA;MACA;MACA,KAAAX,eAAA,GAAAmD,IAAA;MACA,KAAAlD,cAAA,GAAAyD,IAAA;MACA;MACA,KAAAxD,UAAA,CAAAG,KAAA,QAAAkB,kBAAA;IACA;IACAoC,UAAAC,GAAA;MACA,SAAA9D,SAAA,KAAA8D,GAAA;MACA,KAAA9D,SAAA,GAAA8D,GAAA;MACA,KAAA1D,UAAA,CAAAC,WAAA;MACA,KAAAD,UAAA,CAAAG,KAAA,QAAAkB,kBAAA;IACA;IACAsC,eAAA;MACA,UAAAhE,eAAA;QACA,KAAAiE,QAAA,CAAAC,OAAA;QACA;MACA;MACA/B,OAAA,CAAAC,GAAA,kCAAAnC,SAAA,4BAAAD,eAAA,CAAAqC,EAAA;MACA;MACA,KAAA8B,OAAA,CAAAC,IAAA;QACA1E,IAAA;QACA2E,MAAA;UAAAC,SAAA,OAAAtE,eAAA,CAAAqC;QAAA;QACAkC,KAAA;UAAAC,IAAA,OAAAvE;QAAA;MACA;IACA;IACAwE,UAAAC,KAAA;MACA,UAAA1E,eAAA;QACA,KAAAiE,QAAA,CAAAC,OAAA;QACA;MACA;MACA,KAAAQ,KAAA,KAAAA,KAAA,CAAArC,EAAA;QAAA;QACA,KAAA4B,QAAA,CAAAU,KAAA;QACA;MACA;MACAxC,OAAA,CAAAC,GAAA,4BAAAnC,SAAA,UAAAyE,KAAA,CAAArC,EAAA,sBAAArC,eAAA,CAAAqC,EAAA;MACA;MACA,KAAA8B,OAAA,CAAAC,IAAA;QACA1E,IAAA;QACA2E,MAAA;UAAAC,SAAA,OAAAtE,eAAA,CAAAqC;QAAA;QACA;QACAkC,KAAA;UAAAC,IAAA,OAAAvE,SAAA;UAAA2E,WAAA,EAAAF,KAAA,CAAArC;QAAA;MACA;;MAEA;MACA;MACA;MACA;IACA;IACAwC,kBAAAjF,IAAA;MACAuC,OAAA,CAAAC,GAAA,qBAAAxC,IAAA;MACA,UAAAI,eAAA;;MAEA;MACA;MACA,MAAA8E,UAAA,GAAAlF,IAAA,CAAA4E,IAAA,mBAAArE,eAAA,QAAAC,cAAA;MACA,SAAAQ,MAAA;QACA,MAAAmE,KAAA,GAAAD,UAAA,CAAAE,SAAA,CAAAC,CAAA,IAAAA,CAAA,CAAA1B,IAAA,UAAA1C,YAAA,CAAA0C,IAAA;QACA,IAAAwB,KAAA;UACA,KAAAG,IAAA,CAAAJ,UAAA,EAAAC,KAAA,EAAAnF,IAAA;UACA,KAAAqE,QAAA,CAAAkB,OAAA;QACA;UACA,KAAAlB,QAAA,CAAAU,KAAA;QACA;MACA;QACAG,UAAA,CAAAM,OAAA,CAAAxF,IAAA;QACA,KAAAqE,QAAA,CAAAkB,OAAA;MACA;MACA,KAAA9E,UAAA,CAAAG,KAAA,QAAAkB,kBAAA;MACA,KAAAjB,eAAA;MACA,KAAAI,YAAA;IACA;IACAwE,UAAAX,KAAA;MACA,KAAA7D,YAAA;QAAA,GAAA6D;MAAA;MACA,KAAA5D,QAAA,QAAAb,SAAA,cAAAyE,KAAA,CAAA5D,QAAA;MACA,KAAAJ,cAAA;IACA;IACA4E,iBAAA;MACA,UAAAzE,YAAA;MACAsB,OAAA,CAAAC,GAAA,gCAAAvB,YAAA,qBAAAC,QAAA;MACA;MACA;MACA,MAAAgE,UAAA,QAAA7E,SAAA,mBAAAE,eAAA,QAAAC,cAAA;MACA,MAAA2E,KAAA,GAAAD,UAAA,CAAAE,SAAA,CAAAC,CAAA,IAAAA,CAAA,CAAA1B,IAAA,UAAA1C,YAAA,CAAA0C,IAAA;;MAEA,IAAAwB,KAAA;QACA,SAAA9E,SAAA;UACA,UAAAa,QAAA;YACA,KAAAmD,QAAA,CAAAC,OAAA;YACA;UACA;UACA,KAAAgB,IAAA,CAAAJ,UAAA,CAAAC,KAAA,oBAAAjE,QAAA;UACA,KAAAmD,QAAA,CAAAkB,OAAA;QACA;UACAL,UAAA,CAAAS,MAAA,CAAAR,KAAA;UACA,KAAAd,QAAA,CAAAkB,OAAA;QACA;QACA,KAAA9E,UAAA,CAAAG,KAAA,QAAAkB,kBAAA;MACA;QACA,KAAAuC,QAAA,CAAAU,KAAA;MACA;MACA,KAAAjE,cAAA;MACA,KAAAG,YAAA;IACA;IACA2E,WAAAd,KAAA;MACA,KAAA3D,WAAA,IAAA2D,KAAA;MACA,KAAA1D,cAAA,QAAAf,SAAA;MACA,KAAAU,eAAA;IACA;IACA8E,gBAAA;MACAtD,OAAA,CAAAC,GAAA;MACA;MACA,UAAApC,eAAA;QACA,KAAAkB,yBAAA;MACA;MACA,KAAAD,oBAAA;IACA;IACAyE,sBAAA;MACA,UAAA1F,eAAA;QACA,KAAAiE,QAAA,CAAAC,OAAA;QACA;MACA;MACA,MAAAyB,aAAA,QAAA1F,SAAA,mBAAAE,eAAA,QAAAC,cAAA;MAEA,KAAAuF,aAAA,IAAAA,aAAA,CAAAhE,MAAA;QACA,KAAAsC,QAAA,CAAAC,OAAA;QACA;MACA;MAEA,KAAAnD,WAAA,OAAA4E,aAAA;MACA,KAAA3E,cAAA,QAAAf,SAAA;MACA,KAAAkB,aAAA;MACA,KAAAR,eAAA;MACAwB,OAAA,CAAAC,GAAA,sBAAAnC,SAAA,4BAAAD,eAAA,CAAAqC,EAAA;IACA;IACAuD,kBAAA;MACAzD,OAAA,CAAAC,GAAA;MACA,MAAAyD,WAAA,GAAAC,MAAA,CAAAC,IAAA;MACA,MAAAC,cAAA,QAAAC,KAAA,CAAAC,qBAAA;MACA,KAAAF,cAAA;QACA7D,OAAA,CAAAwC,KAAA;QACA,KAAAV,QAAA,CAAAU,KAAA;QACA;MACA;MACA,MAAAwB,YAAA,GAAAH,cAAA,CAAAI,SAAA;;MAEA;MACA,MAAAC,gBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MAEA,MAAAC,IAAA,QAAAC,eAAA,UAAAF,gBAAA,EAAAF,YAAA;MACAN,WAAA,CAAAW,QAAA,CAAAC,KAAA,CAAAH,IAAA;MACAT,WAAA,CAAAW,QAAA,CAAAE,KAAA;MACA;IACA;IACA;IACAH,gBAAAI,KAAA,EAAAC,MAAA,EAAAnD,OAAA;MACA,MAAAoD,QAAA,GAAAL,QAAA,CAAAM,cAAA,CAAAC,kBAAA,CAAAJ,KAAA;MAEA,MAAAK,OAAA,GAAAH,QAAA,CAAAI,aAAA;MACAD,OAAA,CAAAE,WAAA,GAAAN,MAAA;MACAC,QAAA,CAAAM,IAAA,CAAAC,WAAA,CAAAJ,OAAA;MAEA,MAAAK,SAAA,GAAAR,QAAA,CAAAI,aAAA;MACAI,SAAA,CAAAjB,SAAA,GAAA3C,OAAA;MACAoD,QAAA,CAAAS,IAAA,CAAAF,WAAA,CAAAC,SAAA;MAEA,MAAAE,QAAA,GAAAV,QAAA,CAAAI,aAAA;MACAM,QAAA,CAAAL,WAAA;MACAL,QAAA,CAAAS,IAAA,CAAAF,WAAA,CAAAG,QAAA;MAEA,OAAAV,QAAA,CAAAW,eAAA,CAAAC,SAAA;IACA;IACAC,QAAA;MACAvF,OAAA,CAAAC,GAAA,gDAAAjB,aAAA;MACA;MACA;MACA,MAAA0E,WAAA,GAAAC,MAAA,CAAAC,IAAA;MACA;MACA,MAAAC,cAAA,QAAAC,KAAA,CAAA0B,uBAAA;MACA,KAAA3B,cAAA;QACA7D,OAAA,CAAAwC,KAAA;QACA,KAAAV,QAAA,CAAAU,KAAA;QACA;MACA;MACA,MAAAwB,YAAA,GAAAH,cAAA,CAAAI,SAAA;MACA,MAAAwB,kBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACA,MAAAjB,KAAA,QAAA3F,cAAA;MACA,MAAAsF,IAAA,QAAAC,eAAA,CAAAI,KAAA,EAAAiB,kBAAA,EAAAzB,YAAA;MACAN,WAAA,CAAAW,QAAA,CAAAC,KAAA,CAAAH,IAAA;MACAT,WAAA,CAAAW,QAAA,CAAAE,KAAA;MACA,KAAA/F,eAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}