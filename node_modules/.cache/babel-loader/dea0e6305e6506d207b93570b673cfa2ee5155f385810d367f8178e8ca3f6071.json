{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport { getAdmissionList, submitHealthAssessment, submitCareAssessment, getHealthAssessmentDetail, getCareAssessmentDetail, uploadMedicalReport } from '../api/admission';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    patients: []\n  },\n  getters: {\n    pendingAdmissionCount: ({\n      patients\n    }) => {\n      return patients.filter(p => p.healthStatus === '待评估' || p.careStatus === '待评估').length;\n    },\n    pendingDischargeCount: () => {\n      return 0; // 暂时返回0，后续实现离院功能时再修改\n    }\n  },\n  mutations: {\n    SET_PATIENTS(state, patients) {\n      state.patients = patients;\n    },\n    updatePatientHealthAssessment(state, {\n      patient_id,\n      status,\n      time,\n      operator\n    }) {\n      const patient = state.patients.find(p => p.patient_id === patientd);\n      if (patient) {\n        patient.healthStatus = status;\n        patient.healthTime = time;\n        patient.healthOperator = operator;\n      }\n    },\n    updatePatientCareAssessment(state, {\n      patient_id,\n      status,\n      time,\n      operator\n    }) {\n      const patient = state.patients.find(p => p.patient_id === patientId);\n      if (patient) {\n        patient.careStatus = status;\n        patient.careTime = time;\n        patient.careOperator = operator;\n      }\n    },\n    completeAdmission(state, patient_id) {\n      const patient = state.patients.find(p => p.id === patient_id);\n      if (patient) {\n        patient.admissionCompleted = true;\n      }\n    }\n  },\n  actions: {\n    async fetchPatients({\n      commit\n    }, params) {\n      try {\n        const response = await getAdmissionList(params);\n        commit('SET_PATIENTS', response.data.records);\n        return response;\n      } catch (error) {\n        console.error('获取患者列表失败:', error);\n        throw error;\n      }\n    },\n    async updateHealthAssessment({\n      commit\n    }, payload) {\n      try {\n        await submitHealthAssessment(payload);\n        commit('updatePatientHealthAssessment', {\n          patientId: payload.patientId,\n          status: payload.status === 'completed' ? '完成' : payload.status === 'rejected' ? '不同意入院' : '待评估',\n          time: payload.time,\n          operator: payload.operator\n        });\n      } catch (error) {\n        console.error('更新健康评估失败:', error);\n        throw error;\n      }\n    },\n    async updateCareAssessment({\n      commit\n    }, payload) {\n      try {\n        await submitCareAssessment(payload);\n        commit('updatePatientCareAssessment', {\n          patientId: payload.patientId,\n          status: payload.status === 'completed' ? '完成' : payload.status === 'rejected' ? '不同意入院' : '待评估',\n          time: payload.time,\n          operator: payload.operator\n        });\n      } catch (error) {\n        console.error('更新照护评估失败:', error);\n        throw error;\n      }\n    },\n    async fetchHealthAssessmentDetail(commit, id) {\n      const response = await getHealthAssessmentDetail(id);\n      return response;\n    },\n    async fetchCareAssessmentDetail(commit, id) {\n      const response = await getCareAssessmentDetail(id);\n      return response;\n    },\n    async uploadMedicalReport(commit, payload) {\n      const response = await uploadMedicalReport(payload);\n      return response;\n    },\n    async finishAdmission({\n      commit\n    }, patientId) {\n      try {\n        // 这里可以添加完成入院的 API 调用\n        commit('completeAdmission', patientId);\n      } catch (error) {\n        console.error('完成入院失败:', error);\n        throw error;\n      }\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["Vue","Vuex","getAdmissionList","submitHealthAssessment","submitCareAssessment","getHealthAssessmentDetail","getCareAssessmentDetail","uploadMedicalReport","use","Store","state","patients","getters","pendingAdmissionCount","filter","p","healthStatus","careStatus","length","pendingDischargeCount","mutations","SET_PATIENTS","updatePatientHealthAssessment","patient_id","status","time","operator","patient","find","patientd","healthTime","healthOperator","updatePatientCareAssessment","patientId","careTime","careOperator","completeAdmission","id","admissionCompleted","actions","fetchPatients","commit","params","response","data","records","error","console","updateHealthAssessment","payload","updateCareAssessment","fetchHealthAssessmentDetail","fetchCareAssessmentDetail","finishAdmission","modules"],"sources":["/Users/seaocean/projects/test1/hospital/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport {\n  getAdmissionList,\n  submitHealthAssessment,\n  submitCareAssessment,\n  getHealthAssessmentDetail,\n  getCareAssessmentDetail,\n  uploadMedicalReport\n} from '../api/admission'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    patients: []\n  },\n  getters: {\n    pendingAdmissionCount: ({ patients }) => {\n      return patients.filter(p =>\n        p.healthStatus === '待评估' || p.careStatus === '待评估'\n      ).length\n    },\n    pendingDischargeCount: () => {\n      return 0 // 暂时返回0，后续实现离院功能时再修改\n    }\n  },\n  mutations: {\n    SET_PATIENTS(state, patients) {\n      state.patients = patients\n    },\n    updatePatientHealthAssessment(state, { patient_id, status, time, operator }) {\n      const patient = state.patients.find(p => p.patient_id === patientd);\n      if (patient) {\n        patient.healthStatus = status;\n        patient.healthTime = time;\n        patient.healthOperator = operator;\n      }\n    },\n    updatePatientCareAssessment(state, { patient_id, status, time, operator }) {\n      const patient = state.patients.find(p => p.patient_id === patientId);\n      if (patient) {\n        patient.careStatus = status;\n        patient.careTime = time;\n        patient.careOperator = operator;\n      }\n    },\n    completeAdmission(state, patient_id) {\n      const patient = state.patients.find(p => p.id === patient_id);\n      if (patient) {\n        patient.admissionCompleted = true;\n      }\n    }\n  },\n  actions: {\n    async fetchPatients({ commit }, params) {\n      try {\n        const response = await getAdmissionList(params)\n        commit('SET_PATIENTS', response.data.records)\n        return response\n      } catch (error) {\n        console.error('获取患者列表失败:', error)\n        throw error\n      }\n    },\n    async updateHealthAssessment({ commit }, payload) {\n      try {\n        await submitHealthAssessment(payload);\n        commit('updatePatientHealthAssessment', {\n          patientId: payload.patientId,\n          status: payload.status === 'completed' ? '完成' :\n            payload.status === 'rejected' ? '不同意入院' : '待评估',\n          time: payload.time,\n          operator: payload.operator\n        });\n      } catch (error) {\n        console.error('更新健康评估失败:', error);\n        throw error;\n      }\n    },\n    async updateCareAssessment({ commit }, payload) {\n      try {\n        await submitCareAssessment(payload);\n        commit('updatePatientCareAssessment', {\n          patientId: payload.patientId,\n          status: payload.status === 'completed' ? '完成' :\n            payload.status === 'rejected' ? '不同意入院' : '待评估',\n          time: payload.time,\n          operator: payload.operator\n        });\n      } catch (error) {\n        console.error('更新照护评估失败:', error);\n        throw error;\n      }\n    },\n    async fetchHealthAssessmentDetail(commit, id) {\n      const response = await getHealthAssessmentDetail(id);\n      return response;\n    },\n    async fetchCareAssessmentDetail(commit, id) {\n      const response = await getCareAssessmentDetail(id);\n      return response;\n    },\n    async uploadMedicalReport(commit, payload) {\n      const response = await uploadMedicalReport(payload);\n      return response;\n    },\n    async finishAdmission({ commit }, patientId) {\n      try {\n        // 这里可以添加完成入院的 API 调用\n        commit('completeAdmission', patientId);\n      } catch (error) {\n        console.error('完成入院失败:', error);\n        throw error;\n      }\n    }\n  },\n  modules: {\n  }\n}) "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}