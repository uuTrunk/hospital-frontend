{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nexport default {\n  name: 'MedicalOrderDetail',\n  props: {\n    patientId: {\n      // Received from router\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      patientInfo: {},\n      // To store fetched patient data\n      orderType: 'longTerm',\n      // Default or determined from route query\n      editOrderId: null,\n      // ID of the order being edited, from route query\n      activeRightTab: 'longTerm',\n      // Will be set based on orderType\n      diagnosisInput: '',\n      urgentExecution: false,\n      orderList: [],\n      // Unified list for current order type\n      selectedOrderIds: [],\n      // EMR Data\n      emrData: {\n        chiefComplaint: '',\n        historyPresentIllness: '',\n        pastMedicalHistory: '',\n        temperature: '',\n        pulse: '',\n        respiration: '',\n        bpSystolic: '',\n        bpDiastolic: '',\n        physicalExamNotes: '',\n        auxiliaryExam: '',\n        clinicalDiagnosis: '',\n        // Input field model\n        treatmentPlan: ''\n      },\n      emrDiagnoses: [],\n      // Array to store added diagnosis tags\n      // Dialog Visibility\n      showDrugDialog: false,\n      showTreatmentDialog: false,\n      showCareDialog: false,\n      drugDialogTab: 'stock',\n      // Active tab in drug dialog\n\n      // Available Items (Mock Data - Replace with API calls)\n      availableDrugs: [],\n      availableTreatments: [],\n      availableCareItems: [],\n      // Filtered Lists for Tables\n      filteredAvailableDrugs: [],\n      filteredAvailableTreatments: [],\n      filteredAvailableCareItems: [],\n      // Search/Filter Models\n      drugSearch: {\n        category: '',\n        keyword: ''\n      },\n      treatmentSearch: {\n        category: '',\n        keyword: ''\n      },\n      careSearch: {\n        category: '',\n        keyword: ''\n      },\n      // Dialog Selections\n      selectedDialogItems: [],\n      // Store selection from the currently open dialog\n\n      // Pagination for Dialogs\n      drugPagination: {\n        currentPage: 1,\n        pageSize: 10\n      },\n      treatmentPagination: {\n        currentPage: 1,\n        pageSize: 10\n      },\n      carePagination: {\n        currentPage: 1,\n        pageSize: 10\n      },\n      // START: Template Selection Data\n      showTemplatePopover: false,\n      templateSearchKeyword: '',\n      availableEmrTemplates: [],\n      // Loaded in methods\n      filteredEmrTemplates: []\n      // END: Template Selection Data\n    };\n  },\n  computed: {\n    // Use a computed property for the table data based on orderType\n    currentOrderList() {\n      // In a real app, this might be fetched or filtered based on orderType\n      return this.orderList;\n    }\n  },\n  watch: {\n    // Watch route changes to potentially reload data if navigating between patients\n    '$route'(to, from) {\n      if (to.params.patientId !== from.params.patientId || to.query.type !== from.query.type) {\n        this.initializeComponent();\n      }\n    }\n  },\n  created() {\n    this.initializeComponent();\n    this.loadAvailableItems(); // Load items for dialogs\n    this.loadAvailableEmrTemplates(); // Load templates\n  },\n  methods: {\n    initializeComponent() {\n      // Determine order type and edit ID from route query\n      this.orderType = this.$route.query.type === 'temp' ? 'temp' : 'longTerm';\n      this.editOrderId = this.$route.query.editOrderId || null;\n      this.activeRightTab = this.orderType; // Set active tab based on type\n      console.log(`Initializing for type: ${this.orderType}, editing order: ${this.editOrderId}`);\n      this.fetchPatientDetails();\n      this.loadInitialOrders(); // Load or initialize orders based on type/editId\n    },\n    goBack() {\n      this.$router.go(-1); // Go back to the previous page\n    },\n    fetchPatientDetails() {\n      console.log(`Fetching details for patient ID: ${this.patientId}`);\n      // --- Simulate API call ---\n      // In a real app, fetch patient info based on this.patientId\n      this.patientInfo = {\n        id: this.patientId,\n        // Use the passed ID\n        name: '王大爷',\n        gender: '男',\n        age: '86',\n        roomNumber: '2206-5',\n        admissionId: '20240506124',\n        chargeType: '医保',\n        medicalCard: 'D053252131',\n        department: '内科',\n        // Example\n        visitDate: '2024-05-12',\n        allergyHistory: '青霉素、头孢、先锋类'\n      };\n      // --- End Simulation ---\n    },\n    loadInitialOrders() {\n      console.log(`Loading ${this.orderType} orders for patient: ${this.patientId}, edit ID: ${this.editOrderId}`);\n      // TODO: Replace with API call based on patientId, orderType, and potentially editOrderId\n      // Simulate loading data based on type\n      if (this.orderType === 'temp') {\n        this.orderList = [{\n          id: 'temp1',\n          group: '',\n          startTime: '2024-12-17 10:00:00',\n          content: '体温监测',\n          frequency: 'q4h'\n        }];\n      } else {\n        // longTerm\n        this.orderList = [{\n          id: 'long1',\n          group: '1',\n          startTime: '2024-12-16 12:55:00',\n          content: '按内科常规护理',\n          specification: '',\n          dosage: '',\n          dosageUnit: '',\n          usage: '',\n          frequency: '',\n          adminTime: '',\n          remarks: '',\n          stopTime: null\n        }, {\n          id: 'long2',\n          group: '2',\n          startTime: '2024-12-16 12:55:00',\n          content: '(维他凯尔)维生素C',\n          specification: '10ml*5支/盒',\n          dosage: '适量',\n          dosageUnit: '',\n          usage: '',\n          frequency: '',\n          adminTime: '',\n          remarks: '',\n          stopTime: null\n        }\n        // ... more long term orders\n        ];\n      }\n      // If editing, potentially pre-select or highlight the order\n      if (this.editOrderId) {\n        console.log(`Need to handle editing for order ID: ${this.editOrderId}`);\n        // Find the order in this.orderList and maybe open an edit state for it\n      }\n    },\n    removeDiagnosis(tag) {\n      console.log(\"Removing diagnosis:\", tag);\n      // Logic to remove diagnosis tag\n    },\n    addDiagnosis() {\n      console.log(\"Adding diagnosis:\", this.diagnosisInput);\n      // Logic to add diagnosis tag\n      this.diagnosisInput = '';\n    },\n    submitOrders() {\n      console.log(`Submitting ${this.orderType} orders:`, this.orderList);\n      this.$message.success('医嘱已发送（模拟）');\n    },\n    addOrderItem(type) {\n      console.log(\"Request to add order item of type:\", type);\n      this.selectedDialogItems = []; // Clear previous selection\n      switch (type) {\n        case 'drug':\n          this.drugPagination.currentPage = 1; // Reset pagination\n          this.filterAvailableDrugs(); // Apply initial filter\n          this.showDrugDialog = true;\n          break;\n        case 'treatment':\n          this.treatmentPagination.currentPage = 1;\n          this.filterAvailableTreatments();\n          this.showTreatmentDialog = true;\n          break;\n        case 'care':\n          if (this.orderType === 'longTerm') {\n            this.carePagination.currentPage = 1;\n            this.filterAvailableCareItems();\n            this.showCareDialog = true;\n          } else {\n            console.warn(\"Cannot add care item for temporary orders.\");\n          }\n          break;\n        default:\n          this.addEmptyOrderRow();\n      }\n    },\n    addEmptyOrderRow() {\n      const newId = `new_${Date.now()}`;\n      const newOrder = {\n        id: newId,\n        group: '',\n        startTime: '',\n        content: '',\n        specification: '',\n        dosage: '',\n        dosageUnit: '',\n        usage: '',\n        frequency: '',\n        adminTime: '',\n        remarks: ''\n      };\n      // Add type-specific fields\n      if (this.orderType === 'temp') {\n        newOrder.days = '';\n        newOrder.total = '';\n      } else {\n        newOrder.stopTime = null;\n      }\n      this.orderList.push(newOrder);\n    },\n    handleOrderSelectionChange(selection) {\n      this.selectedOrderIds = selection.map(item => item.id);\n      console.log(\"Selected order IDs:\", this.selectedOrderIds);\n    },\n    groupSelected() {\n      console.log(\"Grouping selected orders:\", this.selectedOrderIds);\n      if (this.selectedOrderIds.length < 2) {\n        this.$message.warning('请至少选择两个医嘱进行同组');\n        return;\n      }\n      // TODO: Implement grouping logic (assign same group number, check rules)\n      this.$message.info('同组功能待实现');\n    },\n    ungroupSelected() {\n      console.log(\"Ungrouping selected orders:\", this.selectedOrderIds);\n      if (this.selectedOrderIds.length === 0) {\n        this.$message.warning('请选择要拆组的医嘱');\n        return;\n      }\n      // TODO: Implement ungrouping logic (clear group number)\n      this.$message.info('拆组功能待实现');\n    },\n    deleteSelected() {\n      console.log(\"Deleting selected orders:\", this.selectedOrderIds);\n      if (this.selectedOrderIds.length === 0) {\n        this.$message.warning('请选择要删除的医嘱');\n        return;\n      }\n      this.orderList = this.orderList.filter(order => !this.selectedOrderIds.includes(order.id));\n      this.$message.success('选中的医嘱已删除（模拟）');\n      this.selectedOrderIds = [];\n    },\n    // --- EMR Methods ---\n    loadAvailableEmrTemplates() {\n      console.log(\"Loading EMR templates...\");\n      // Simulate API call\n      this.availableEmrTemplates = [{\n        id: 'tpl1',\n        name: '上呼吸道感染',\n        data: {\n          chiefComplaint: '发热、咳嗽、流涕3天',\n          historyPresentIllness: '3天前无明显诱因出现上述症状，伴咽痛，无寒战... ',\n          pastMedicalHistory: '否认高血压、糖尿病史',\n          clinicalDiagnosis: '急性上呼吸道感染'\n        }\n      }, {\n        id: 'tpl2',\n        name: '高血压、冠心病',\n        data: {\n          chiefComplaint: '头晕、胸闷1周',\n          historyPresentIllness: '患者1周前劳累后出现头晕，伴胸闷、心悸，休息后稍缓解...',\n          pastMedicalHistory: '高血压病史10年，冠心病史5年',\n          clinicalDiagnosis: '高血压病3级（极高危）；冠心病'\n        }\n      }, {\n        id: 'tpl3',\n        name: '老年痴呆',\n        data: {\n          chiefComplaint: '记忆力下降半年',\n          historyPresentIllness: '半年前开始出现记忆力减退，近期加重，日常生活能力下降...',\n          pastMedicalHistory: '否认特殊病史',\n          clinicalDiagnosis: '阿尔茨海默病'\n        }\n      }, {\n        id: 'tpl4',\n        name: '美尼尔综合征',\n        data: {\n          chiefComplaint: '反复眩晕、耳鸣2年',\n          historyPresentIllness: '患者2年来反复出现发作性眩晕，伴恶心、呕吐及右耳耳鸣、听力下降...',\n          pastMedicalHistory: '',\n          clinicalDiagnosis: '美尼尔综合征'\n        }\n      }, {\n        id: 'tpl5',\n        name: '精力旺盛',\n        data: {\n          chiefComplaint: '最近爱讲笑话',\n          historyPresentIllness: '王大爷年纪大了，爱说笑话；拉着小王叨叨絮絮3天都没睡觉了。',\n          pastMedicalHistory: '无',\n          clinicalDiagnosis: '精力旺盛'\n        }\n      }];\n      this.filterEmrTemplates(); // Initial filter\n    },\n    filterEmrTemplates() {\n      const keyword = this.templateSearchKeyword.trim().toLowerCase();\n      if (!keyword) {\n        this.filteredEmrTemplates = [...this.availableEmrTemplates];\n      } else {\n        this.filteredEmrTemplates = this.availableEmrTemplates.filter(template => template.name.toLowerCase().includes(keyword));\n      }\n    },\n    applyEmrTemplate(template) {\n      console.log(\"Applying EMR template:\", template.name);\n      if (template && template.data) {\n        // Overwrite relevant fields in emrData\n        // Use Object.assign or loop for safer merging if needed\n        this.emrData.chiefComplaint = template.data.chiefComplaint || this.emrData.chiefComplaint;\n        this.emrData.historyPresentIllness = template.data.historyPresentIllness || this.emrData.historyPresentIllness;\n        this.emrData.pastMedicalHistory = template.data.pastMedicalHistory || this.emrData.pastMedicalHistory;\n        this.emrData.physicalExamNotes = template.data.physicalExamNotes || this.emrData.physicalExamNotes;\n        this.emrData.auxiliaryExam = template.data.auxiliaryExam || this.emrData.auxiliaryExam;\n        this.emrData.treatmentPlan = template.data.treatmentPlan || this.emrData.treatmentPlan;\n\n        // Handle clinical diagnosis separately (add as tag)\n        const templateDiagnosis = template.data.clinicalDiagnosis;\n        if (templateDiagnosis && !this.emrDiagnoses.includes(templateDiagnosis)) {\n          this.emrDiagnoses.push(templateDiagnosis);\n        } // Maybe clear existing diagnosis input: this.emrData.clinicalDiagnosis = '';\n\n        this.$message.success(`已应用模板: ${template.name}`);\n      } else {\n        this.$message.error('无法应用所选模板');\n      }\n      this.showTemplatePopover = false; // Close popover after applying\n    },\n    saveAsEmrTemplate() {\n      console.log(\"Saving as EMR template:\", this.emrData);\n      this.$message.info(\"另存为模板功能待实现\");\n      // TODO: Implement save as template logic\n    },\n    saveEmrData() {\n      console.log(\"Saving EMR data:\", this.emrData, \"Diagnoses:\", this.emrDiagnoses);\n      this.$message.success('电子病历已保存（模拟）');\n      // TODO: Implement API call to save EMR data\n    },\n    addEmrDiagnosis() {\n      const newDiagnosis = this.emrData.clinicalDiagnosis.trim();\n      if (newDiagnosis && !this.emrDiagnoses.includes(newDiagnosis)) {\n        this.emrDiagnoses.push(newDiagnosis);\n      }\n      this.emrData.clinicalDiagnosis = ''; // Clear input after adding\n    },\n    removeEmrDiagnosis(tag) {\n      this.emrDiagnoses.splice(this.emrDiagnoses.indexOf(tag), 1);\n    },\n    loadAvailableItems() {\n      // Simulate loading all available items for selection dialogs\n      console.log(\"Loading available items for dialogs...\");\n      this.availableDrugs = [{\n        id: 'd1',\n        name: '阿司匹林肠溶片',\n        spec: '100mg*30片/盒',\n        unit: '盒',\n        price: 15.50,\n        stock: 500,\n        manufacturer: '拜耳医药',\n        type: 'western'\n      }, {\n        id: 'd2',\n        name: '布洛芬缓释胶囊',\n        spec: '0.3g*10粒/盒',\n        unit: '盒',\n        price: 28.00,\n        stock: 150,\n        manufacturer: '西南药业',\n        type: 'western'\n      }, {\n        id: 'd3',\n        name: '头孢克肟胶囊',\n        spec: '0.1g*6粒/盒',\n        unit: '盒',\n        price: 45.80,\n        stock: 80,\n        manufacturer: '哈药集团',\n        type: 'western'\n      }, {\n        id: 'd4',\n        name: '感冒清热颗粒',\n        spec: '10g*10袋/盒',\n        unit: '盒',\n        price: 22.00,\n        stock: 300,\n        manufacturer: '同仁堂',\n        type: 'chinese'\n      }, {\n        id: 'd5',\n        name: '维生素C片',\n        spec: '100mg*100片/瓶',\n        unit: '瓶',\n        price: 9.90,\n        stock: 1000,\n        manufacturer: '国药集团',\n        type: 'western'\n      }];\n      this.availableTreatments = [{\n        id: 't1',\n        name: '血常规',\n        type: '化验',\n        unit: '次',\n        price: 25.00\n      }, {\n        id: 't2',\n        name: '尿常规',\n        type: '化验',\n        unit: '次',\n        price: 15.00\n      }, {\n        id: 't3',\n        name: '肝功能全套',\n        type: '化验',\n        unit: '次',\n        price: 80.00\n      }, {\n        id: 't4',\n        name: '胸部X光片',\n        type: '检查',\n        unit: '次',\n        price: 120.00\n      }, {\n        id: 't5',\n        name: '心电图',\n        type: '检查',\n        unit: '次',\n        price: 50.00\n      }, {\n        id: 't6',\n        name: '24小时尿蛋白定量',\n        type: '化验',\n        unit: '次',\n        price: 38.00\n      }, {\n        id: 't7',\n        name: '腹部B超',\n        type: '检查',\n        unit: '次',\n        price: 100.00\n      }];\n      this.availableCareItems = [{\n        id: 'c1',\n        name: '按内科常规护理',\n        type: '护理常规'\n      }, {\n        id: 'c2',\n        name: '一级护理',\n        type: '护理常规'\n      }, {\n        id: 'c3',\n        name: '二级护理',\n        type: '护理常规'\n      }, {\n        id: 'c4',\n        name: '半流质饮食',\n        type: '饮食'\n      }, {\n        id: 'c5',\n        name: '糖尿病饮食',\n        type: '饮食'\n      }, {\n        id: 'c6',\n        name: '测量血压 qid',\n        type: '生命体征'\n      }, {\n        id: 'c7',\n        name: '血糖监测 tid',\n        type: '生命体征'\n      }];\n\n      // Initialize filtered lists\n      this.filterAvailableDrugs();\n      this.filterAvailableTreatments();\n      this.filterAvailableCareItems();\n    },\n    // --- Dialog Specific Methods ---\n    handleDialogSelectionChange(selection) {\n      // Check selection limit (example for drugs)\n      if (this.showDrugDialog && selection.length > 5) {\n        this.$message.warning('一次最多只能选择5种药物');\n        // Find the last selected item and deselect it\n        // This requires knowing which item was just added to the selection,\n        // which element-ui's selection-change doesn't directly provide.\n        // A more robust approach might involve watching the selection or using the `select` event.\n        // Simple rollback (may not be perfect UX):\n        this.$nextTick(() => {\n          const tableRef = this.$refs.drugSelectTable;\n          if (tableRef) {\n            // Find items selected now that weren't selected before (tricky)\n            // Or just deselect the last one if selection length exceeds limit\n            const lastItem = selection[selection.length - 1];\n            if (lastItem) tableRef.toggleRowSelection(lastItem, false);\n          }\n        });\n        return; // Prevent updating selectedDialogItems beyond limit\n      }\n      this.selectedDialogItems = selection;\n      console.log(\"Dialog selection updated:\", this.selectedDialogItems);\n    },\n    handleDialogSubmit(itemType) {\n      console.log(`Submitting selected ${itemType}(s):`, this.selectedDialogItems);\n      if (!this.selectedDialogItems || this.selectedDialogItems.length === 0) {\n        this.$message.warning('请至少选择一个项目');\n        return;\n      }\n\n      // Format selected items and add to the main order list\n      this.selectedDialogItems.forEach(item => {\n        const newOrder = {\n          id: `new_${Date.now()}_${Math.random().toString(16).slice(2)}`,\n          // More unique ID\n          group: '',\n          // Or logic to determine group\n          startTime: '',\n          // Or default to now\n          content: item.name,\n          // Basic mapping\n          specification: itemType === 'drug' ? item.spec : '',\n          dosage: '',\n          // User needs to fill these in the main table\n          dosageUnit: itemType === 'drug' ? item.unit ? item.unit.toLowerCase() : '' : '',\n          // Attempt basic unit mapping\n          usage: '',\n          frequency: '',\n          adminTime: '',\n          remarks: ''\n          // Add other relevant fields based on itemType if available\n        };\n        if (this.orderType === 'temp') {\n          newOrder.days = '';\n          newOrder.total = '';\n        } else {\n          newOrder.stopTime = null;\n        }\n        this.orderList.push(newOrder);\n      });\n\n      // Close the corresponding dialog\n      if (itemType === 'drug') this.showDrugDialog = false;\n      if (itemType === 'treatment') this.showTreatmentDialog = false;\n      if (itemType === 'care') this.showCareDialog = false;\n      this.selectedDialogItems = []; // Clear selection\n    },\n    // --- Filtering Methods for Dialogs ---\n    filterAvailableDrugs() {\n      const keyword = this.drugSearch.keyword.toLowerCase();\n      const category = this.drugSearch.category;\n      this.filteredAvailableDrugs = this.availableDrugs.filter(drug => {\n        const matchKeyword = !keyword || drug.name.toLowerCase().includes(keyword) || drug.id && drug.id.toLowerCase().includes(keyword) ||\n        // Search by ID if available\n        drug.manufacturer && drug.manufacturer.toLowerCase().includes(keyword);\n        const matchCategory = !category || drug.type === category;\n        return matchKeyword && matchCategory;\n      });\n      this.drugPagination.currentPage = 1; // Reset page on filter change\n    },\n    filterAvailableTreatments() {\n      const keyword = this.treatmentSearch.keyword.toLowerCase();\n      const category = this.treatmentSearch.category;\n      this.filteredAvailableTreatments = this.availableTreatments.filter(item => {\n        const matchKeyword = !keyword || item.name.toLowerCase().includes(keyword);\n        const matchCategory = !category || item.type.toLowerCase().includes(category.toLowerCase()); // Adjust category match if needed\n        return matchKeyword && matchCategory;\n      });\n      this.treatmentPagination.currentPage = 1;\n    },\n    filterAvailableCareItems() {\n      const keyword = this.careSearch.keyword.toLowerCase();\n      const category = this.careSearch.category;\n      this.filteredAvailableCareItems = this.availableCareItems.filter(item => {\n        const matchKeyword = !keyword || item.name.toLowerCase().includes(keyword);\n        const matchCategory = !category || item.type.toLowerCase().includes(category.toLowerCase());\n        return matchKeyword && matchCategory;\n      });\n      this.carePagination.currentPage = 1;\n    },\n    // --- Pagination Handlers for Dialogs ---\n    handleDrugPageSizeChange(val) {\n      this.drugPagination.pageSize = val;\n      this.drugPagination.currentPage = 1;\n    },\n    handleDrugPageChange(val) {\n      this.drugPagination.currentPage = val;\n    },\n    handleTreatmentPageSizeChange(val) {\n      this.treatmentPagination.pageSize = val;\n      this.treatmentPagination.currentPage = 1;\n    },\n    handleTreatmentPageChange(val) {\n      this.treatmentPagination.currentPage = val;\n    },\n    handleCarePageSizeChange(val) {\n      this.carePagination.pageSize = val;\n      this.carePagination.currentPage = 1;\n    },\n    handleCarePageChange(val) {\n      this.carePagination.currentPage = val;\n    }\n  }\n};","map":{"version":3,"names":["name","props","patientId","type","String","required","data","patientInfo","orderType","editOrderId","activeRightTab","diagnosisInput","urgentExecution","orderList","selectedOrderIds","emrData","chiefComplaint","historyPresentIllness","pastMedicalHistory","temperature","pulse","respiration","bpSystolic","bpDiastolic","physicalExamNotes","auxiliaryExam","clinicalDiagnosis","treatmentPlan","emrDiagnoses","showDrugDialog","showTreatmentDialog","showCareDialog","drugDialogTab","availableDrugs","availableTreatments","availableCareItems","filteredAvailableDrugs","filteredAvailableTreatments","filteredAvailableCareItems","drugSearch","category","keyword","treatmentSearch","careSearch","selectedDialogItems","drugPagination","currentPage","pageSize","treatmentPagination","carePagination","showTemplatePopover","templateSearchKeyword","availableEmrTemplates","filteredEmrTemplates","computed","currentOrderList","watch","$route","to","from","params","query","initializeComponent","created","loadAvailableItems","loadAvailableEmrTemplates","methods","console","log","fetchPatientDetails","loadInitialOrders","goBack","$router","go","id","gender","age","roomNumber","admissionId","chargeType","medicalCard","department","visitDate","allergyHistory","group","startTime","content","frequency","specification","dosage","dosageUnit","usage","adminTime","remarks","stopTime","removeDiagnosis","tag","addDiagnosis","submitOrders","$message","success","addOrderItem","filterAvailableDrugs","filterAvailableTreatments","filterAvailableCareItems","warn","addEmptyOrderRow","newId","Date","now","newOrder","days","total","push","handleOrderSelectionChange","selection","map","item","groupSelected","length","warning","info","ungroupSelected","deleteSelected","filter","order","includes","filterEmrTemplates","trim","toLowerCase","template","applyEmrTemplate","templateDiagnosis","error","saveAsEmrTemplate","saveEmrData","addEmrDiagnosis","newDiagnosis","removeEmrDiagnosis","splice","indexOf","spec","unit","price","stock","manufacturer","handleDialogSelectionChange","$nextTick","tableRef","$refs","drugSelectTable","lastItem","toggleRowSelection","handleDialogSubmit","itemType","forEach","Math","random","toString","slice","drug","matchKeyword","matchCategory","handleDrugPageSizeChange","val","handleDrugPageChange","handleTreatmentPageSizeChange","handleTreatmentPageChange","handleCarePageSizeChange","handleCarePageChange"],"sources":["src/views/MedicalOrderDetail.vue"],"sourcesContent":["<template>\n    <div class=\"medical-order-detail-container\">\n      <!-- 顶部操作栏 -->\n      <div class=\"top-bar\">\n        <el-button icon=\"el-icon-arrow-left\" @click=\"goBack\" size=\"small\">返回</el-button>\n        <span class=\"patient-id-tag\">No. {{ patientInfo.admissionId || '0006589' }}</span>\n      </div>\n  \n      <div class=\"main-content\">\n        <!-- 左侧患者信息 -->\n        <div class=\"patient-info-panel\">\n          <div class=\"info-header\">\n            <div class=\"avatar\">张</div> <!-- Placeholder -->\n            <div class=\"name-details\">\n              <span class=\"name\">{{ patientInfo.name || '王大爷' }}</span>\n              <span class=\"gender\">{{ patientInfo.gender || '男' }}</span>\n              <span class=\"age\">{{ patientInfo.age || '86' }}周岁</span>\n            </div>\n          </div>\n          <div class=\"info-body\">\n            <p><strong>房间床位:</strong> {{ patientInfo.roomNumber || '2206-5' }}</p>\n            <p><strong>入院编号:</strong> {{ patientInfo.admissionId || '20240506124' }}</p>\n            <p><strong>费别:</strong> {{ patientInfo.chargeType || '医保' }}</p>\n            <p><strong>医保卡号:</strong> {{ patientInfo.medicalCard || 'D053252131' }}</p>\n            <p><strong>科别:</strong> {{ patientInfo.department || '' }}</p>\n            <p><strong>就诊日期:</strong> {{ patientInfo.visitDate || '2024-05-12' }}</p>\n            <p><strong>过敏史:</strong> <span class=\"allergy\">{{ patientInfo.allergyHistory || '青霉素、头孢、先锋类' }}</span></p>\n          </div>\n        </div>\n  \n        <!-- 右侧医嘱编辑区 -->\n        <div class=\"order-edit-panel\">\n          <el-tabs v-model=\"activeRightTab\" type=\"card\">\n            <el-tab-pane :label=\"orderType === 'temp' ? '临时医嘱' : '长期医嘱'\" :name=\"orderType\">\n              <div class=\"order-toolbar\">\n                <div class=\"diagnosis-section\">\n                  <span class=\"required\">*</span><label>临床诊断:</label>\n                  <el-tag closable @close=\"removeDiagnosis('头痛病')\">头痛病</el-tag> <!-- Example -->\n                  <el-input\n                    placeholder=\"输入名称或助记码,按回车添加\"\n                    size=\"small\"\n                    style=\"width: 250px; margin-left: 10px;\"\n                    v-model=\"diagnosisInput\"\n                    @keyup.enter.native=\"addDiagnosis\"\n                  ></el-input>\n                </div>\n                <div class=\"actions\">\n                   <el-checkbox v-model=\"urgentExecution\">需摆药</el-checkbox>\n                   <el-button type=\"primary\" size=\"small\" @click=\"submitOrders\">发送医嘱</el-button>\n                </div>\n              </div>\n  \n              <div class=\"order-type-buttons\">\n                 <el-button size=\"small\" @click=\"addOrderItem('drug')\">+ 药物</el-button>\n                 <el-button size=\"small\" @click=\"addOrderItem('treatment')\">+ 诊疗</el-button>\n                 <el-button size=\"small\" @click=\"addOrderItem('care')\" v-if=\"orderType === 'longTerm'\">+ 护理</el-button>\n                 <span style=\"margin-left: 20px;\">\n                   <el-button type=\"text\" size=\"small\" icon=\"el-icon-link\" @click=\"groupSelected\">同组</el-button>\n                   <el-button type=\"text\" size=\"small\" icon=\"el-icon-scissors\" @click=\"ungroupSelected\">拆组</el-button>\n                   <el-button type=\"text\" size=\"small\" icon=\"el-icon-delete\" @click=\"deleteSelected\" style=\"color: #F56C6C;\">删除</el-button>\n                 </span>\n              </div>\n  \n              <!-- 医嘱编辑表格 -->\n              <el-table\n                :data=\"currentOrderList\"\n                style=\"width: 100%\"\n                row-key=\"id\"\n                ref=\"orderTable\"\n                 @selection-change=\"handleOrderSelectionChange\"\n              >\n                <el-table-column type=\"selection\" width=\"45\"></el-table-column>\n                <el-table-column label=\"组号\" width=\"60\" prop=\"group\">\n                  <template slot-scope=\"scope\">\n                     <!-- Logic for displaying group number or grouping icon -->\n                     {{ scope.row.group || ''}}\n                  </template>\n                </el-table-column>\n                <el-table-column label=\"*开始时间\" width=\"160\">\n                   <template slot-scope=\"scope\">\n                      <el-date-picker\n                        v-model=\"scope.row.startTime\"\n                        type=\"datetime\"\n                        size=\"mini\"\n                        placeholder=\"选择时间\"\n                         format=\"MM/dd HH:mm\"\n                         value-format=\"yyyy-MM-dd HH:mm:ss\"\n                      ></el-date-picker>\n                   </template>\n                </el-table-column>\n                <el-table-column label=\"内容\" width=\"250\">\n                   <template slot-scope=\"scope\">\n                       <!-- Different input based on order type (drug, treatment, care) -->\n                      <el-input size=\"mini\" v-model=\"scope.row.content\" placeholder=\"医嘱内容\"></el-input>\n                   </template>\n                </el-table-column>\n                 <el-table-column label=\"规格\" width=\"150\">\n                    <template slot-scope=\"scope\">\n                      <el-input size=\"mini\" v-model=\"scope.row.specification\" placeholder=\"规格\"></el-input>\n                    </template>\n                </el-table-column>\n                 <el-table-column label=\"*单次剂量\" width=\"120\">\n                    <template slot-scope=\"scope\">\n                      <el-input size=\"mini\" v-model=\"scope.row.dosage\" placeholder=\"剂量\">\n                         <el-select v-model=\"scope.row.dosageUnit\" slot=\"append\" placeholder=\"单位\" style=\"width: 60px;\">\n                            <el-option label=\"ml\" value=\"ml\"></el-option>\n                            <el-option label=\"g\" value=\"g\"></el-option>\n                            <el-option label=\"mg\" value=\"mg\"></el-option>\n                            <!-- More units -->\n                         </el-select>\n                      </el-input>\n                    </template>\n                </el-table-column>\n                 <el-table-column label=\"*用法\" width=\"150\">\n                     <template slot-scope=\"scope\">\n                       <el-select v-model=\"scope.row.usage\" placeholder=\"选择用法\" size=\"mini\">\n                         <el-option label=\"口服(po)\" value=\"po\"></el-option>\n                         <el-option label=\"静脉滴注(ivdrip)\" value=\"ivdrip\"></el-option>\n                         <!-- More usages -->\n                       </el-select>\n                     </template>\n                 </el-table-column>\n                 <el-table-column label=\"*频率\" width=\"150\">\n                    <template slot-scope=\"scope\">\n                       <el-select v-model=\"scope.row.frequency\" placeholder=\"选择频率\" size=\"mini\">\n                         <el-option label=\"每天1次(qd)\" value=\"qd\"></el-option>\n                         <el-option label=\"每天2次(bid)\" value=\"bid\"></el-option>\n                         <el-option label=\"每天3次(tid)\" value=\"tid\"></el-option>\n                         <!-- More frequencies -->\n                       </el-select>\n                     </template>\n                 </el-table-column>\n                 <el-table-column label=\"给药时间\" width=\"150\">\n                     <template slot-scope=\"scope\">\n                       <!-- Placeholder for administration time logic -->\n                        <el-input size=\"mini\" v-model=\"scope.row.adminTime\" placeholder=\"时间点\"></el-input>\n                     </template>\n                 </el-table-column>\n                  <el-table-column label=\"备注\" width=\"100\">\n                    <template slot-scope=\"scope\">\n                       <el-input size=\"mini\" v-model=\"scope.row.remarks\" placeholder=\"备注\"></el-input>\n                     </template>\n                 </el-table-column>\n                 <!-- Add more columns if needed -->\n              </el-table>\n               <el-button type=\"text\" icon=\"el-icon-plus\" @click=\"addEmptyOrderRow\" style=\"margin-top: 10px;\">添加</el-button>\n  \n            </el-tab-pane>\n            <el-tab-pane label=\"电子病历\" name=\"emr\" class=\"emr-tab-pane\">\n              <div class=\"emr-toolbar\">\n                  <div>\n                      <!-- START: Added Popover for Template Selection -->\n                      <el-popover\n                        placement=\"bottom-start\"\n                        width=\"300\"\n                        trigger=\"click\"\n                        v-model=\"showTemplatePopover\"\n                      >\n                        <div class=\"template-popover\">\n                          <el-input\n                            placeholder=\"搜索模板名称\"\n                            v-model=\"templateSearchKeyword\"\n                            size=\"mini\"\n                            clearable\n                            @input=\"filterEmrTemplates\"\n                          >\n                            <i slot=\"prefix\" class=\"el-input__icon el-icon-search\"></i>\n                          </el-input>\n                          <ul class=\"template-list\">\n                            <li \n                              v-for=\"template in filteredEmrTemplates\"\n                              :key=\"template.id\"\n                              @click=\"applyEmrTemplate(template)\"\n                            >\n                              {{ template.name }}\n                            </li>\n                            <li v-if=\"filteredEmrTemplates.length === 0\" class=\"no-template\">\n                              无匹配模板\n                            </li>\n                          </ul>\n                        </div>\n                        <el-button slot=\"reference\" size=\"small\" icon=\"el-icon-document\">选择模板</el-button>\n                      </el-popover>\n                      <!-- END: Added Popover -->\n                      <el-button type=\"text\" size=\"small\" @click=\"saveAsEmrTemplate\" style=\"margin-left: 10px;\">另存为模板</el-button>\n                  </div>\n                  <el-button type=\"primary\" size=\"small\" @click=\"saveEmrData\">保存病历</el-button>\n              </div>\n\n              <el-form ref=\"emrForm\" :model=\"emrData\" label-width=\"100px\" class=\"emr-form\">\n                <el-form-item label=\"主诉:\">\n                  <el-input type=\"textarea\" v-model=\"emrData.chiefComplaint\" :rows=\"2\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"现病史:\">\n                  <el-input type=\"textarea\" v-model=\"emrData.historyPresentIllness\" :rows=\"3\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"既往史:\">\n                  <el-input type=\"textarea\" v-model=\"emrData.pastMedicalHistory\" :rows=\"3\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"体格检查:\">\n                  <div class=\"physical-exam-row\">\n                    <span>T</span> <el-input v-model=\"emrData.temperature\" size=\"mini\"><template slot=\"append\">°C</template></el-input>\n                    <span>P</span> <el-input v-model=\"emrData.pulse\" size=\"mini\"><template slot=\"append\">次/分</template></el-input>\n                    <span>R</span> <el-input v-model=\"emrData.respiration\" size=\"mini\"><template slot=\"append\">次/分</template></el-input>\n                    <span>BP</span> <el-input v-model=\"emrData.bpSystolic\" size=\"mini\"></el-input> / <el-input v-model=\"emrData.bpDiastolic\" size=\"mini\"><template slot=\"append\">mmHg</template></el-input>\n                  </div>\n                  <el-input type=\"textarea\" v-model=\"emrData.physicalExamNotes\" placeholder=\"体检描述\" :rows=\"3\" style=\"margin-top: 10px;\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"辅助检查:\">\n                  <el-input type=\"textarea\" v-model=\"emrData.auxiliaryExam\" placeholder=\"辅助检查结果\" :rows=\"3\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"*临床诊断:\">\n                  <!-- Reuse diagnosis logic/component or simple input for now -->\n                   <el-input\n                      v-model=\"emrData.clinicalDiagnosis\"\n                      placeholder=\"输入名称或助记码,按回车添加\"\n                      @keyup.enter.native=\"addEmrDiagnosis\"\n                   ></el-input>\n                   <!-- Display added diagnoses as tags -->\n                   <div style=\"margin-top: 5px;\">\n                       <el-tag \n                           v-for=\"tag in emrDiagnoses\" \n                           :key=\"tag\" \n                           closable \n                           @close=\"removeEmrDiagnosis(tag)\"\n                           style=\"margin-right: 5px;\"\n                       >{{ tag }}</el-tag>\n                   </div>\n                </el-form-item>\n                <el-form-item label=\"处理意见:\">\n                  <el-input type=\"textarea\" v-model=\"emrData.treatmentPlan\" :rows=\"4\"></el-input>\n                </el-form-item>\n              </el-form>\n            </el-tab-pane>\n          </el-tabs>\n           <div class=\"bottom-notes\" v-if=\"activeRightTab !== 'emr'\">\n              <p>提示：</p>\n              <ol>\n                  <li>添加药物交互要求同病历处方</li>\n                  <li>仅药物类医嘱可同组；选择非药物类医嘱后，点击同组提示：诊疗、护理类医嘱不能同组</li>\n                  <li>护理类、诊疗类医嘱部分字段不设填写项，参照原型所示。</li>\n                  <li>护理类医嘱，相同分类的只能选一个（同类不可重复，选择窗口提交时检测提示：不能同时选择多个相同类型的医嘱）</li>\n              </ol>\n          </div>\n        </div>\n      </div>\n\n      <!-- START: Dialogs for Adding Items -->\n\n      <!-- 添加药物 Dialog -->\n      <el-dialog title=\"添加药物\" :visible.sync=\"showDrugDialog\" width=\"75%\" top=\"8vh\" class=\"item-select-dialog\">\n        <div class=\"dialog-toolbar\">\n          <el-select v-model=\"drugSearch.category\" placeholder=\"全部分类\" size=\"small\" style=\"width: 150px;\">\n            <!-- Add categories if needed -->\n            <el-option label=\"全部类型\" value=\"\"></el-option>\n            <el-option label=\"西药\" value=\"western\"></el-option>\n            <el-option label=\"中成药\" value=\"chinese\"></el-option>\n          </el-select>\n          <el-input\n            placeholder=\"名称/条码/编码/助记码\"\n            v-model=\"drugSearch.keyword\"\n            size=\"small\"\n            style=\"width: 300px; margin-left: 10px;\"\n            clearable\n            @input=\"filterAvailableDrugs\"\n            @keyup.enter.native=\"filterAvailableDrugs\"\n          >\n             <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"filterAvailableDrugs\"></el-button>\n          </el-input>\n          <!-- Tabs for 药品库/长者药品 -->\n          <el-tabs v-model=\"drugDialogTab\" size=\"small\" style=\"margin-left: auto;\">\n              <el-tab-pane label=\"药品库\" name=\"stock\"></el-tab-pane>\n              <el-tab-pane label=\"长者药品()\" name=\"patientSpecific\" disabled></el-tab-pane> \n          </el-tabs>\n        </div>\n        <el-table \n          :data=\"pagedAvailableDrugs\" \n          ref=\"drugSelectTable\"\n          @selection-change=\"handleDialogSelectionChange\" \n          height=\"450px\"\n          style=\"width: 100%\"\n        >\n          <el-table-column type=\"selection\" width=\"55\"></el-table-column>\n          <el-table-column prop=\"name\" label=\"药品名称\"></el-table-column>\n          <el-table-column prop=\"spec\" label=\"规格\" width=\"180\"></el-table-column>\n          <el-table-column prop=\"unit\" label=\"包装单位\" width=\"100\"></el-table-column>\n          <el-table-column prop=\"price\" label=\"单价(元)\" width=\"100\"></el-table-column>\n          <el-table-column prop=\"stock\" label=\"可用库存\" width=\"100\"></el-table-column>\n          <el-table-column prop=\"manufacturer\" label=\"厂家\"></el-table-column>\n        </el-table>\n         <el-pagination\n           style=\"margin-top: 15px; text-align: right;\"\n           @size-change=\"handleDrugPageSizeChange\"\n           @current-change=\"handleDrugPageChange\"\n           :current-page=\"drugPagination.currentPage\"\n           :page-sizes=\"[10, 20, 50]\"\n           :page-size=\"drugPagination.pageSize\"\n           layout=\"total, sizes, prev, pager, next\"\n           :total=\"filteredAvailableDrugs.length\"\n         >\n         </el-pagination>\n        <div class=\"dialog-footer-notes\">\n          <p>西医处方，只展示西药+中成药</p>\n          <p>需要提供分页，跨搜索条件多选能力</p>\n          <p>【可选交互】本页面勾选时，一次最多选择5种药物（选第六个的时候，弹出提示：一次最多只能选择5种药物）</p>\n        </div>\n        <div slot=\"footer\">\n          <el-button @click=\"showDrugDialog = false\" size=\"small\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"handleDialogSubmit('drug')\" size=\"small\">提 交</el-button>\n        </div>\n      </el-dialog>\n\n      <!-- 添加诊疗 Dialog -->\n       <el-dialog title=\"添加诊疗\" :visible.sync=\"showTreatmentDialog\" width=\"60%\" top=\"10vh\" class=\"item-select-dialog\">\n        <div class=\"dialog-toolbar\">\n          <el-select v-model=\"treatmentSearch.category\" placeholder=\"全部分类\" size=\"small\" style=\"width: 150px;\">\n             <el-option label=\"全部类型\" value=\"\"></el-option>\n             <el-option label=\"检查\" value=\"check\"></el-option>\n             <el-option label=\"化验\" value=\"lab\"></el-option>\n          </el-select>\n          <el-input\n            placeholder=\"名称/助记码\"\n            v-model=\"treatmentSearch.keyword\"\n            size=\"small\"\n            style=\"width: 300px; margin-left: 10px;\"\n            clearable\n             @input=\"filterAvailableTreatments\"\n            @keyup.enter.native=\"filterAvailableTreatments\"\n          >\n            <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"filterAvailableTreatments\"></el-button>\n          </el-input>\n        </div>\n        <el-table \n          :data=\"pagedAvailableTreatments\" \n          ref=\"treatmentSelectTable\"\n          @selection-change=\"handleDialogSelectionChange\" \n          height=\"400px\"\n          style=\"width: 100%\"\n        >\n          <el-table-column type=\"selection\" width=\"55\"></el-table-column>\n          <el-table-column prop=\"name\" label=\"项目名\"></el-table-column>\n          <el-table-column prop=\"type\" label=\"类型\" width=\"150\"></el-table-column>\n          <el-table-column prop=\"unit\" label=\"单位\" width=\"100\"></el-table-column>\n          <el-table-column prop=\"price\" label=\"单价(元)\" width=\"120\"></el-table-column>\n        </el-table>\n         <el-pagination\n           style=\"margin-top: 15px; text-align: right;\"\n           @size-change=\"handleTreatmentPageSizeChange\"\n           @current-change=\"handleTreatmentPageChange\"\n           :current-page=\"treatmentPagination.currentPage\"\n           :page-sizes=\"[10, 20, 50]\"\n           :page-size=\"treatmentPagination.pageSize\"\n           layout=\"total, sizes, prev, pager, next\"\n           :total=\"filteredAvailableTreatments.length\"\n         >\n         </el-pagination>\n        <div slot=\"footer\">\n          <el-button @click=\"showTreatmentDialog = false\" size=\"small\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"handleDialogSubmit('treatment')\" size=\"small\">提 交</el-button>\n        </div>\n      </el-dialog>\n\n      <!-- 添加护理 Dialog -->\n       <el-dialog title=\"添加护理\" :visible.sync=\"showCareDialog\" width=\"60%\" top=\"10vh\" class=\"item-select-dialog\">\n         <div class=\"dialog-toolbar\">\n           <el-select v-model=\"careSearch.category\" placeholder=\"全部分类\" size=\"small\" style=\"width: 150px;\">\n              <el-option label=\"全部类型\" value=\"\"></el-option>\n              <el-option label=\"护理常规\" value=\"routine\"></el-option>\n              <el-option label=\"饮食\" value=\"diet\"></el-option>\n           </el-select>\n           <el-input\n             placeholder=\"名称/助记码\"\n             v-model=\"careSearch.keyword\"\n             size=\"small\"\n             style=\"width: 300px; margin-left: 10px;\"\n             clearable\n              @input=\"filterAvailableCareItems\"\n             @keyup.enter.native=\"filterAvailableCareItems\"\n           >\n             <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"filterAvailableCareItems\"></el-button>\n           </el-input>\n         </div>\n         <el-table \n           :data=\"pagedAvailableCareItems\" \n           ref=\"careSelectTable\"\n           @selection-change=\"handleDialogSelectionChange\" \n           height=\"400px\"\n           style=\"width: 100%\"\n         >\n           <el-table-column type=\"selection\" width=\"55\"></el-table-column>\n           <el-table-column prop=\"name\" label=\"项目名\"></el-table-column>\n           <el-table-column prop=\"type\" label=\"类型\" width=\"180\"></el-table-column>\n         </el-table>\n          <el-pagination\n            style=\"margin-top: 15px; text-align: right;\"\n            @size-change=\"handleCarePageSizeChange\"\n            @current-change=\"handleCarePageChange\"\n            :current-page=\"carePagination.currentPage\"\n            :page-sizes=\"[10, 20, 50]\"\n            :page-size=\"carePagination.pageSize\"\n            layout=\"total, sizes, prev, pager, next\"\n            :total=\"filteredAvailableCareItems.length\"\n          >\n          </el-pagination>\n         <div slot=\"footer\">\n           <el-button @click=\"showCareDialog = false\" size=\"small\">取 消</el-button>\n           <el-button type=\"primary\" @click=\"handleDialogSubmit('care')\" size=\"small\">提 交</el-button>\n         </div>\n       </el-dialog>\n\n      <!-- END: Dialogs for Adding Items -->\n\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    name: 'MedicalOrderDetail',\n    props: {\n      patientId: { // Received from router\n        type: String,\n        required: true\n      }\n    },\n    data() {\n      return {\n        patientInfo: {}, // To store fetched patient data\n        orderType: 'longTerm', // Default or determined from route query\n        editOrderId: null, // ID of the order being edited, from route query\n        activeRightTab: 'longTerm', // Will be set based on orderType\n        diagnosisInput: '',\n        urgentExecution: false,\n        orderList: [], // Unified list for current order type\n        selectedOrderIds: [],\n        \n        // EMR Data\n        emrData: {\n            chiefComplaint: '',\n            historyPresentIllness: '',\n            pastMedicalHistory: '',\n            temperature: '',\n            pulse: '',\n            respiration: '',\n            bpSystolic: '',\n            bpDiastolic: '',\n            physicalExamNotes: '',\n            auxiliaryExam: '',\n            clinicalDiagnosis: '', // Input field model\n            treatmentPlan: ''\n        },\n        emrDiagnoses: [], // Array to store added diagnosis tags\n        // Dialog Visibility\n        showDrugDialog: false,\n        showTreatmentDialog: false,\n        showCareDialog: false,\n        drugDialogTab: 'stock', // Active tab in drug dialog\n\n        // Available Items (Mock Data - Replace with API calls)\n        availableDrugs: [],\n        availableTreatments: [],\n        availableCareItems: [],\n\n         // Filtered Lists for Tables\n         filteredAvailableDrugs: [],\n         filteredAvailableTreatments: [],\n         filteredAvailableCareItems: [],\n\n        // Search/Filter Models\n        drugSearch: { category: '', keyword: '' },\n        treatmentSearch: { category: '', keyword: '' },\n        careSearch: { category: '', keyword: '' },\n\n        // Dialog Selections\n        selectedDialogItems: [], // Store selection from the currently open dialog\n\n         // Pagination for Dialogs\n         drugPagination: { currentPage: 1, pageSize: 10 },\n         treatmentPagination: { currentPage: 1, pageSize: 10 },\n         carePagination: { currentPage: 1, pageSize: 10 },\n\n         // START: Template Selection Data\n         showTemplatePopover: false,\n         templateSearchKeyword: '',\n         availableEmrTemplates: [], // Loaded in methods\n         filteredEmrTemplates: [],\n         // END: Template Selection Data\n      };\n    },\n    computed: {\n        // Use a computed property for the table data based on orderType\n        currentOrderList() {\n            // In a real app, this might be fetched or filtered based on orderType\n            return this.orderList; \n        }\n    },\n    watch: {\n        // Watch route changes to potentially reload data if navigating between patients\n        '$route'(to, from) {\n            if (to.params.patientId !== from.params.patientId || to.query.type !== from.query.type) {\n                this.initializeComponent();\n            }\n        }\n    },\n    created() {\n      this.initializeComponent();\n      this.loadAvailableItems(); // Load items for dialogs\n      this.loadAvailableEmrTemplates(); // Load templates\n    },\n    methods: {\n      initializeComponent() {\n          // Determine order type and edit ID from route query\n          this.orderType = this.$route.query.type === 'temp' ? 'temp' : 'longTerm';\n          this.editOrderId = this.$route.query.editOrderId || null;\n          this.activeRightTab = this.orderType; // Set active tab based on type\n          console.log(`Initializing for type: ${this.orderType}, editing order: ${this.editOrderId}`);\n\n          this.fetchPatientDetails();\n          this.loadInitialOrders(); // Load or initialize orders based on type/editId\n      },\n      goBack() {\n        this.$router.go(-1); // Go back to the previous page\n      },\n      fetchPatientDetails() {\n        console.log(`Fetching details for patient ID: ${this.patientId}`);\n        // --- Simulate API call ---\n        // In a real app, fetch patient info based on this.patientId\n        this.patientInfo = {\n           id: this.patientId, // Use the passed ID\n           name: '王大爷',\n           gender: '男',\n           age: '86',\n           roomNumber: '2206-5',\n           admissionId: '20240506124',\n           chargeType: '医保',\n           medicalCard: 'D053252131',\n           department: '内科', // Example\n           visitDate: '2024-05-12',\n           allergyHistory: '青霉素、头孢、先锋类'\n        };\n        // --- End Simulation ---\n      },\n       loadInitialOrders() {\n           console.log(`Loading ${this.orderType} orders for patient: ${this.patientId}, edit ID: ${this.editOrderId}`);\n           // TODO: Replace with API call based on patientId, orderType, and potentially editOrderId\n           // Simulate loading data based on type\n           if (this.orderType === 'temp') {\n               this.orderList = [\n                   { id: 'temp1', group: '', startTime: '2024-12-17 10:00:00', content: '体温监测', frequency: 'q4h' },\n               ];\n           } else { // longTerm\n               this.orderList = [\n                   { id: 'long1', group: '1', startTime: '2024-12-16 12:55:00', content: '按内科常规护理', specification: '', dosage: '', dosageUnit: '', usage: '', frequency: '', adminTime: '', remarks: '', stopTime: null},\n                   { id: 'long2', group: '2', startTime: '2024-12-16 12:55:00', content: '(维他凯尔)维生素C', specification: '10ml*5支/盒', dosage: '适量', dosageUnit: '', usage: '', frequency: '', adminTime: '', remarks: '', stopTime: null},\n                   // ... more long term orders\n               ];\n           }\n           // If editing, potentially pre-select or highlight the order\n           if (this.editOrderId) {\n               console.log(`Need to handle editing for order ID: ${this.editOrderId}`);\n               // Find the order in this.orderList and maybe open an edit state for it\n           }\n       },\n      removeDiagnosis(tag) {\n        console.log(\"Removing diagnosis:\", tag);\n        // Logic to remove diagnosis tag\n      },\n      addDiagnosis() {\n        console.log(\"Adding diagnosis:\", this.diagnosisInput);\n        // Logic to add diagnosis tag\n        this.diagnosisInput = '';\n      },\n      submitOrders() {\n         console.log(`Submitting ${this.orderType} orders:`, this.orderList);\n         this.$message.success('医嘱已发送（模拟）');\n      },\n      addOrderItem(type) {\n         console.log(\"Request to add order item of type:\", type);\n         this.selectedDialogItems = []; // Clear previous selection\n         switch (type) {\n           case 'drug':\n              this.drugPagination.currentPage = 1; // Reset pagination\n              this.filterAvailableDrugs(); // Apply initial filter\n              this.showDrugDialog = true;\n              break;\n           case 'treatment':\n              this.treatmentPagination.currentPage = 1;\n              this.filterAvailableTreatments();\n              this.showTreatmentDialog = true;\n              break;\n           case 'care':\n              if (this.orderType === 'longTerm') {\n                 this.carePagination.currentPage = 1;\n                 this.filterAvailableCareItems();\n                 this.showCareDialog = true;\n              } else {\n                  console.warn(\"Cannot add care item for temporary orders.\");\n              }\n              break;\n           default:\n              this.addEmptyOrderRow(); \n         }\n      },\n       addEmptyOrderRow() {\n           const newId = `new_${Date.now()}`;\n           const newOrder = {\n                id: newId,\n                group: '',\n                startTime: '',\n                content: '',\n                specification: '',\n                dosage: '',\n                dosageUnit: '',\n                usage: '',\n                frequency: '',\n                adminTime: '',\n                remarks: ''\n            };\n            // Add type-specific fields\n            if (this.orderType === 'temp') {\n                newOrder.days = '';\n                newOrder.total = '';\n            } else {\n                newOrder.stopTime = null;\n            }\n            this.orderList.push(newOrder);\n        },\n       handleOrderSelectionChange(selection) {\n          this.selectedOrderIds = selection.map(item => item.id);\n          console.log(\"Selected order IDs:\", this.selectedOrderIds);\n       },\n      groupSelected() {\n          console.log(\"Grouping selected orders:\", this.selectedOrderIds);\n          if (this.selectedOrderIds.length < 2) {\n              this.$message.warning('请至少选择两个医嘱进行同组');\n              return;\n          }\n          // TODO: Implement grouping logic (assign same group number, check rules)\n          this.$message.info('同组功能待实现');\n      },\n      ungroupSelected() {\n          console.log(\"Ungrouping selected orders:\", this.selectedOrderIds);\n           if (this.selectedOrderIds.length === 0) {\n              this.$message.warning('请选择要拆组的医嘱');\n              return;\n          }\n          // TODO: Implement ungrouping logic (clear group number)\n           this.$message.info('拆组功能待实现');\n      },\n      deleteSelected() {\n          console.log(\"Deleting selected orders:\", this.selectedOrderIds);\n          if (this.selectedOrderIds.length === 0) {\n              this.$message.warning('请选择要删除的医嘱');\n              return;\n          }\n          this.orderList = this.orderList.filter(order => !this.selectedOrderIds.includes(order.id));\n          this.$message.success('选中的医嘱已删除（模拟）');\n          this.selectedOrderIds = [];\n      },\n\n      // --- EMR Methods ---\n      loadAvailableEmrTemplates() {\n          console.log(\"Loading EMR templates...\");\n          // Simulate API call\n          this.availableEmrTemplates = [\n              { id: 'tpl1', name: '上呼吸道感染', data: { chiefComplaint: '发热、咳嗽、流涕3天', historyPresentIllness: '3天前无明显诱因出现上述症状，伴咽痛，无寒战... ', pastMedicalHistory: '否认高血压、糖尿病史', clinicalDiagnosis: '急性上呼吸道感染' } },\n              { id: 'tpl2', name: '高血压、冠心病', data: { chiefComplaint: '头晕、胸闷1周', historyPresentIllness: '患者1周前劳累后出现头晕，伴胸闷、心悸，休息后稍缓解...', pastMedicalHistory: '高血压病史10年，冠心病史5年', clinicalDiagnosis: '高血压病3级（极高危）；冠心病' } },\n              { id: 'tpl3', name: '老年痴呆', data: { chiefComplaint: '记忆力下降半年', historyPresentIllness: '半年前开始出现记忆力减退，近期加重，日常生活能力下降...', pastMedicalHistory: '否认特殊病史', clinicalDiagnosis: '阿尔茨海默病' } },\n              { id: 'tpl4', name: '美尼尔综合征', data: { chiefComplaint: '反复眩晕、耳鸣2年', historyPresentIllness: '患者2年来反复出现发作性眩晕，伴恶心、呕吐及右耳耳鸣、听力下降...', pastMedicalHistory: '', clinicalDiagnosis: '美尼尔综合征' } },\n              { id: 'tpl5', name: '精力旺盛', data: { chiefComplaint: '最近爱讲笑话', historyPresentIllness: '王大爷年纪大了，爱说笑话；拉着小王叨叨絮絮3天都没睡觉了。', pastMedicalHistory: '无', clinicalDiagnosis: '精力旺盛' } },\n          ];\n          this.filterEmrTemplates(); // Initial filter\n      },\n      filterEmrTemplates() {\n          const keyword = this.templateSearchKeyword.trim().toLowerCase();\n          if (!keyword) {\n              this.filteredEmrTemplates = [...this.availableEmrTemplates];\n          } else {\n              this.filteredEmrTemplates = this.availableEmrTemplates.filter(\n                  template => template.name.toLowerCase().includes(keyword)\n              );\n          }\n      },\n      applyEmrTemplate(template) {\n          console.log(\"Applying EMR template:\", template.name);\n          if (template && template.data) {\n              // Overwrite relevant fields in emrData\n              // Use Object.assign or loop for safer merging if needed\n              this.emrData.chiefComplaint = template.data.chiefComplaint || this.emrData.chiefComplaint;\n              this.emrData.historyPresentIllness = template.data.historyPresentIllness || this.emrData.historyPresentIllness;\n              this.emrData.pastMedicalHistory = template.data.pastMedicalHistory || this.emrData.pastMedicalHistory;\n              this.emrData.physicalExamNotes = template.data.physicalExamNotes || this.emrData.physicalExamNotes;\n              this.emrData.auxiliaryExam = template.data.auxiliaryExam || this.emrData.auxiliaryExam;\n              this.emrData.treatmentPlan = template.data.treatmentPlan || this.emrData.treatmentPlan;\n              \n              // Handle clinical diagnosis separately (add as tag)\n              const templateDiagnosis = template.data.clinicalDiagnosis;\n              if (templateDiagnosis && !this.emrDiagnoses.includes(templateDiagnosis)) {\n                  this.emrDiagnoses.push(templateDiagnosis);\n              } // Maybe clear existing diagnosis input: this.emrData.clinicalDiagnosis = '';\n\n               this.$message.success(`已应用模板: ${template.name}`);\n          } else {\n              this.$message.error('无法应用所选模板');\n          }\n          this.showTemplatePopover = false; // Close popover after applying\n      },\n      saveAsEmrTemplate() {\n          console.log(\"Saving as EMR template:\", this.emrData);\n          this.$message.info(\"另存为模板功能待实现\");\n          // TODO: Implement save as template logic\n      },\n      saveEmrData() {\n          console.log(\"Saving EMR data:\", this.emrData, \"Diagnoses:\", this.emrDiagnoses);\n           this.$message.success('电子病历已保存（模拟）');\n          // TODO: Implement API call to save EMR data\n      },\n       addEmrDiagnosis() {\n           const newDiagnosis = this.emrData.clinicalDiagnosis.trim();\n           if (newDiagnosis && !this.emrDiagnoses.includes(newDiagnosis)) {\n               this.emrDiagnoses.push(newDiagnosis);\n           }\n           this.emrData.clinicalDiagnosis = ''; // Clear input after adding\n       },\n       removeEmrDiagnosis(tag) {\n           this.emrDiagnoses.splice(this.emrDiagnoses.indexOf(tag), 1);\n       },\n       loadAvailableItems() {\n         // Simulate loading all available items for selection dialogs\n         console.log(\"Loading available items for dialogs...\");\n         this.availableDrugs = [\n            { id: 'd1', name: '阿司匹林肠溶片', spec: '100mg*30片/盒', unit: '盒', price: 15.50, stock: 500, manufacturer: '拜耳医药', type: 'western' },\n            { id: 'd2', name: '布洛芬缓释胶囊', spec: '0.3g*10粒/盒', unit: '盒', price: 28.00, stock: 150, manufacturer: '西南药业', type: 'western' },\n            { id: 'd3', name: '头孢克肟胶囊', spec: '0.1g*6粒/盒', unit: '盒', price: 45.80, stock: 80, manufacturer: '哈药集团', type: 'western' },\n            { id: 'd4', name: '感冒清热颗粒', spec: '10g*10袋/盒', unit: '盒', price: 22.00, stock: 300, manufacturer: '同仁堂', type: 'chinese' },\n            { id: 'd5', name: '维生素C片', spec: '100mg*100片/瓶', unit: '瓶', price: 9.90, stock: 1000, manufacturer: '国药集团', type: 'western' },\n         ];\n          this.availableTreatments = [\n             { id: 't1', name: '血常规', type: '化验', unit: '次', price: 25.00 },\n             { id: 't2', name: '尿常规', type: '化验', unit: '次', price: 15.00 },\n             { id: 't3', name: '肝功能全套', type: '化验', unit: '次', price: 80.00 },\n             { id: 't4', name: '胸部X光片', type: '检查', unit: '次', price: 120.00 },\n             { id: 't5', name: '心电图', type: '检查', unit: '次', price: 50.00 },\n             { id: 't6', name: '24小时尿蛋白定量', type: '化验', unit: '次', price: 38.00 },\n             { id: 't7', name: '腹部B超', type: '检查', unit: '次', price: 100.00 },\n          ];\n           this.availableCareItems = [\n              { id: 'c1', name: '按内科常规护理', type: '护理常规' },\n              { id: 'c2', name: '一级护理', type: '护理常规' },\n              { id: 'c3', name: '二级护理', type: '护理常规' },\n              { id: 'c4', name: '半流质饮食', type: '饮食' },\n              { id: 'c5', name: '糖尿病饮食', type: '饮食' },\n              { id: 'c6', name: '测量血压 qid', type: '生命体征' },\n              { id: 'c7', name: '血糖监测 tid', type: '生命体征' },\n           ];\n\n           // Initialize filtered lists\n           this.filterAvailableDrugs();\n           this.filterAvailableTreatments();\n           this.filterAvailableCareItems();\n       },\n\n      // --- Dialog Specific Methods ---\n      handleDialogSelectionChange(selection) {\n          // Check selection limit (example for drugs)\n          if (this.showDrugDialog && selection.length > 5) {\n              this.$message.warning('一次最多只能选择5种药物');\n              // Find the last selected item and deselect it\n              // This requires knowing which item was just added to the selection,\n              // which element-ui's selection-change doesn't directly provide.\n              // A more robust approach might involve watching the selection or using the `select` event.\n              // Simple rollback (may not be perfect UX):\n               this.$nextTick(() => { \n                   const tableRef = this.$refs.drugSelectTable;\n                   if (tableRef) { \n                       // Find items selected now that weren't selected before (tricky)\n                       // Or just deselect the last one if selection length exceeds limit\n                       const lastItem = selection[selection.length -1];\n                       if (lastItem) tableRef.toggleRowSelection(lastItem, false);\n                   }\n               });\n              return; // Prevent updating selectedDialogItems beyond limit\n          }\n          this.selectedDialogItems = selection;\n          console.log(\"Dialog selection updated:\", this.selectedDialogItems);\n      },\n      handleDialogSubmit(itemType) {\n          console.log(`Submitting selected ${itemType}(s):`, this.selectedDialogItems);\n          if (!this.selectedDialogItems || this.selectedDialogItems.length === 0) {\n              this.$message.warning('请至少选择一个项目');\n              return;\n          }\n\n          // Format selected items and add to the main order list\n          this.selectedDialogItems.forEach(item => {\n              const newOrder = {\n                  id: `new_${Date.now()}_${Math.random().toString(16).slice(2)}`, // More unique ID\n                  group: '', // Or logic to determine group\n                  startTime: '', // Or default to now\n                  content: item.name, // Basic mapping\n                  specification: itemType === 'drug' ? item.spec : '',\n                  dosage: '', // User needs to fill these in the main table\n                  dosageUnit: itemType === 'drug' ? (item.unit ? item.unit.toLowerCase() : '') : '', // Attempt basic unit mapping\n                  usage: '',\n                  frequency: '',\n                  adminTime: '',\n                  remarks: ''\n                  // Add other relevant fields based on itemType if available\n              };\n              if (this.orderType === 'temp') {\n                  newOrder.days = '';\n                  newOrder.total = '';\n              } else {\n                  newOrder.stopTime = null;\n              }\n              this.orderList.push(newOrder); \n          });\n\n          // Close the corresponding dialog\n          if (itemType === 'drug') this.showDrugDialog = false;\n          if (itemType === 'treatment') this.showTreatmentDialog = false;\n          if (itemType === 'care') this.showCareDialog = false;\n\n          this.selectedDialogItems = []; // Clear selection\n      },\n\n      // --- Filtering Methods for Dialogs ---\n       filterAvailableDrugs() {\n           const keyword = this.drugSearch.keyword.toLowerCase();\n           const category = this.drugSearch.category;\n           this.filteredAvailableDrugs = this.availableDrugs.filter(drug => {\n               const matchKeyword = !keyword || \n                                   drug.name.toLowerCase().includes(keyword) || \n                                   (drug.id && drug.id.toLowerCase().includes(keyword)) || // Search by ID if available\n                                   (drug.manufacturer && drug.manufacturer.toLowerCase().includes(keyword));\n               const matchCategory = !category || drug.type === category;\n               return matchKeyword && matchCategory;\n           });\n            this.drugPagination.currentPage = 1; // Reset page on filter change\n       },\n       filterAvailableTreatments() {\n           const keyword = this.treatmentSearch.keyword.toLowerCase();\n           const category = this.treatmentSearch.category;\n           this.filteredAvailableTreatments = this.availableTreatments.filter(item => {\n               const matchKeyword = !keyword || item.name.toLowerCase().includes(keyword);\n               const matchCategory = !category || item.type.toLowerCase().includes(category.toLowerCase()); // Adjust category match if needed\n               return matchKeyword && matchCategory;\n           });\n           this.treatmentPagination.currentPage = 1;\n       },\n        filterAvailableCareItems() {\n           const keyword = this.careSearch.keyword.toLowerCase();\n           const category = this.careSearch.category;\n           this.filteredAvailableCareItems = this.availableCareItems.filter(item => {\n               const matchKeyword = !keyword || item.name.toLowerCase().includes(keyword);\n               const matchCategory = !category || item.type.toLowerCase().includes(category.toLowerCase());\n               return matchKeyword && matchCategory;\n           });\n           this.carePagination.currentPage = 1;\n       },\n\n      // --- Pagination Handlers for Dialogs ---\n      handleDrugPageSizeChange(val) { this.drugPagination.pageSize = val; this.drugPagination.currentPage = 1; },\n      handleDrugPageChange(val) { this.drugPagination.currentPage = val; },\n      handleTreatmentPageSizeChange(val) { this.treatmentPagination.pageSize = val; this.treatmentPagination.currentPage = 1; },\n      handleTreatmentPageChange(val) { this.treatmentPagination.currentPage = val; },\n      handleCarePageSizeChange(val) { this.carePagination.pageSize = val; this.carePagination.currentPage = 1; },\n      handleCarePageChange(val) { this.carePagination.currentPage = val; },\n    }\n  };\n  </script>\n  \n  <style lang=\"less\" scoped>\n  .medical-order-detail {\n    background-color: #f0f4f7;\n    padding: 20px;\n    border-radius: 8px;\n    min-height: calc(100vh - 40px);\n\n    .patient-info {\n      background-color: #fff;\n      border-radius: 8px;\n      padding: 20px;\n      box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n      margin-bottom: 20px;\n\n      .info-header {\n        display: flex;\n        align-items: center;\n        margin-bottom: 20px;\n        padding-bottom: 20px;\n        border-bottom: 1px solid #e8ecef;\n\n        .avatar {\n          width: 40px;\n          height: 40px;\n          background-color: #3a7d7c;\n          color: #fff;\n          border-radius: 50%;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          margin-right: 15px;\n          font-size: 18px;\n        }\n\n        .basic-info {\n          flex: 1;\n          font-size: 16px;\n          color: #3a4a49;\n        }\n\n        .nursing-info {\n          color: #5a6e6c;\n          font-size: 14px;\n\n          .nursing-level {\n            color: #3a7d7c;\n            font-weight: 500;\n          }\n        }\n      }\n\n      .info-content {\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n        gap: 20px;\n\n        .info-item {\n          .label {\n            color: #5a6e6c;\n            font-size: 14px;\n            margin-bottom: 4px;\n          }\n\n          .value {\n            color: #3a4a49;\n            font-size: 16px;\n          }\n        }\n      }\n    }\n\n    .order-tabs {\n      background-color: #fff;\n      border-radius: 8px;\n      padding: 20px;\n      box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n\n      .el-tabs__header {\n        margin-bottom: 20px;\n      }\n\n      .el-tabs__item {\n        color: #5a6e6c;\n        font-size: 14px;\n\n        &.is-active {\n          color: #3a7d7c;\n        }\n\n        &:hover {\n          color: #3a7d7c;\n        }\n      }\n\n      .el-tabs__active-bar {\n        background-color: #3a7d7c;\n      }\n    }\n\n    .emr-section {\n      background-color: #fff;\n      border-radius: 8px;\n      padding: 20px;\n      box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n      margin-top: 20px;\n\n      .section-title {\n        color: #3a4a49;\n        font-size: 16px;\n        font-weight: 500;\n        margin-bottom: 20px;\n        padding-bottom: 10px;\n        border-bottom: 1px solid #e8ecef;\n      }\n\n      .form-item {\n        margin-bottom: 20px;\n\n        .label {\n          color: #5a6e6c;\n          font-size: 14px;\n          margin-bottom: 8px;\n        }\n\n        .el-input__inner,\n        .el-textarea__inner {\n          border-color: #e8ecef;\n\n          &:focus {\n            border-color: #3a7d7c;\n          }\n        }\n      }\n    }\n\n    .action-bar {\n      margin-top: 20px;\n      text-align: right;\n\n      .el-button {\n        margin-left: 10px;\n\n        &--primary {\n          background-color: #3a7d7c;\n          border-color: #3a7d7c;\n\n          &:hover {\n            background-color: #4a8d8c;\n            border-color: #4a8d8c;\n          }\n        }\n      }\n    }\n  }\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}