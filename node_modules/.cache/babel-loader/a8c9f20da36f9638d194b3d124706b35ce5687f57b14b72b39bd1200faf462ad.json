{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { Message } from 'element-ui';\nimport router from '@/router';\n\n// 创建 axios 实例\nconst service = axios.create({\n  baseURL: process.env.VUE_APP_BASE_API || '/api',\n  // api 的 base_url\n  timeout: 5000 // 请求超时时间\n});\n\n// 请求拦截器\nservice.interceptors.request.use(config => {\n  // 在发送请求之前做些什么\n  const token = window.sessionStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = 'Bearer ' + token;\n  }\n  return config;\n}, error => {\n  // 对请求错误做些什么\n  console.log(error);\n  return Promise.reject(error);\n});\n\n// 响应拦截器\nservice.interceptors.response.use(response => {\n  const res = response.data;\n  // 如果返回的状态码不是200，说明接口有问题，把错误信息显示出来\n  if (res.code !== 200) {\n    Message({\n      message: res.message || '错误',\n      type: 'error',\n      duration: 5 * 1000\n    });\n\n    // 401: 未登录或token过期\n    if (res.code === 401) {\n      // 清除token\n      window.sessionStorage.removeItem('token');\n      router.push('/login');\n    }\n    return Promise.reject(new Error(res.message || '错误'));\n  } else {\n    return res;\n  }\n}, error => {\n  console.log('err' + error);\n  Message({\n    message: error.message,\n    type: 'error',\n    duration: 5 * 1000\n  });\n  return Promise.reject(error);\n});\nexport default service;","map":{"version":3,"names":["axios","Message","router","service","create","baseURL","process","env","VUE_APP_BASE_API","timeout","interceptors","request","use","config","token","window","sessionStorage","getItem","headers","error","console","log","Promise","reject","response","res","data","code","message","type","duration","removeItem","push","Error"],"sources":["/Users/seaocean/projects/test/hospital/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\nimport { Message } from 'element-ui'\nimport router from '@/router'\n\n// 创建 axios 实例\nconst service = axios.create({\n    baseURL: process.env.VUE_APP_BASE_API || '/api', // api 的 base_url\n    timeout: 5000 // 请求超时时间\n})\n\n// 请求拦截器\nservice.interceptors.request.use(\n    config => {\n        // 在发送请求之前做些什么\n        const token = window.sessionStorage.getItem('token')\n        if (token) {\n            config.headers['Authorization'] = 'Bearer ' + token\n        }\n        return config\n    },\n    error => {\n        // 对请求错误做些什么\n        console.log(error)\n        return Promise.reject(error)\n    }\n)\n\n// 响应拦截器\nservice.interceptors.response.use(\n    response => {\n        const res = response.data\n        // 如果返回的状态码不是200，说明接口有问题，把错误信息显示出来\n        if (res.code !== 200) {\n            Message({\n                message: res.message || '错误',\n                type: 'error',\n                duration: 5 * 1000\n            })\n\n            // 401: 未登录或token过期\n            if (res.code === 401) {\n                // 清除token\n                window.sessionStorage.removeItem('token')\n                router.push('/login')\n            }\n            return Promise.reject(new Error(res.message || '错误'))\n        } else {\n            return res\n        }\n    },\n    error => {\n        console.log('err' + error)\n        Message({\n            message: error.message,\n            type: 'error',\n            duration: 5 * 1000\n        })\n        return Promise.reject(error)\n    }\n)\n\nexport default service "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,YAAY;AACpC,OAAOC,MAAM,MAAM,UAAU;;AAE7B;AACA,MAAMC,OAAO,GAAGH,KAAK,CAACI,MAAM,CAAC;EACzBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,gBAAgB,IAAI,MAAM;EAAE;EACjDC,OAAO,EAAE,IAAI,CAAC;AAClB,CAAC,CAAC;;AAEF;AACAN,OAAO,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CAC5BC,MAAM,IAAI;EACN;EACA,MAAMC,KAAK,GAAGC,MAAM,CAACC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;EACpD,IAAIH,KAAK,EAAE;IACPD,MAAM,CAACK,OAAO,CAAC,eAAe,CAAC,GAAG,SAAS,GAAGJ,KAAK;EACvD;EACA,OAAOD,MAAM;AACjB,CAAC,EACDM,KAAK,IAAI;EACL;EACAC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClB,OAAOG,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AAChC,CACJ,CAAC;;AAED;AACAhB,OAAO,CAACO,YAAY,CAACc,QAAQ,CAACZ,GAAG,CAC7BY,QAAQ,IAAI;EACR,MAAMC,GAAG,GAAGD,QAAQ,CAACE,IAAI;EACzB;EACA,IAAID,GAAG,CAACE,IAAI,KAAK,GAAG,EAAE;IAClB1B,OAAO,CAAC;MACJ2B,OAAO,EAAEH,GAAG,CAACG,OAAO,IAAI,IAAI;MAC5BC,IAAI,EAAE,OAAO;MACbC,QAAQ,EAAE,CAAC,GAAG;IAClB,CAAC,CAAC;;IAEF;IACA,IAAIL,GAAG,CAACE,IAAI,KAAK,GAAG,EAAE;MAClB;MACAZ,MAAM,CAACC,cAAc,CAACe,UAAU,CAAC,OAAO,CAAC;MACzC7B,MAAM,CAAC8B,IAAI,CAAC,QAAQ,CAAC;IACzB;IACA,OAAOV,OAAO,CAACC,MAAM,CAAC,IAAIU,KAAK,CAACR,GAAG,CAACG,OAAO,IAAI,IAAI,CAAC,CAAC;EACzD,CAAC,MAAM;IACH,OAAOH,GAAG;EACd;AACJ,CAAC,EACDN,KAAK,IAAI;EACLC,OAAO,CAACC,GAAG,CAAC,KAAK,GAAGF,KAAK,CAAC;EAC1BlB,OAAO,CAAC;IACJ2B,OAAO,EAAET,KAAK,CAACS,OAAO;IACtBC,IAAI,EAAE,OAAO;IACbC,QAAQ,EAAE,CAAC,GAAG;EAClB,CAAC,CAAC;EACF,OAAOR,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAehB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}