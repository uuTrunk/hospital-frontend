{"ast":null,"code":"import axios from 'axios';\nimport config from '../config';\nimport { Message } from 'element-ui';\n\n// 创建axios实例\nconst service = axios.create({\n  baseURL: config.baseURL,\n  timeout: config.timeout,\n  withCredentials: true,\n  headers: config.headers\n});\n\n// 请求拦截器\nservice.interceptors.request.use(config => {\n  // 在这里可以添加token等认证信息\n  console.log('发送请求:', config.url, config.params); // 添加请求日志\n  return config;\n}, error => {\n  console.error('请求错误:', error);\n  return Promise.reject(error);\n});\n\n// 响应拦截器\nservice.interceptors.response.use(response => {\n  const res = response.data;\n  // 如果返回的状态码不是200，说明接口有问题，把错误信息显示出来\n  if (res.code !== 200) {\n    Message({\n      message: res.message || '请求失败',\n      type: 'error',\n      duration: 5 * 1000\n    });\n    return Promise.reject(new Error(res.message || '请求失败'));\n  } else {\n    return res;\n  }\n}, error => {\n  console.error('响应错误:', error);\n  if (error.response) {\n    switch (error.response.status) {\n      case 401:\n        // 未认证，跳转到登录页\n        window.location.href = '/login';\n        break;\n      case 403:\n        // 权限不足\n        console.error('权限不足');\n        break;\n      default:\n        console.error('请求失败:', error.response.data);\n    }\n  }\n  return Promise.reject(error);\n});\nexport default service;","map":{"version":3,"names":["axios","config","Message","service","create","baseURL","timeout","withCredentials","headers","interceptors","request","use","console","log","url","params","error","Promise","reject","response","res","data","code","message","type","duration","Error","status","window","location","href"],"sources":["/Users/seaocean/projects/test3/hospital/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\nimport config from '../config'\nimport { Message } from 'element-ui'\n\n// 创建axios实例\nconst service = axios.create({\n    baseURL: config.baseURL,\n    timeout: config.timeout,\n    withCredentials: true,\n    headers: config.headers\n})\n\n// 请求拦截器\nservice.interceptors.request.use(\n    config => {\n        // 在这里可以添加token等认证信息\n        console.log('发送请求:', config.url, config.params);  // 添加请求日志\n        return config\n    },\n    error => {\n        console.error('请求错误:', error)\n        return Promise.reject(error)\n    }\n)\n\n// 响应拦截器\nservice.interceptors.response.use(\n    response => {\n        const res = response.data\n        // 如果返回的状态码不是200，说明接口有问题，把错误信息显示出来\n        if (res.code !== 200) {\n            Message({\n                message: res.message || '请求失败',\n                type: 'error',\n                duration: 5 * 1000\n            })\n            return Promise.reject(new Error(res.message || '请求失败'))\n        } else {\n            return res\n        }\n    },\n    error => {\n        console.error('响应错误:', error)\n        if (error.response) {\n            switch (error.response.status) {\n                case 401:\n                    // 未认证，跳转到登录页\n                    window.location.href = '/login'\n                    break\n                case 403:\n                    // 权限不足\n                    console.error('权限不足')\n                    break\n                default:\n                    console.error('请求失败:', error.response.data)\n            }\n        }\n        return Promise.reject(error)\n    }\n)\n\nexport default service "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,WAAW;AAC9B,SAASC,OAAO,QAAQ,YAAY;;AAEpC;AACA,MAAMC,OAAO,GAAGH,KAAK,CAACI,MAAM,CAAC;EACzBC,OAAO,EAAEJ,MAAM,CAACI,OAAO;EACvBC,OAAO,EAAEL,MAAM,CAACK,OAAO;EACvBC,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAEP,MAAM,CAACO;AACpB,CAAC,CAAC;;AAEF;AACAL,OAAO,CAACM,YAAY,CAACC,OAAO,CAACC,GAAG,CAC5BV,MAAM,IAAI;EACN;EACAW,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEZ,MAAM,CAACa,GAAG,EAAEb,MAAM,CAACc,MAAM,CAAC,CAAC,CAAE;EAClD,OAAOd,MAAM;AACjB,CAAC,EACDe,KAAK,IAAI;EACLJ,OAAO,CAACI,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;EAC7B,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;;AAED;AACAb,OAAO,CAACM,YAAY,CAACU,QAAQ,CAACR,GAAG,CAC7BQ,QAAQ,IAAI;EACR,MAAMC,GAAG,GAAGD,QAAQ,CAACE,IAAI;EACzB;EACA,IAAID,GAAG,CAACE,IAAI,KAAK,GAAG,EAAE;IAClBpB,OAAO,CAAC;MACJqB,OAAO,EAAEH,GAAG,CAACG,OAAO,IAAI,MAAM;MAC9BC,IAAI,EAAE,OAAO;MACbC,QAAQ,EAAE,CAAC,GAAG;IAClB,CAAC,CAAC;IACF,OAAOR,OAAO,CAACC,MAAM,CAAC,IAAIQ,KAAK,CAACN,GAAG,CAACG,OAAO,IAAI,MAAM,CAAC,CAAC;EAC3D,CAAC,MAAM;IACH,OAAOH,GAAG;EACd;AACJ,CAAC,EACDJ,KAAK,IAAI;EACLJ,OAAO,CAACI,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;EAC7B,IAAIA,KAAK,CAACG,QAAQ,EAAE;IAChB,QAAQH,KAAK,CAACG,QAAQ,CAACQ,MAAM;MACzB,KAAK,GAAG;QACJ;QACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;QAC/B;MACJ,KAAK,GAAG;QACJ;QACAlB,OAAO,CAACI,KAAK,CAAC,MAAM,CAAC;QACrB;MACJ;QACIJ,OAAO,CAACI,KAAK,CAAC,OAAO,EAAEA,KAAK,CAACG,QAAQ,CAACE,IAAI,CAAC;IACnD;EACJ;EACA,OAAOJ,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAeb,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}