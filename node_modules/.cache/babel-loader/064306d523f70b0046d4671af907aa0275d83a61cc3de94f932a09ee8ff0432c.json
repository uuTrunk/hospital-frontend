{"ast":null,"code":"import axios from 'axios';\nimport { Message } from 'element-ui';\n\n// 创建axios实例\nconst service = axios.create({\n  baseURL: 'http://localhost:8081',\n  timeout: 10000,\n  withCredentials: true // 允许携带cookie\n});\n\n// 请求拦截器\nservice.interceptors.request.use(config => {\n  // 在这里可以添加token等认证信息\n  return config;\n}, error => {\n  console.log(error);\n  return Promise.reject(error);\n});\n\n// 响应拦截器\nservice.interceptors.response.use(response => {\n  const res = response.data;\n  if (res.code !== 200) {\n    Message({\n      message: res.message || '错误',\n      type: 'error',\n      duration: 5 * 1000\n    });\n    return Promise.reject(new Error(res.message || '错误'));\n  } else {\n    return res;\n  }\n}, error => {\n  console.log('err' + error);\n  Message({\n    message: error.message,\n    type: 'error',\n    duration: 5 * 1000\n  });\n  return Promise.reject(error);\n});\nexport default service;","map":{"version":3,"names":["axios","Message","service","create","baseURL","timeout","withCredentials","interceptors","request","use","config","error","console","log","Promise","reject","response","res","data","code","message","type","duration","Error"],"sources":["/Users/seaocean/projects/test3/hospital/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\nimport { Message } from 'element-ui'\n\n// 创建axios实例\nconst service = axios.create({\n    baseURL: 'http://localhost:8081',\n    timeout: 10000,\n    withCredentials: true // 允许携带cookie\n})\n\n// 请求拦截器\nservice.interceptors.request.use(\n    config => {\n        // 在这里可以添加token等认证信息\n        return config\n    },\n    error => {\n        console.log(error)\n        return Promise.reject(error)\n    }\n)\n\n// 响应拦截器\nservice.interceptors.response.use(\n    response => {\n        const res = response.data\n        if (res.code !== 200) {\n            Message({\n                message: res.message || '错误',\n                type: 'error',\n                duration: 5 * 1000\n            })\n            return Promise.reject(new Error(res.message || '错误'))\n        } else {\n            return res\n        }\n    },\n    error => {\n        console.log('err' + error)\n        Message({\n            message: error.message,\n            type: 'error',\n            duration: 5 * 1000\n        })\n        return Promise.reject(error)\n    }\n)\n\nexport default service "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,YAAY;;AAEpC;AACA,MAAMC,OAAO,GAAGF,KAAK,CAACG,MAAM,CAAC;EACzBC,OAAO,EAAE,uBAAuB;EAChCC,OAAO,EAAE,KAAK;EACdC,eAAe,EAAE,IAAI,CAAC;AAC1B,CAAC,CAAC;;AAEF;AACAJ,OAAO,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAC5BC,MAAM,IAAI;EACN;EACA,OAAOA,MAAM;AACjB,CAAC,EACDC,KAAK,IAAI;EACLC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClB,OAAOG,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AAChC,CACJ,CAAC;;AAED;AACAT,OAAO,CAACK,YAAY,CAACS,QAAQ,CAACP,GAAG,CAC7BO,QAAQ,IAAI;EACR,MAAMC,GAAG,GAAGD,QAAQ,CAACE,IAAI;EACzB,IAAID,GAAG,CAACE,IAAI,KAAK,GAAG,EAAE;IAClBlB,OAAO,CAAC;MACJmB,OAAO,EAAEH,GAAG,CAACG,OAAO,IAAI,IAAI;MAC5BC,IAAI,EAAE,OAAO;MACbC,QAAQ,EAAE,CAAC,GAAG;IAClB,CAAC,CAAC;IACF,OAAOR,OAAO,CAACC,MAAM,CAAC,IAAIQ,KAAK,CAACN,GAAG,CAACG,OAAO,IAAI,IAAI,CAAC,CAAC;EACzD,CAAC,MAAM;IACH,OAAOH,GAAG;EACd;AACJ,CAAC,EACDN,KAAK,IAAI;EACLC,OAAO,CAACC,GAAG,CAAC,KAAK,GAAGF,KAAK,CAAC;EAC1BV,OAAO,CAAC;IACJmB,OAAO,EAAET,KAAK,CAACS,OAAO;IACtBC,IAAI,EAAE,OAAO;IACbC,QAAQ,EAAE,CAAC,GAAG;EAClB,CAAC,CAAC;EACF,OAAOR,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAeT,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}