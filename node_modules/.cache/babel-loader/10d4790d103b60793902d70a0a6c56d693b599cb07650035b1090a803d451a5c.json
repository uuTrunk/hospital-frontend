{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport router from '../router';\nimport { Message } from 'element-ui';\n\n// 创建axios实例\nconst service = axios.create({\n  baseURL: '/api',\n  timeout: 15000,\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json;charset=UTF-8'\n  }\n});\n\n// 请求拦截器\nservice.interceptors.request.use(config => {\n  // 在这里可以添加token等认证信息\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  console.error('请求错误:', error);\n  return Promise.reject(error);\n});\n\n// 响应拦截器\nservice.interceptors.response.use(response => {\n  const res = response.data;\n  // 如果是二进制数据，直接返回\n  if (response.config.responseType === 'blob') {\n    return res;\n  }\n  return res;\n}, error => {\n  console.error('响应错误:', error);\n  if (error.response) {\n    switch (error.response.status) {\n      case 401:\n        Message.error('未登录或登录已过期，请重新登录');\n        // 清除token\n        localStorage.removeItem('token');\n        // 跳转到登录页\n        router.push('/login');\n        break;\n      case 403:\n        Message.error('没有权限访问该资源');\n        break;\n      case 404:\n        Message.error('请求的资源不存在');\n        break;\n      case 500:\n        Message.error('服务器错误，请稍后重试');\n        break;\n      default:\n        Message.error(error.response.data.message || '未知错误');\n    }\n  } else if (error.code === 'ECONNABORTED') {\n    Message.error('请求超时，请检查网络连接');\n  } else {\n    Message.error('网络错误，请检查网络连接');\n  }\n  return Promise.reject(error);\n});\nexport default service;","map":{"version":3,"names":["axios","router","Message","service","create","baseURL","timeout","withCredentials","headers","interceptors","request","use","config","token","localStorage","getItem","error","console","Promise","reject","response","res","data","responseType","status","removeItem","push","message","code"],"sources":["/Users/seaocean/projects/test3/hospital/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\nimport router from '../router'\nimport { Message } from 'element-ui'\n\n// 创建axios实例\nconst service = axios.create({\n    baseURL: '/api',\n    timeout: 15000,\n    withCredentials: true,\n    headers: {\n        'Content-Type': 'application/json;charset=UTF-8'\n    }\n})\n\n// 请求拦截器\nservice.interceptors.request.use(\n    config => {\n        // 在这里可以添加token等认证信息\n        const token = localStorage.getItem('token')\n        if (token) {\n            config.headers['Authorization'] = `Bearer ${token}`\n        }\n        return config\n    },\n    error => {\n        console.error('请求错误:', error)\n        return Promise.reject(error)\n    }\n)\n\n// 响应拦截器\nservice.interceptors.response.use(\n    response => {\n        const res = response.data\n        // 如果是二进制数据，直接返回\n        if (response.config.responseType === 'blob') {\n            return res\n        }\n        return res\n    },\n    error => {\n        console.error('响应错误:', error)\n        if (error.response) {\n            switch (error.response.status) {\n                case 401:\n                    Message.error('未登录或登录已过期，请重新登录')\n                    // 清除token\n                    localStorage.removeItem('token')\n                    // 跳转到登录页\n                    router.push('/login')\n                    break\n                case 403:\n                    Message.error('没有权限访问该资源')\n                    break\n                case 404:\n                    Message.error('请求的资源不存在')\n                    break\n                case 500:\n                    Message.error('服务器错误，请稍后重试')\n                    break\n                default:\n                    Message.error(error.response.data.message || '未知错误')\n            }\n        } else if (error.code === 'ECONNABORTED') {\n            Message.error('请求超时，请检查网络连接')\n        } else {\n            Message.error('网络错误，请检查网络连接')\n        }\n        return Promise.reject(error)\n    }\n)\n\nexport default service "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,WAAW;AAC9B,SAASC,OAAO,QAAQ,YAAY;;AAEpC;AACA,MAAMC,OAAO,GAAGH,KAAK,CAACI,MAAM,CAAC;EACzBC,OAAO,EAAE,MAAM;EACfC,OAAO,EAAE,KAAK;EACdC,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACAL,OAAO,CAACM,YAAY,CAACC,OAAO,CAACC,GAAG,CAC5BC,MAAM,IAAI;EACN;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUK,KAAK,EAAE;EACvD;EACA,OAAOD,MAAM;AACjB,CAAC,EACDI,KAAK,IAAI;EACLC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;EAC7B,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAChC,CACJ,CAAC;;AAED;AACAb,OAAO,CAACM,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC7BS,QAAQ,IAAI;EACR,MAAMC,GAAG,GAAGD,QAAQ,CAACE,IAAI;EACzB;EACA,IAAIF,QAAQ,CAACR,MAAM,CAACW,YAAY,KAAK,MAAM,EAAE;IACzC,OAAOF,GAAG;EACd;EACA,OAAOA,GAAG;AACd,CAAC,EACDL,KAAK,IAAI;EACLC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;EAC7B,IAAIA,KAAK,CAACI,QAAQ,EAAE;IAChB,QAAQJ,KAAK,CAACI,QAAQ,CAACI,MAAM;MACzB,KAAK,GAAG;QACJtB,OAAO,CAACc,KAAK,CAAC,iBAAiB,CAAC;QAChC;QACAF,YAAY,CAACW,UAAU,CAAC,OAAO,CAAC;QAChC;QACAxB,MAAM,CAACyB,IAAI,CAAC,QAAQ,CAAC;QACrB;MACJ,KAAK,GAAG;QACJxB,OAAO,CAACc,KAAK,CAAC,WAAW,CAAC;QAC1B;MACJ,KAAK,GAAG;QACJd,OAAO,CAACc,KAAK,CAAC,UAAU,CAAC;QACzB;MACJ,KAAK,GAAG;QACJd,OAAO,CAACc,KAAK,CAAC,aAAa,CAAC;QAC5B;MACJ;QACId,OAAO,CAACc,KAAK,CAACA,KAAK,CAACI,QAAQ,CAACE,IAAI,CAACK,OAAO,IAAI,MAAM,CAAC;IAC5D;EACJ,CAAC,MAAM,IAAIX,KAAK,CAACY,IAAI,KAAK,cAAc,EAAE;IACtC1B,OAAO,CAACc,KAAK,CAAC,cAAc,CAAC;EACjC,CAAC,MAAM;IACHd,OAAO,CAACc,KAAK,CAAC,cAAc,CAAC;EACjC;EACA,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAeb,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}