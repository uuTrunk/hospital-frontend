{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport { mapState, mapGetters, mapActions } from 'vuex';\nimport SymptomDialog from '../components/SymptomDialog.vue';\nimport { ElMessage } from 'element-plus';\nexport default {\n  name: 'HealthAssessment',\n  components: {\n    SymptomDialog\n  },\n  props: {\n    id: {\n      type: [Number, String],\n      required: true\n    }\n  },\n  data() {\n    return {\n      activeTab: 'health',\n      dialogVisible: false,\n      dialogType: '',\n      dialogMode: '',\n      dialogInitialSelected: [],\n      currentIllnesses: [],\n      pastIllnesses: [],\n      diet: {\n        noSpicy: false,\n        liquidDiet: false,\n        semiLiquidDiet: false,\n        softDiet: false,\n        lowSalt: false,\n        lowSugar: false,\n        diabeticDiet: false,\n        renalDiet: false,\n        highSalt: false,\n        highSugar: false,\n        highFat: false,\n        seafood: false\n      },\n      uploadFiles: {\n        biochemical: [],\n        xray: [],\n        ultrasound: [],\n        ecg: [],\n        ct: [],\n        other: []\n      },\n      medicalForm: {\n        forbiddenMedicine: '',\n        conclusion: '',\n        admissionDecision: 'admit'\n      },\n      currentSearchKeyword: '',\n      showCurrentSuggestions: false,\n      currentFilteredSymptoms: [],\n      pastSearchKeyword: '',\n      showPastSuggestions: false,\n      pastFilteredSymptoms: [],\n      allSymptoms: [],\n      formRules: {\n        conclusion: [{\n          required: true,\n          message: '请输入体检报告结论',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: {\n    ...mapState({\n      patients: state => state.patients\n    }),\n    ...mapGetters('healthAssessment', ['isLoading', 'getError', 'getAssessmentDetails']),\n    patient() {\n      const patientId = parseInt(this.id);\n      return this.patients.find(p => p.id === patientId) || {\n        name: '',\n        gender: '',\n        age: '',\n        idNumber: '',\n        registrationTime: ''\n      };\n    },\n    isFormValid() {\n      return this.medicalForm.conclusion.trim() !== '';\n    }\n  },\n  methods: {\n    ...mapActions('healthAssessment', ['fetchHealthAssessmentDetail', 'submitHealthAssessment', 'uploadMedicalReport']),\n    async loadAssessmentDetails() {\n      try {\n        const response = await this.fetchHealthAssessmentDetail(this.id);\n        const details = response.data;\n        if (details.currentIllness) {\n          this.currentIllnesses = details.currentIllness.map(item => ({\n            id: item.id,\n            name: item.name\n          }));\n        }\n        if (details.dietRestrictions) {\n          this.diet = {\n            ...this.diet,\n            ...details.dietRestrictions.reduce((acc, item) => {\n              acc[this.mapDietRestrictionToKey(item.name)] = true;\n              return acc;\n            }, {})\n          };\n        }\n        if (details.forbiddenMedicines) {\n          this.medicalForm.forbiddenMedicine = details.forbiddenMedicines;\n        }\n        if (details.physicalConclusion) {\n          this.medicalForm.conclusion = details.physicalConclusion;\n        }\n        if (details.admissionAgreement === '同意入院') {\n          this.medicalForm.admissionDecision = 'admit';\n        } else {\n          this.medicalForm.admissionDecision = 'reject';\n        }\n\n        // 加载已上传的文件\n        if (details.files) {\n          Object.keys(details.files).forEach(type => {\n            this.uploadFiles[type] = details.files[type];\n          });\n        }\n      } catch (error) {\n        ElMessage.error('加载评估详情失败');\n        console.error('加载评估详情失败:', error);\n      }\n    },\n    mapDietRestrictionToKey(name) {\n      const map = {\n        '无辣椒': 'noSpicy',\n        '流质': 'liquidDiet',\n        '半流质': 'semiLiquidDiet',\n        '软食': 'softDiet',\n        '低盐': 'lowSalt',\n        '低糖': 'lowSugar',\n        '糖尿病饮食': 'diabeticDiet',\n        '肾食': 'renalDiet',\n        '高盐': 'highSalt',\n        '高糖': 'highSugar',\n        '高脂': 'highFat',\n        '海鲜': 'seafood'\n      };\n      return map[name] || name;\n    },\n    async saveAssessment() {\n      if (!this.isFormValid) {\n        ElMessage.warning('请填写必填项');\n        return;\n      }\n      try {\n        const now = new Date();\n        const timeStr = `${now.getFullYear()}-${String(now.getMonth() + 1).padStart(2, '0')}-${String(now.getDate()).padStart(2, '0')} ${String(now.getHours()).padStart(2, '0')}:${String(now.getMinutes()).padStart(2, '0')}`;\n\n        // 处理饮食禁忌\n        const dietRestrictions = Object.entries(this.diet).filter(([_, value]) => value).map(([key, _]) => ({\n          name: this.mapDietKeyToName(key)\n        }));\n\n        // 准备要保存的详情数据\n        const details = {\n          assessment_id: parseInt(this.id),\n          current_illness: this.currentIllnesses.map(item => ({\n            id: item.id,\n            name: item.name\n          })),\n          past_illness: this.pastIllnesses.map(item => ({\n            id: item.id,\n            name: item.name\n          })),\n          forbidden_medicines: this.medicalForm.forbiddenMedicine,\n          diet_restrictions: dietRestrictions,\n          physical_conclusion: this.medicalForm.conclusion,\n          admission_agreement: this.medicalForm.admissionDecision === 'admit' ? '同意入院' : '不同意入院',\n          files: this.processUploadFiles()\n        };\n        await this.submitHealthAssessment(details);\n        ElMessage.success('保存成功');\n        this.$router.push('/assessment');\n      } catch (error) {\n        ElMessage.error('保存失败');\n        console.error('保存评估失败:', error);\n      }\n    },\n    mapDietKeyToName(key) {\n      const map = {\n        noSpicy: '无辣椒',\n        liquidDiet: '流质',\n        semiLiquidDiet: '半流质',\n        softDiet: '软食',\n        lowSalt: '低盐',\n        lowSugar: '低糖',\n        diabeticDiet: '糖尿病饮食',\n        renalDiet: '肾食',\n        highSalt: '高盐',\n        highSugar: '高糖',\n        highFat: '高脂',\n        seafood: '海鲜'\n      };\n      return map[key] || key;\n    },\n    processUploadFiles() {\n      const processedFiles = {};\n      Object.keys(this.uploadFiles).forEach(type => {\n        if (this.uploadFiles[type] && this.uploadFiles[type].length) {\n          processedFiles[type] = this.uploadFiles[type].map(file => typeof file === 'string' ? file : file.url || file.name);\n        }\n      });\n      return processedFiles;\n    },\n    async handleFileUpload(event, type) {\n      const file = event.target.files[0];\n      if (!file) return;\n\n      // 验证文件类型和大小\n      const isImage = file.type.startsWith('image/');\n      const isValidSize = file.size <= 5 * 1024 * 1024; // 5MB\n\n      if (!isImage) {\n        ElMessage.warning('请上传图片文件');\n        return;\n      }\n      if (!isValidSize) {\n        ElMessage.warning('文件大小不能超过5MB');\n        return;\n      }\n      try {\n        const response = await this.uploadMedicalReport({\n          assessmentId: this.id,\n          reportType: type,\n          file\n        });\n        if (!this.uploadFiles[type]) {\n          this.uploadFiles[type] = [];\n        }\n        this.uploadFiles[type].push({\n          url: response.data.file_path,\n          name: file.name\n        });\n        ElMessage.success('上传成功');\n      } catch (error) {\n        ElMessage.error('上传失败');\n        console.error('上传文件失败:', error);\n      }\n    },\n    // 加载所有可选症状\n    loadAllSymptoms() {\n      // 常见疾病分类\n      const symptomsCategories = {\n        '心脏类': [{\n          id: 1,\n          name: '高血压'\n        }, {\n          id: 2,\n          name: '心脏病'\n        }, {\n          id: 3,\n          name: '心绞痛'\n        }, {\n          id: 4,\n          name: '冠心病'\n        }, {\n          id: 5,\n          name: '心律不齐'\n        }],\n        '神经类': [{\n          id: 6,\n          name: '头痛'\n        }, {\n          id: 7,\n          name: '偏头痛'\n        }, {\n          id: 8,\n          name: '癫痫'\n        }, {\n          id: 9,\n          name: '帕金森'\n        }, {\n          id: 10,\n          name: '失眠'\n        }],\n        '消化系统': [{\n          id: 11,\n          name: '胃病'\n        }, {\n          id: 12,\n          name: '胃炎'\n        }, {\n          id: 13,\n          name: '胃溃疡'\n        }, {\n          id: 14,\n          name: '肠炎'\n        }, {\n          id: 15,\n          name: '十二指肠溃疡'\n        }],\n        '呼吸系统': [{\n          id: 16,\n          name: '哮喘'\n        }, {\n          id: 17,\n          name: '支气管炎'\n        }, {\n          id: 18,\n          name: '肺炎'\n        }, {\n          id: 19,\n          name: '肺结核'\n        }, {\n          id: 20,\n          name: '肺气肿'\n        }],\n        '代谢类': [{\n          id: 21,\n          name: '糖尿病'\n        }, {\n          id: 22,\n          name: '高血脂'\n        }, {\n          id: 23,\n          name: '痛风'\n        }, {\n          id: 24,\n          name: '肥胖'\n        }, {\n          id: 25,\n          name: '甲状腺功能亢进'\n        }]\n      };\n\n      // 合并所有分类的疾病到一个数组\n      this.allSymptoms = Object.values(symptomsCategories).flat();\n    },\n    // 搜索症状\n    searchSymptoms(type) {\n      const keyword = type === 'current' ? this.currentSearchKeyword : this.pastSearchKeyword;\n      if (!keyword) {\n        if (type === 'current') {\n          this.currentFilteredSymptoms = [];\n        } else {\n          this.pastFilteredSymptoms = [];\n        }\n        return;\n      }\n\n      // 过滤已经添加的症状\n      const existingIds = type === 'current' ? this.currentIllnesses.map(s => s.id) : this.pastIllnesses.map(s => s.id);\n\n      // 过滤匹配关键词且未添加的症状\n      const filtered = this.allSymptoms.filter(symptom => symptom.name.toLowerCase().includes(keyword.toLowerCase()) && !existingIds.includes(symptom.id));\n      if (type === 'current') {\n        this.currentFilteredSymptoms = filtered;\n      } else {\n        this.pastFilteredSymptoms = filtered;\n      }\n    },\n    // 添加症状\n    addSymptom(type, symptom) {\n      if (type === 'current') {\n        if (!this.currentIllnesses.some(s => s.id === symptom.id)) {\n          this.currentIllnesses.push(symptom);\n          this.currentSearchKeyword = '';\n          this.currentFilteredSymptoms = [];\n        }\n      } else if (type === 'past') {\n        if (!this.pastIllnesses.some(s => s.id === symptom.id)) {\n          this.pastIllnesses.push(symptom);\n          this.pastSearchKeyword = '';\n          this.pastFilteredSymptoms = [];\n        }\n      }\n    },\n    // 移除症状\n    removeSymptom(type, id) {\n      if (type === 'current') {\n        this.currentIllnesses = this.currentIllnesses.filter(s => s.id !== id);\n      } else if (type === 'past') {\n        this.pastIllnesses = this.pastIllnesses.filter(s => s.id !== id);\n      }\n    },\n    // 延迟隐藏建议，以便能点击建议项\n    hideSuggestionsDelayed(type) {\n      setTimeout(() => {\n        if (type === 'current') {\n          this.showCurrentSuggestions = false;\n        } else {\n          this.showPastSuggestions = false;\n        }\n      }, 200);\n    },\n    // 处理文件上传\n    async handleFileUpload(event, type) {\n      const file = event.target.files[0];\n      if (!file) return;\n\n      // 验证文件类型和大小\n      const isImage = file.type.startsWith('image/');\n      const isValidSize = file.size <= 5 * 1024 * 1024; // 5MB\n\n      if (!isImage) {\n        ElMessage.warning('请上传图片文件');\n        return;\n      }\n      if (!isValidSize) {\n        ElMessage.warning('文件大小不能超过5MB');\n        return;\n      }\n      try {\n        const response = await this.uploadMedicalReport({\n          assessmentId: this.id,\n          reportType: type,\n          file\n        });\n        if (!this.uploadFiles[type]) {\n          this.uploadFiles[type] = [];\n        }\n        this.uploadFiles[type].push({\n          url: response.data.file_path,\n          name: file.name\n        });\n        ElMessage.success('上传成功');\n      } catch (error) {\n        ElMessage.error('上传失败');\n        console.error('上传文件失败:', error);\n      }\n    },\n    // 移除已上传的文件\n    removeFile(type, index) {\n      if (this.uploadFiles[type] && this.uploadFiles[type].length > index) {\n        this.uploadFiles[type].splice(index, 1);\n      }\n    },\n    showSymptomDialog(type) {\n      this.dialogVisible = true;\n      this.dialogMode = type;\n      if (type === 'current') {\n        this.dialogType = '现病史';\n        this.dialogInitialSelected = this.currentIllnesses.map(s => s.id);\n      } else if (type === 'past') {\n        this.dialogType = '既往病史';\n        this.dialogInitialSelected = this.pastIllnesses.map(s => s.id);\n      }\n    },\n    confirmSymptoms(selectedSymptoms) {\n      if (this.dialogMode === 'current') {\n        this.currentIllnesses = selectedSymptoms;\n      } else if (this.dialogMode === 'past') {\n        this.pastIllnesses = selectedSymptoms;\n      }\n      this.dialogVisible = false;\n    },\n    cancelDialog() {\n      this.dialogVisible = false;\n    },\n    async saveCareAssessment() {\n      try {\n        const now = new Date();\n        const timeStr = `${now.getFullYear()}-${String(now.getMonth() + 1).padStart(2, '0')}-${String(now.getDate()).padStart(2, '0')} ${String(now.getHours()).padStart(2, '0')}:${String(now.getMinutes()).padStart(2, '0')}`;\n\n        // 准备要保存的照护评估详情数据\n        const details = {\n          selfCare: {\n            ...this.careForm.selfCare\n          },\n          cognition: {\n            ...this.careForm.cognition\n          },\n          emotion: {\n            ...this.careForm.emotion\n          },\n          extreme: {\n            ...this.careForm.extreme\n          }\n        };\n\n        // 更新照护评估\n        await this.$store.dispatch('updateCareAssessment', {\n          patientId: parseInt(this.id),\n          status: 'completed',\n          time: timeStr,\n          operator: '李护士',\n          // 添加经办人信息\n          details: details\n        });\n\n        // 如果健康评估和照护评估都已完成，标记入院流程完成\n        if (this.patient.healthAssessment.status === 'completed' && (this.patient.careAssessment.status === 'completed' || details)) {\n          await this.$store.dispatch('finishAdmission', parseInt(this.id));\n        }\n\n        // 返回评估列表页面\n        this.$router.push('/assessment');\n      } catch (error) {\n        console.error('保存照护评估失败:', error);\n        // 这里可以添加错误提示\n      }\n    },\n    cancelAssessment() {\n      // 取消编辑，返回上一页\n      this.$router.push('/assessment');\n    },\n    setCareLevel(category, item, level) {\n      this.careForm[category][item] = level;\n    },\n    getProgressWidth(category, item) {\n      const level = this.careForm[category][item];\n      return `${(level + 1) * 25}%`;\n    }\n  },\n  created() {\n    this.loadAssessmentDetails();\n    this.loadAllSymptoms();\n  }\n};","map":{"version":3,"names":["mapState","mapGetters","mapActions","SymptomDialog","ElMessage","name","components","props","id","type","Number","String","required","data","activeTab","dialogVisible","dialogType","dialogMode","dialogInitialSelected","currentIllnesses","pastIllnesses","diet","noSpicy","liquidDiet","semiLiquidDiet","softDiet","lowSalt","lowSugar","diabeticDiet","renalDiet","highSalt","highSugar","highFat","seafood","uploadFiles","biochemical","xray","ultrasound","ecg","ct","other","medicalForm","forbiddenMedicine","conclusion","admissionDecision","currentSearchKeyword","showCurrentSuggestions","currentFilteredSymptoms","pastSearchKeyword","showPastSuggestions","pastFilteredSymptoms","allSymptoms","formRules","message","trigger","computed","patients","state","patient","patientId","parseInt","find","p","gender","age","idNumber","registrationTime","isFormValid","trim","methods","loadAssessmentDetails","response","fetchHealthAssessmentDetail","details","currentIllness","map","item","dietRestrictions","reduce","acc","mapDietRestrictionToKey","forbiddenMedicines","physicalConclusion","admissionAgreement","files","Object","keys","forEach","error","console","saveAssessment","warning","now","Date","timeStr","getFullYear","getMonth","padStart","getDate","getHours","getMinutes","entries","filter","_","value","key","mapDietKeyToName","assessment_id","current_illness","past_illness","forbidden_medicines","diet_restrictions","physical_conclusion","admission_agreement","processUploadFiles","submitHealthAssessment","success","$router","push","processedFiles","length","file","url","handleFileUpload","event","target","isImage","startsWith","isValidSize","size","uploadMedicalReport","assessmentId","reportType","file_path","loadAllSymptoms","symptomsCategories","values","flat","searchSymptoms","keyword","existingIds","s","filtered","symptom","toLowerCase","includes","addSymptom","some","removeSymptom","hideSuggestionsDelayed","setTimeout","removeFile","index","splice","showSymptomDialog","confirmSymptoms","selectedSymptoms","cancelDialog","saveCareAssessment","selfCare","careForm","cognition","emotion","extreme","$store","dispatch","status","time","operator","healthAssessment","careAssessment","cancelAssessment","setCareLevel","category","level","getProgressWidth","created"],"sources":["src/views/HealthAssessment.vue"],"sourcesContent":["<template>\n  <div class=\"assessment-detail-container\">\n    <!-- 患者信息卡片 -->\n    <div class=\"patient-info-card\">\n      <div class=\"card-header\">\n        <i class=\"card-icon\"></i>\n        <span>患者信息</span>\n      </div>\n      <div class=\"card-body\">\n        <div class=\"info-row\">\n          <div class=\"info-item\">\n            <span class=\"info-label\">姓名：</span>\n            <span class=\"info-value\">{{ patient.name }}</span>\n          </div>\n          <div class=\"info-item\">\n            <span class=\"info-label\">性别：</span>\n            <span class=\"info-value\">{{ patient.gender }}</span>\n          </div>\n          <div class=\"info-item\">\n            <span class=\"info-label\">年龄：</span>\n            <span class=\"info-value\">{{ patient.age }}</span>\n          </div>\n          <div class=\"info-item\">\n            <span class=\"info-label\">身份证号：</span>\n            <span class=\"info-value\">{{ patient.idNumber }}</span>\n          </div>\n        </div>\n        <div class=\"info-row\">\n          <div class=\"info-item\">\n            <span class=\"info-label\">登记时间：</span>\n            <span class=\"info-value\">{{ patient.registrationTime }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 评估选项卡 -->\n    <div class=\"assessment-tabs\">\n      <div \n        class=\"tab-item\" \n        :class=\"{ active: activeTab === 'health' }\"\n        @click=\"activeTab = 'health'\"\n      >\n        健康评估\n      </div>\n      <div \n        class=\"tab-item\" \n        :class=\"{ active: activeTab === 'care' }\"\n        @click=\"activeTab = 'care'\"\n      >\n        首次照护评估\n      </div>\n    </div>\n\n    <!-- 健康评估内容 -->\n    <div v-if=\"activeTab === 'health'\" class=\"assessment-content\">\n      <!-- 评估信息部分 -->\n      <div class=\"assessment-section\">\n        <h3 class=\"section-title\">评估信息</h3>\n        <div class=\"section-content\">\n          <div class=\"history-item\">\n            <span class=\"history-label\">现病史</span>\n            <div class=\"history-actions\">\n              <div class=\"symptom-tag\" v-for=\"symptom in currentIllnesses\" :key=\"symptom.id\">\n                {{ symptom.name }} <i class=\"icon-close\" @click=\"removeSymptom('current', symptom.id)\"></i>\n              </div>\n              <div class=\"search-wrapper\">\n                <input \n                  type=\"text\" \n                  class=\"search-symptom\" \n                  placeholder=\"请输入疾病名称\" \n                  v-model=\"currentSearchKeyword\"\n                  @input=\"searchSymptoms('current')\"\n                  @focus=\"showCurrentSuggestions = true\"\n                  @blur=\"hideSuggestionsDelayed('current')\"\n                />\n                <div class=\"suggestions\" v-show=\"showCurrentSuggestions && currentFilteredSymptoms.length > 0\">\n                  <div \n                    v-for=\"symptom in currentFilteredSymptoms\" \n                    :key=\"symptom.id\" \n                    class=\"suggestion-item\"\n                    @click=\"addSymptom('current', symptom)\"\n                    @mousedown.prevent\n                  >\n                    {{ symptom.name }}\n                  </div>\n                </div>\n              </div>\n              <span class=\"tip\">填写现有疾病名称</span>\n            </div>\n          </div>\n\n          <div class=\"history-item\">\n            <span class=\"history-label\">既往病史</span>\n            <div class=\"history-actions\">\n              <div class=\"symptom-tag\" v-for=\"symptom in pastIllnesses\" :key=\"symptom.id\">\n                {{ symptom.name }} <i class=\"icon-close\" @click=\"removeSymptom('past', symptom.id)\"></i>\n              </div>\n              <div class=\"search-wrapper\">\n                <input \n                  type=\"text\" \n                  class=\"search-symptom\" \n                  placeholder=\"请输入疾病名称\" \n                  v-model=\"pastSearchKeyword\"\n                  @input=\"searchSymptoms('past')\"\n                  @focus=\"showPastSuggestions = true\"\n                  @blur=\"hideSuggestionsDelayed('past')\"\n                />\n                <div class=\"suggestions\" v-show=\"showPastSuggestions && pastFilteredSymptoms.length > 0\">\n                  <div \n                    v-for=\"symptom in pastFilteredSymptoms\" \n                    :key=\"symptom.id\" \n                    class=\"suggestion-item\"\n                    @click=\"addSymptom('past', symptom)\"\n                    @mousedown.prevent\n                  >\n                    {{ symptom.name }}\n                  </div>\n                </div>\n              </div>\n              <span class=\"tip\">填写曾经患有的疾病名称</span>\n            </div>\n          </div>\n\n          <div class=\"history-item\">\n            <span class=\"history-label\">禁忌药品</span>\n            <textarea\n              v-model=\"medicalForm.forbiddenMedicine\"\n              placeholder=\"请输入禁忌药品\"\n              class=\"history-textarea\"\n            ></textarea>\n          </div>\n        </div>\n      </div>\n\n      <!-- 上传检查报告 -->\n      <div class=\"assessment-section\">\n        <h3 class=\"section-title\">上传检查报告</h3>\n        <div class=\"section-content\">\n          <div class=\"upload-tip\">\n            仅支持jpg、png格式，且不超过5M\n          </div>\n\n          <div class=\"upload-items\">\n            <div class=\"upload-item\">\n              <span class=\"upload-label\">生化检验</span>\n              <div class=\"upload-actions\">\n                <div class=\"upload-preview-list\" v-if=\"uploadFiles.biochemical && uploadFiles.biochemical.length\">\n                  <div class=\"upload-preview\" v-for=\"(file, index) in uploadFiles.biochemical\" :key=\"index\">\n                    <img :src=\"file.url || file\" alt=\"预览\" class=\"preview-img\" />\n                    <div class=\"preview-delete\" @click=\"removeFile('biochemical', index)\">×</div>\n                  </div>\n                  <div class=\"preview-count\" v-if=\"uploadFiles.biochemical.length > 0\">\n                    {{ uploadFiles.biochemical.length }}/5\n                  </div>\n                </div>\n                <label class=\"upload-btn\" v-if=\"uploadFiles.biochemical.length < 5\">\n                  <input \n                    type=\"file\" \n                    accept=\"image/jpeg,image/png\" \n                    @change=\"handleFileUpload($event, 'biochemical')\" \n                    style=\"display:none\" \n                  />\n                  <i class=\"icon-plus\"></i>\n                </label>\n              </div>\n            </div>\n\n            <div class=\"upload-item\">\n              <span class=\"upload-label\">X光</span>\n              <div class=\"upload-actions\">\n                <div class=\"upload-preview-list\" v-if=\"uploadFiles.xray && uploadFiles.xray.length\">\n                  <div class=\"upload-preview\" v-for=\"(file, index) in uploadFiles.xray\" :key=\"index\">\n                    <img :src=\"file.url || file\" alt=\"预览\" class=\"preview-img\" />\n                    <div class=\"preview-delete\" @click=\"removeFile('xray', index)\">×</div>\n                  </div>\n                  <div class=\"preview-count\" v-if=\"uploadFiles.xray.length > 0\">\n                    {{ uploadFiles.xray.length }}/5\n                  </div>\n                </div>\n                <label class=\"upload-btn\" v-if=\"uploadFiles.xray.length < 5\">\n                  <input \n                    type=\"file\" \n                    accept=\"image/jpeg,image/png\" \n                    @change=\"handleFileUpload($event, 'xray')\" \n                    style=\"display:none\" \n                  />\n                  <i class=\"icon-plus\"></i>\n                </label>\n              </div>\n            </div>\n\n            <div class=\"upload-item\">\n              <span class=\"upload-label\">超声检查</span>\n              <div class=\"upload-actions\">\n                <div class=\"upload-preview-list\" v-if=\"uploadFiles.ultrasound && uploadFiles.ultrasound.length\">\n                  <div class=\"upload-preview\" v-for=\"(file, index) in uploadFiles.ultrasound\" :key=\"index\">\n                    <img :src=\"file.url || file\" alt=\"预览\" class=\"preview-img\" />\n                    <div class=\"preview-delete\" @click=\"removeFile('ultrasound', index)\">×</div>\n                  </div>\n                  <div class=\"preview-count\" v-if=\"uploadFiles.ultrasound.length > 0\">\n                    {{ uploadFiles.ultrasound.length }}/5\n                  </div>\n                </div>\n                <label class=\"upload-btn\" v-if=\"uploadFiles.ultrasound.length < 5\">\n                  <input \n                    type=\"file\" \n                    accept=\"image/jpeg,image/png\" \n                    @change=\"handleFileUpload($event, 'ultrasound')\" \n                    style=\"display:none\" \n                  />\n                  <i class=\"icon-plus\"></i>\n                </label>\n              </div>\n            </div>\n\n            <div class=\"upload-item\">\n              <span class=\"upload-label\">心电图</span>\n              <div class=\"upload-actions\">\n                <div class=\"upload-preview-list\" v-if=\"uploadFiles.ecg && uploadFiles.ecg.length\">\n                  <div class=\"upload-preview\" v-for=\"(file, index) in uploadFiles.ecg\" :key=\"index\">\n                    <img :src=\"file.url || file\" alt=\"预览\" class=\"preview-img\" />\n                    <div class=\"preview-delete\" @click=\"removeFile('ecg', index)\">×</div>\n                  </div>\n                  <div class=\"preview-count\" v-if=\"uploadFiles.ecg.length > 0\">\n                    {{ uploadFiles.ecg.length }}/5\n                  </div>\n                </div>\n                <label class=\"upload-btn\" v-if=\"uploadFiles.ecg.length < 5\">\n                  <input \n                    type=\"file\" \n                    accept=\"image/jpeg,image/png\" \n                    @change=\"handleFileUpload($event, 'ecg')\" \n                    style=\"display:none\" \n                  />\n                  <i class=\"icon-plus\"></i>\n                </label>\n              </div>\n            </div>\n\n            <div class=\"upload-item\">\n              <span class=\"upload-label\">CT</span>\n              <div class=\"upload-actions\">\n                <div class=\"upload-preview-list\" v-if=\"uploadFiles.ct && uploadFiles.ct.length\">\n                  <div class=\"upload-preview\" v-for=\"(file, index) in uploadFiles.ct\" :key=\"index\">\n                    <img :src=\"file.url || file\" alt=\"预览\" class=\"preview-img\" />\n                    <div class=\"preview-delete\" @click=\"removeFile('ct', index)\">×</div>\n                  </div>\n                  <div class=\"preview-count\" v-if=\"uploadFiles.ct.length > 0\">\n                    {{ uploadFiles.ct.length }}/5\n                  </div>\n                </div>\n                <label class=\"upload-btn\" v-if=\"uploadFiles.ct.length < 5\">\n                  <input \n                    type=\"file\" \n                    accept=\"image/jpeg,image/png\" \n                    @change=\"handleFileUpload($event, 'ct')\" \n                    style=\"display:none\" \n                  />\n                  <i class=\"icon-plus\"></i>\n                </label>\n              </div>\n            </div>\n\n            <div class=\"upload-item\">\n              <span class=\"upload-label\">其他</span>\n              <div class=\"upload-actions\">\n                <div class=\"upload-preview-list\" v-if=\"uploadFiles.other && uploadFiles.other.length\">\n                  <div class=\"upload-preview\" v-for=\"(file, index) in uploadFiles.other\" :key=\"index\">\n                    <img :src=\"file.url || file\" alt=\"预览\" class=\"preview-img\" />\n                    <div class=\"preview-delete\" @click=\"removeFile('other', index)\">×</div>\n                  </div>\n                  <div class=\"preview-count\" v-if=\"uploadFiles.other.length > 0\">\n                    {{ uploadFiles.other.length }}/5\n                  </div>\n                </div>\n                <label class=\"upload-btn\" v-if=\"uploadFiles.other.length < 5\">\n                  <input \n                    type=\"file\" \n                    accept=\"image/jpeg,image/png\" \n                    @change=\"handleFileUpload($event, 'other')\" \n                    style=\"display:none\" \n                  />\n                  <i class=\"icon-plus\"></i>\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 饮食禁忌 -->\n      <div class=\"assessment-section\">\n        <h3 class=\"section-title\">饮食禁忌</h3>\n        <div class=\"section-content\">\n          <div class=\"diet-container\">\n            <div class=\"diet-row\">\n              <label class=\"diet-option\">\n                <input type=\"checkbox\" v-model=\"diet.noSpicy\">\n                <span>无辣椒</span>\n              </label>\n              \n              <label class=\"diet-option\">\n                <input type=\"checkbox\" v-model=\"diet.liquidDiet\">\n                <span>流质</span>\n              </label>\n              \n              <label class=\"diet-option\">\n                <input type=\"checkbox\" v-model=\"diet.semiLiquidDiet\">\n                <span>半流质</span>\n              </label>\n              \n              <label class=\"diet-option\">\n                <input type=\"checkbox\" v-model=\"diet.softDiet\">\n                <span>软食</span>\n              </label>\n            </div>\n\n            <div class=\"diet-row\">\n              <label class=\"diet-option\">\n                <input type=\"checkbox\" v-model=\"diet.lowSalt\">\n                <span>低盐</span>\n              </label>\n              \n              <label class=\"diet-option\">\n                <input type=\"checkbox\" v-model=\"diet.lowSugar\">\n                <span>低糖</span>\n              </label>\n              \n              <label class=\"diet-option\">\n                <input type=\"checkbox\" v-model=\"diet.diabeticDiet\">\n                <span>糖尿病饮食</span>\n              </label>\n              \n              <label class=\"diet-option\">\n                <input type=\"checkbox\" v-model=\"diet.renalDiet\">\n                <span>肾食</span>\n              </label>\n            </div>\n\n            <div class=\"diet-row\">\n              <label class=\"diet-option\">\n                <input type=\"checkbox\" v-model=\"diet.highSalt\">\n                <span>高盐</span>\n              </label>\n              \n              <label class=\"diet-option\">\n                <input type=\"checkbox\" v-model=\"diet.highSugar\">\n                <span>高糖</span>\n              </label>\n              \n              <label class=\"diet-option\">\n                <input type=\"checkbox\" v-model=\"diet.highFat\">\n                <span>高脂</span>\n              </label>\n              \n              <label class=\"diet-option\">\n                <input type=\"checkbox\" v-model=\"diet.seafood\">\n                <span>海鲜</span>\n              </label>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 体检报告结论 -->\n      <div class=\"assessment-section\">\n        <h3 class=\"section-title\">体检报告结论<span class=\"required\">*</span></h3>\n        <div class=\"section-content\">\n          <textarea\n            v-model=\"medicalForm.conclusion\"\n            placeholder=\"输入结论\"\n            class=\"conclusion-textarea\"\n          ></textarea>\n        </div>\n      </div>\n\n      <!-- 入院决定 -->\n      <div class=\"assessment-section\">\n        <div class=\"admission-decision\">\n          <label class=\"radio-option\">\n            <input type=\"radio\" v-model=\"medicalForm.admissionDecision\" value=\"admit\">\n            <span>同意入院</span>\n          </label>\n          \n          <label class=\"radio-option\">\n            <input type=\"radio\" v-model=\"medicalForm.admissionDecision\" value=\"reject\">\n            <span>不同意入院</span>\n          </label>\n        </div>\n      </div>\n\n      <!-- 操作按钮 -->\n      <div class=\"action-buttons\">\n        <button class=\"save-btn\" @click=\"saveAssessment\">保存</button>\n        <button class=\"cancel-btn\" @click=\"cancelAssessment\">取消</button>\n      </div>\n    </div>\n\n    <!-- 首次照护评估内容 -->\n    <div v-if=\"activeTab === 'care'\" class=\"assessment-content\">\n      <!-- 生活自理能力评估 -->\n      <div class=\"assessment-section\">\n        <div class=\"care-assessment-item\">\n          <div class=\"care-label\">生活自理能力</div>\n          <div class=\"care-content\">\n            <div class=\"care-slider-container\">\n              <div class=\"slider-label\">生活料理能力</div>\n              <div class=\"slider-container\">\n                <div class=\"slider-track\">\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.selfCare.daily === 0 }\"\n                    @click=\"setCareLevel('selfCare', 'daily', 0)\"\n                  >正常</div>\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.selfCare.daily === 1 }\"\n                    @click=\"setCareLevel('selfCare', 'daily', 1)\"\n                  >轻度</div>\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.selfCare.daily === 2 }\"\n                    @click=\"setCareLevel('selfCare', 'daily', 2)\"\n                  >中度</div>\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.selfCare.daily === 3 }\"\n                    @click=\"setCareLevel('selfCare', 'daily', 3)\"\n                  >重度</div>\n                  <div class=\"slider-progress\" :style=\"{ width: getProgressWidth('selfCare', 'daily') }\"></div>\n                </div>\n              </div>\n              \n              <div class=\"slider-label\">进食能力</div>\n              <div class=\"slider-container\">\n                <div class=\"slider-track\">\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.selfCare.eating === 0 }\"\n                    @click=\"setCareLevel('selfCare', 'eating', 0)\"\n                  >正常</div>\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.selfCare.eating === 1 }\"\n                    @click=\"setCareLevel('selfCare', 'eating', 1)\"\n                  >轻度</div>\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.selfCare.eating === 2 }\"\n                    @click=\"setCareLevel('selfCare', 'eating', 2)\"\n                  >中度</div>\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.selfCare.eating === 3 }\"\n                    @click=\"setCareLevel('selfCare', 'eating', 3)\"\n                  >重度</div>\n                  <div class=\"slider-progress\" :style=\"{ width: getProgressWidth('selfCare', 'eating') }\"></div>\n                </div>\n              </div>\n              \n              <div class=\"slider-label\">如厕能力</div>\n              <div class=\"slider-container\">\n                <div class=\"slider-track\">\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.selfCare.toilet === 0 }\"\n                    @click=\"setCareLevel('selfCare', 'toilet', 0)\"\n                  >正常</div>\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.selfCare.toilet === 1 }\"\n                    @click=\"setCareLevel('selfCare', 'toilet', 1)\"\n                  >轻度</div>\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.selfCare.toilet === 2 }\"\n                    @click=\"setCareLevel('selfCare', 'toilet', 2)\"\n                  >中度</div>\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.selfCare.toilet === 3 }\"\n                    @click=\"setCareLevel('selfCare', 'toilet', 3)\"\n                  >重度</div>\n                  <div class=\"slider-progress\" :style=\"{ width: getProgressWidth('selfCare', 'toilet') }\"></div>\n                </div>\n              </div>\n              \n              <div class=\"reason-label\">评估说明</div>\n              <div class=\"reason-textarea-container\">\n                <textarea \n                  class=\"reason-textarea\" \n                  v-model=\"careForm.selfCare.notes\" \n                  placeholder=\"输入评价\"\n                ></textarea>\n                <div class=\"reason-note\" v-if=\"careForm.selfCare.notes.length > 0\">!</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 认知能力评估 -->\n      <div class=\"assessment-section\">\n        <div class=\"care-assessment-item\">\n          <div class=\"care-label\">认知能力</div>\n          <div class=\"care-content\">\n            <div class=\"care-slider-container\">\n              <div class=\"slider-label\">环境认知</div>\n              <div class=\"slider-container\">\n                <div class=\"slider-track\">\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.cognition.environment === 0 }\"\n                    @click=\"setCareLevel('cognition', 'environment', 0)\"\n                  >正常</div>\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.cognition.environment === 1 }\"\n                    @click=\"setCareLevel('cognition', 'environment', 1)\"\n                  >轻度</div>\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.cognition.environment === 2 }\"\n                    @click=\"setCareLevel('cognition', 'environment', 2)\"\n                  >中度</div>\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.cognition.environment === 3 }\"\n                    @click=\"setCareLevel('cognition', 'environment', 3)\"\n                  >重度</div>\n                  <div class=\"slider-progress\" :style=\"{ width: getProgressWidth('cognition', 'environment') }\"></div>\n                </div>\n              </div>\n              \n              <div class=\"slider-label\">时间认知</div>\n              <div class=\"slider-container\">\n                <div class=\"slider-track\">\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.cognition.time === 0 }\"\n                    @click=\"setCareLevel('cognition', 'time', 0)\"\n                  >正常</div>\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.cognition.time === 1 }\"\n                    @click=\"setCareLevel('cognition', 'time', 1)\"\n                  >轻度</div>\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.cognition.time === 2 }\"\n                    @click=\"setCareLevel('cognition', 'time', 2)\"\n                  >中度</div>\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.cognition.time === 3 }\"\n                    @click=\"setCareLevel('cognition', 'time', 3)\"\n                  >重度</div>\n                  <div class=\"slider-progress\" :style=\"{ width: getProgressWidth('cognition', 'time') }\"></div>\n                </div>\n              </div>\n              \n              <div class=\"slider-label\">人物认知</div>\n              <div class=\"slider-container\">\n                <div class=\"slider-track\">\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.cognition.people === 0 }\"\n                    @click=\"setCareLevel('cognition', 'people', 0)\"\n                  >正常</div>\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.cognition.people === 1 }\"\n                    @click=\"setCareLevel('cognition', 'people', 1)\"\n                  >轻度</div>\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.cognition.people === 2 }\"\n                    @click=\"setCareLevel('cognition', 'people', 2)\"\n                  >中度</div>\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.cognition.people === 3 }\"\n                    @click=\"setCareLevel('cognition', 'people', 3)\"\n                  >重度</div>\n                  <div class=\"slider-progress\" :style=\"{ width: getProgressWidth('cognition', 'people') }\"></div>\n                </div>\n              </div>\n              \n              <div class=\"reason-label\">评估说明</div>\n              <div class=\"reason-textarea-container\">\n                <textarea \n                  class=\"reason-textarea\" \n                  v-model=\"careForm.cognition.notes\" \n                  placeholder=\"输入评价\"\n                ></textarea>\n                <div class=\"reason-note\" v-if=\"careForm.cognition.notes.length > 0\">!</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 情绪行为评估 -->\n      <div class=\"assessment-section\">\n        <div class=\"care-assessment-item\">\n          <div class=\"care-label\">情绪行为</div>\n          <div class=\"care-content\">\n            <div class=\"care-slider-container\">\n              <div class=\"slider-label\">焦虑程度</div>\n              <div class=\"slider-container\">\n                <div class=\"slider-track\">\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.emotion.anxiety === 0 }\"\n                    @click=\"setCareLevel('emotion', 'anxiety', 0)\"\n                  >正常</div>\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.emotion.anxiety === 1 }\"\n                    @click=\"setCareLevel('emotion', 'anxiety', 1)\"\n                  >轻度</div>\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.emotion.anxiety === 2 }\"\n                    @click=\"setCareLevel('emotion', 'anxiety', 2)\"\n                  >中度</div>\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.emotion.anxiety === 3 }\"\n                    @click=\"setCareLevel('emotion', 'anxiety', 3)\"\n                  >重度</div>\n                  <div class=\"slider-progress\" :style=\"{ width: getProgressWidth('emotion', 'anxiety') }\"></div>\n                </div>\n              </div>\n              \n              <div class=\"slider-label\">抑郁程度</div>\n              <div class=\"slider-container\">\n                <div class=\"slider-track\">\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.emotion.depression === 0 }\"\n                    @click=\"setCareLevel('emotion', 'depression', 0)\"\n                  >正常</div>\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.emotion.depression === 1 }\"\n                    @click=\"setCareLevel('emotion', 'depression', 1)\"\n                  >轻度</div>\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.emotion.depression === 2 }\"\n                    @click=\"setCareLevel('emotion', 'depression', 2)\"\n                  >中度</div>\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.emotion.depression === 3 }\"\n                    @click=\"setCareLevel('emotion', 'depression', 3)\"\n                  >重度</div>\n                  <div class=\"slider-progress\" :style=\"{ width: getProgressWidth('emotion', 'depression') }\"></div>\n                </div>\n              </div>\n              \n              <div class=\"slider-label\">行为异常</div>\n              <div class=\"slider-container\">\n                <div class=\"slider-track\">\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.emotion.behavior === 0 }\"\n                    @click=\"setCareLevel('emotion', 'behavior', 0)\"\n                  >正常</div>\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.emotion.behavior === 1 }\"\n                    @click=\"setCareLevel('emotion', 'behavior', 1)\"\n                  >轻度</div>\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.emotion.behavior === 2 }\"\n                    @click=\"setCareLevel('emotion', 'behavior', 2)\"\n                  >中度</div>\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.emotion.behavior === 3 }\"\n                    @click=\"setCareLevel('emotion', 'behavior', 3)\"\n                  >重度</div>\n                  <div class=\"slider-progress\" :style=\"{ width: getProgressWidth('emotion', 'behavior') }\"></div>\n                </div>\n              </div>\n              \n              <div class=\"reason-label\">评估说明</div>\n              <div class=\"reason-textarea-container\">\n                <textarea \n                  class=\"reason-textarea\" \n                  v-model=\"careForm.emotion.notes\" \n                  placeholder=\"输入评价\"\n                ></textarea>\n                <div class=\"reason-note\" v-if=\"careForm.emotion.notes.length > 0\">!</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 极端情况评估 -->\n      <div class=\"assessment-section\">\n        <div class=\"care-assessment-item\">\n          <div class=\"care-label\">极端情况</div>\n          <div class=\"care-content\">\n            <div class=\"care-slider-container\">\n              <div class=\"slider-label\">自伤倾向</div>\n              <div class=\"slider-container\">\n                <div class=\"slider-track\">\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.extreme.selfHarm === 0 }\"\n                    @click=\"setCareLevel('extreme', 'selfHarm', 0)\"\n                  >正常</div>\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.extreme.selfHarm === 1 }\"\n                    @click=\"setCareLevel('extreme', 'selfHarm', 1)\"\n                  >轻度</div>\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.extreme.selfHarm === 2 }\"\n                    @click=\"setCareLevel('extreme', 'selfHarm', 2)\"\n                  >中度</div>\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.extreme.selfHarm === 3 }\"\n                    @click=\"setCareLevel('extreme', 'selfHarm', 3)\"\n                  >重度</div>\n                  <div class=\"slider-progress\" :style=\"{ width: getProgressWidth('extreme', 'selfHarm') }\"></div>\n                </div>\n              </div>\n              \n              <div class=\"slider-label\">攻击倾向</div>\n              <div class=\"slider-container\">\n                <div class=\"slider-track\">\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.extreme.aggression === 0 }\"\n                    @click=\"setCareLevel('extreme', 'aggression', 0)\"\n                  >正常</div>\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.extreme.aggression === 1 }\"\n                    @click=\"setCareLevel('extreme', 'aggression', 1)\"\n                  >轻度</div>\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.extreme.aggression === 2 }\"\n                    @click=\"setCareLevel('extreme', 'aggression', 2)\"\n                  >中度</div>\n                  <div \n                    class=\"slider-level\" \n                    :class=\"{ active: careForm.extreme.aggression === 3 }\"\n                    @click=\"setCareLevel('extreme', 'aggression', 3)\"\n                  >重度</div>\n                  <div class=\"slider-progress\" :style=\"{ width: getProgressWidth('extreme', 'aggression') }\"></div>\n                </div>\n              </div>\n              \n              <div class=\"reason-label\">评估说明</div>\n              <div class=\"reason-textarea-container\">\n                <textarea \n                  class=\"reason-textarea\" \n                  v-model=\"careForm.extreme.notes\" \n                  placeholder=\"输入评价\"\n                ></textarea>\n                <div class=\"reason-note\" v-if=\"careForm.extreme.notes.length > 0\">!</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 操作按钮 -->\n      <div class=\"action-buttons\">\n        <button class=\"save-btn\" @click=\"saveCareAssessment\">保存</button>\n        <button class=\"cancel-btn\" @click=\"cancelAssessment\">取消</button>\n      </div>\n    </div>\n\n    <!-- 症状选择对话框 -->\n    <symptom-dialog\n      :visible=\"dialogVisible\"\n      :type=\"dialogType\"\n      :initial-selected=\"dialogInitialSelected\"\n      @confirm=\"confirmSymptoms\"\n      @cancel=\"cancelDialog\"\n    />\n  </div>\n</template>\n\n<script>\nimport { mapState, mapGetters, mapActions } from 'vuex'\nimport SymptomDialog from '../components/SymptomDialog.vue'\nimport { ElMessage } from 'element-plus'\n\nexport default {\n  name: 'HealthAssessment',\n  components: {\n    SymptomDialog\n  },\n  props: {\n    id: {\n      type: [Number, String],\n      required: true\n    }\n  },\n  data() {\n    return {\n      activeTab: 'health',\n      dialogVisible: false,\n      dialogType: '',\n      dialogMode: '',\n      dialogInitialSelected: [],\n      currentIllnesses: [],\n      pastIllnesses: [],\n      diet: {\n        noSpicy: false,\n        liquidDiet: false,\n        semiLiquidDiet: false,\n        softDiet: false,\n        lowSalt: false,\n        lowSugar: false,\n        diabeticDiet: false,\n        renalDiet: false,\n        highSalt: false,\n        highSugar: false,\n        highFat: false,\n        seafood: false\n      },\n      uploadFiles: {\n        biochemical: [],\n        xray: [],\n        ultrasound: [],\n        ecg: [],\n        ct: [],\n        other: []\n      },\n      medicalForm: {\n        forbiddenMedicine: '',\n        conclusion: '',\n        admissionDecision: 'admit'\n      },\n      currentSearchKeyword: '',\n      showCurrentSuggestions: false,\n      currentFilteredSymptoms: [],\n      pastSearchKeyword: '',\n      showPastSuggestions: false,\n      pastFilteredSymptoms: [],\n      allSymptoms: [],\n      formRules: {\n        conclusion: [\n          { required: true, message: '请输入体检报告结论', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  computed: {\n    ...mapState({\n      patients: state => state.patients\n    }),\n    ...mapGetters('healthAssessment', [\n      'isLoading',\n      'getError',\n      'getAssessmentDetails'\n    ]),\n    patient() {\n      const patientId = parseInt(this.id)\n      return this.patients.find(p => p.id === patientId) || {\n        name: '',\n        gender: '',\n        age: '',\n        idNumber: '',\n        registrationTime: ''\n      }\n    },\n    isFormValid() {\n      return this.medicalForm.conclusion.trim() !== ''\n    }\n  },\n  methods: {\n    ...mapActions('healthAssessment', [\n      'fetchHealthAssessmentDetail',\n      'submitHealthAssessment',\n      'uploadMedicalReport'\n    ]),\n    async loadAssessmentDetails() {\n      try {\n        const response = await this.fetchHealthAssessmentDetail(this.id)\n        const details = response.data\n        \n        if (details.currentIllness) {\n          this.currentIllnesses = details.currentIllness.map(item => ({\n            id: item.id,\n            name: item.name\n          }))\n        }\n        \n        if (details.dietRestrictions) {\n          this.diet = {\n            ...this.diet,\n            ...details.dietRestrictions.reduce((acc, item) => {\n              acc[this.mapDietRestrictionToKey(item.name)] = true\n              return acc\n            }, {})\n          }\n        }\n        \n        if (details.forbiddenMedicines) {\n          this.medicalForm.forbiddenMedicine = details.forbiddenMedicines\n        }\n        \n        if (details.physicalConclusion) {\n          this.medicalForm.conclusion = details.physicalConclusion\n        }\n        \n        if (details.admissionAgreement === '同意入院') {\n          this.medicalForm.admissionDecision = 'admit'\n        } else {\n          this.medicalForm.admissionDecision = 'reject'\n        }\n\n        // 加载已上传的文件\n        if (details.files) {\n          Object.keys(details.files).forEach(type => {\n            this.uploadFiles[type] = details.files[type]\n          })\n        }\n      } catch (error) {\n        ElMessage.error('加载评估详情失败')\n        console.error('加载评估详情失败:', error)\n      }\n    },\n    mapDietRestrictionToKey(name) {\n      const map = {\n        '无辣椒': 'noSpicy',\n        '流质': 'liquidDiet',\n        '半流质': 'semiLiquidDiet',\n        '软食': 'softDiet',\n        '低盐': 'lowSalt',\n        '低糖': 'lowSugar',\n        '糖尿病饮食': 'diabeticDiet',\n        '肾食': 'renalDiet',\n        '高盐': 'highSalt',\n        '高糖': 'highSugar',\n        '高脂': 'highFat',\n        '海鲜': 'seafood'\n      }\n      return map[name] || name\n    },\n    async saveAssessment() {\n      if (!this.isFormValid) {\n        ElMessage.warning('请填写必填项')\n        return\n      }\n\n      try {\n        const now = new Date()\n        const timeStr = `${now.getFullYear()}-${String(now.getMonth() + 1).padStart(2, '0')}-${String(now.getDate()).padStart(2, '0')} ${String(now.getHours()).padStart(2, '0')}:${String(now.getMinutes()).padStart(2, '0')}`\n        \n        // 处理饮食禁忌\n        const dietRestrictions = Object.entries(this.diet)\n          .filter(([_, value]) => value)\n          .map(([key, _]) => ({\n            name: this.mapDietKeyToName(key)\n          }))\n\n        // 准备要保存的详情数据\n        const details = {\n          assessment_id: parseInt(this.id),\n          current_illness: this.currentIllnesses.map(item => ({\n            id: item.id,\n            name: item.name\n          })),\n          past_illness: this.pastIllnesses.map(item => ({\n            id: item.id,\n            name: item.name\n          })),\n          forbidden_medicines: this.medicalForm.forbiddenMedicine,\n          diet_restrictions: dietRestrictions,\n          physical_conclusion: this.medicalForm.conclusion,\n          admission_agreement: this.medicalForm.admissionDecision === 'admit' ? '同意入院' : '不同意入院',\n          files: this.processUploadFiles()\n        }\n        \n        await this.submitHealthAssessment(details)\n        ElMessage.success('保存成功')\n        this.$router.push('/assessment')\n      } catch (error) {\n        ElMessage.error('保存失败')\n        console.error('保存评估失败:', error)\n      }\n    },\n    mapDietKeyToName(key) {\n      const map = {\n        noSpicy: '无辣椒',\n        liquidDiet: '流质',\n        semiLiquidDiet: '半流质',\n        softDiet: '软食',\n        lowSalt: '低盐',\n        lowSugar: '低糖',\n        diabeticDiet: '糖尿病饮食',\n        renalDiet: '肾食',\n        highSalt: '高盐',\n        highSugar: '高糖',\n        highFat: '高脂',\n        seafood: '海鲜'\n      }\n      return map[key] || key\n    },\n    processUploadFiles() {\n      const processedFiles = {}\n      Object.keys(this.uploadFiles).forEach(type => {\n        if (this.uploadFiles[type] && this.uploadFiles[type].length) {\n          processedFiles[type] = this.uploadFiles[type].map(file => \n            typeof file === 'string' ? file : (file.url || file.name)\n          )\n        }\n      })\n      return processedFiles\n    },\n    async handleFileUpload(event, type) {\n      const file = event.target.files[0]\n      if (!file) return\n\n      // 验证文件类型和大小\n      const isImage = file.type.startsWith('image/')\n      const isValidSize = file.size <= 5 * 1024 * 1024 // 5MB\n\n      if (!isImage) {\n        ElMessage.warning('请上传图片文件')\n        return\n      }\n\n      if (!isValidSize) {\n        ElMessage.warning('文件大小不能超过5MB')\n        return\n      }\n\n      try {\n        const response = await this.uploadMedicalReport({\n          assessmentId: this.id,\n          reportType: type,\n          file\n        })\n\n        if (!this.uploadFiles[type]) {\n          this.uploadFiles[type] = []\n        }\n        this.uploadFiles[type].push({\n          url: response.data.file_path,\n          name: file.name\n        })\n        \n        ElMessage.success('上传成功')\n      } catch (error) {\n        ElMessage.error('上传失败')\n        console.error('上传文件失败:', error)\n      }\n    },\n    // 加载所有可选症状\n    loadAllSymptoms() {\n      // 常见疾病分类\n      const symptomsCategories = {\n        '心脏类': [\n          { id: 1, name: '高血压' },\n          { id: 2, name: '心脏病' },\n          { id: 3, name: '心绞痛' },\n          { id: 4, name: '冠心病' },\n          { id: 5, name: '心律不齐' }\n        ],\n        '神经类': [\n          { id: 6, name: '头痛' },\n          { id: 7, name: '偏头痛' },\n          { id: 8, name: '癫痫' },\n          { id: 9, name: '帕金森' },\n          { id: 10, name: '失眠' }\n        ],\n        '消化系统': [\n          { id: 11, name: '胃病' },\n          { id: 12, name: '胃炎' },\n          { id: 13, name: '胃溃疡' },\n          { id: 14, name: '肠炎' },\n          { id: 15, name: '十二指肠溃疡' }\n        ],\n        '呼吸系统': [\n          { id: 16, name: '哮喘' },\n          { id: 17, name: '支气管炎' },\n          { id: 18, name: '肺炎' },\n          { id: 19, name: '肺结核' },\n          { id: 20, name: '肺气肿' }\n        ],\n        '代谢类': [\n          { id: 21, name: '糖尿病' },\n          { id: 22, name: '高血脂' },\n          { id: 23, name: '痛风' },\n          { id: 24, name: '肥胖' },\n          { id: 25, name: '甲状腺功能亢进' }\n        ]\n      };\n\n      // 合并所有分类的疾病到一个数组\n      this.allSymptoms = Object.values(symptomsCategories).flat();\n    },\n    // 搜索症状\n    searchSymptoms(type) {\n      const keyword = type === 'current' ? this.currentSearchKeyword : this.pastSearchKeyword;\n      \n      if (!keyword) {\n        if (type === 'current') {\n          this.currentFilteredSymptoms = [];\n        } else {\n          this.pastFilteredSymptoms = [];\n        }\n        return;\n      }\n      \n      // 过滤已经添加的症状\n      const existingIds = type === 'current' \n        ? this.currentIllnesses.map(s => s.id)\n        : this.pastIllnesses.map(s => s.id);\n      \n      // 过滤匹配关键词且未添加的症状\n      const filtered = this.allSymptoms.filter(symptom => \n        symptom.name.toLowerCase().includes(keyword.toLowerCase()) && \n        !existingIds.includes(symptom.id)\n      );\n      \n      if (type === 'current') {\n        this.currentFilteredSymptoms = filtered;\n      } else {\n        this.pastFilteredSymptoms = filtered;\n      }\n    },\n    // 添加症状\n    addSymptom(type, symptom) {\n      if (type === 'current') {\n        if (!this.currentIllnesses.some(s => s.id === symptom.id)) {\n          this.currentIllnesses.push(symptom);\n          this.currentSearchKeyword = '';\n          this.currentFilteredSymptoms = [];\n        }\n      } else if (type === 'past') {\n        if (!this.pastIllnesses.some(s => s.id === symptom.id)) {\n          this.pastIllnesses.push(symptom);\n          this.pastSearchKeyword = '';\n          this.pastFilteredSymptoms = [];\n        }\n      }\n    },\n    // 移除症状\n    removeSymptom(type, id) {\n      if (type === 'current') {\n        this.currentIllnesses = this.currentIllnesses.filter(s => s.id !== id);\n      } else if (type === 'past') {\n        this.pastIllnesses = this.pastIllnesses.filter(s => s.id !== id);\n      }\n    },\n    // 延迟隐藏建议，以便能点击建议项\n    hideSuggestionsDelayed(type) {\n      setTimeout(() => {\n        if (type === 'current') {\n          this.showCurrentSuggestions = false;\n        } else {\n          this.showPastSuggestions = false;\n        }\n      }, 200);\n    },\n    // 处理文件上传\n    async handleFileUpload(event, type) {\n      const file = event.target.files[0]\n      if (!file) return\n\n      // 验证文件类型和大小\n      const isImage = file.type.startsWith('image/')\n      const isValidSize = file.size <= 5 * 1024 * 1024 // 5MB\n\n      if (!isImage) {\n        ElMessage.warning('请上传图片文件')\n        return\n      }\n\n      if (!isValidSize) {\n        ElMessage.warning('文件大小不能超过5MB')\n        return\n      }\n\n      try {\n        const response = await this.uploadMedicalReport({\n          assessmentId: this.id,\n          reportType: type,\n          file\n        })\n\n        if (!this.uploadFiles[type]) {\n          this.uploadFiles[type] = []\n        }\n        this.uploadFiles[type].push({\n          url: response.data.file_path,\n          name: file.name\n        })\n        \n        ElMessage.success('上传成功')\n      } catch (error) {\n        ElMessage.error('上传失败')\n        console.error('上传文件失败:', error)\n      }\n    },\n    // 移除已上传的文件\n    removeFile(type, index) {\n      if (this.uploadFiles[type] && this.uploadFiles[type].length > index) {\n        this.uploadFiles[type].splice(index, 1);\n      }\n    },\n    showSymptomDialog(type) {\n      this.dialogVisible = true;\n      this.dialogMode = type;\n      \n      if (type === 'current') {\n        this.dialogType = '现病史';\n        this.dialogInitialSelected = this.currentIllnesses.map(s => s.id);\n      } else if (type === 'past') {\n        this.dialogType = '既往病史';\n        this.dialogInitialSelected = this.pastIllnesses.map(s => s.id);\n      }\n    },\n    confirmSymptoms(selectedSymptoms) {\n      if (this.dialogMode === 'current') {\n        this.currentIllnesses = selectedSymptoms;\n      } else if (this.dialogMode === 'past') {\n        this.pastIllnesses = selectedSymptoms;\n      }\n      \n      this.dialogVisible = false;\n    },\n    cancelDialog() {\n      this.dialogVisible = false;\n    },\n    async saveCareAssessment() {\n      try {\n        const now = new Date();\n        const timeStr = `${now.getFullYear()}-${String(now.getMonth() + 1).padStart(2, '0')}-${String(now.getDate()).padStart(2, '0')} ${String(now.getHours()).padStart(2, '0')}:${String(now.getMinutes()).padStart(2, '0')}`;\n        \n        // 准备要保存的照护评估详情数据\n        const details = {\n          selfCare: { ...this.careForm.selfCare },\n          cognition: { ...this.careForm.cognition },\n          emotion: { ...this.careForm.emotion },\n          extreme: { ...this.careForm.extreme }\n        };\n        \n        // 更新照护评估\n        await this.$store.dispatch('updateCareAssessment', {\n          patientId: parseInt(this.id),\n          status: 'completed',\n          time: timeStr,\n          operator: '李护士', // 添加经办人信息\n          details: details\n        });\n        \n        // 如果健康评估和照护评估都已完成，标记入院流程完成\n        if (\n          this.patient.healthAssessment.status === 'completed' &&\n          (this.patient.careAssessment.status === 'completed' || details)\n        ) {\n          await this.$store.dispatch('finishAdmission', parseInt(this.id));\n        }\n        \n        // 返回评估列表页面\n        this.$router.push('/assessment');\n      } catch (error) {\n        console.error('保存照护评估失败:', error);\n        // 这里可以添加错误提示\n      }\n    },\n    cancelAssessment() {\n      // 取消编辑，返回上一页\n      this.$router.push('/assessment');\n    },\n    setCareLevel(category, item, level) {\n      this.careForm[category][item] = level;\n    },\n    getProgressWidth(category, item) {\n      const level = this.careForm[category][item];\n      return `${(level + 1) * 25}%`;\n    }\n  },\n  created() {\n    this.loadAssessmentDetails();\n    this.loadAllSymptoms();\n  }\n}\n</script>\n\n<style scoped>\n.assessment-detail-container {\n  padding: 20px;\n  background-color: #f5f6fa;\n}\n\n.patient-info-card {\n  background-color: #fff;\n  border-radius: 4px;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.1);\n  margin-bottom: 20px;\n}\n\n.card-header {\n  border-bottom: 1px solid #eee;\n  padding: 12px 16px;\n  font-weight: bold;\n  display: flex;\n  align-items: center;\n}\n\n.card-icon {\n  width: 16px;\n  height: 16px;\n  margin-right: 8px;\n  background-color: #2196f3;\n  display: inline-block;\n  border-radius: 50%;\n}\n\n.card-body {\n  padding: 16px;\n}\n\n.info-row {\n  display: flex;\n  margin-bottom: 8px;\n}\n\n.info-item {\n  margin-right: 40px;\n  display: flex;\n}\n\n.info-label {\n  color: #888;\n  margin-right: 4px;\n}\n\n.info-value {\n  font-weight: 500;\n}\n\n.assessment-tabs {\n  display: flex;\n  background-color: #fff;\n  border-radius: 4px 4px 0 0;\n  border-bottom: 1px solid #eee;\n  margin-bottom: 0;\n}\n\n.tab-item {\n  padding: 12px 24px;\n  cursor: pointer;\n  position: relative;\n}\n\n.tab-item.active {\n  color: #2196f3;\n  border-bottom: 2px solid #2196f3;\n}\n\n.assessment-content {\n  background-color: #fff;\n  border-radius: 0 0 4px 4px;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.1);\n  padding: 20px;\n  margin-bottom: 20px;\n}\n\n.assessment-section {\n  margin-bottom: 24px;\n}\n\n.section-title {\n  font-size: 16px;\n  font-weight: 500;\n  margin-bottom: 16px;\n  position: relative;\n}\n\n.section-content {\n  padding: 0 10px;\n}\n\n.history-item {\n  display: flex;\n  margin-bottom: 16px;\n  align-items: flex-start;\n}\n\n.history-label {\n  width: 80px;\n  color: #666;\n}\n\n.history-actions {\n  flex: 1;\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n}\n\n.symptom-tag {\n  background-color: #f0f8ff;\n  border: 1px solid #d1e9ff;\n  border-radius: 4px;\n  padding: 2px 8px;\n  font-size: 14px;\n  margin-right: 8px;\n  margin-bottom: 8px;\n  display: flex;\n  align-items: center;\n}\n\n.icon-close {\n  cursor: pointer;\n  margin-left: 4px;\n  font-size: 12px;\n  color: #999;\n}\n\n.icon-close:after {\n  content: \"×\";\n}\n\n.add-btn {\n  border: 1px dashed #ddd;\n  background-color: #fff;\n  color: #2196f3;\n  padding: 4px 12px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n}\n\n.tip {\n  font-size: 12px;\n  color: #999;\n  margin-left: 8px;\n}\n\n.history-textarea {\n  width: 100%;\n  min-height: 60px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  padding: 8px;\n  resize: vertical;\n}\n\n.upload-tip {\n  font-size: 12px;\n  color: #999;\n  margin-bottom: 16px;\n}\n\n.upload-items {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 16px;\n}\n\n.upload-item {\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n}\n\n.upload-label {\n  width: 100%;\n  color: #666;\n  margin-bottom: 8px;\n}\n\n.upload-actions {\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n}\n\n.upload-preview-list {\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 8px;\n  position: relative;\n}\n\n.upload-preview {\n  width: 60px;\n  height: 60px;\n  background-color: #f0f8ff;\n  border-radius: 4px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 8px;\n  margin-bottom: 8px;\n  position: relative;\n  overflow: hidden;\n}\n\n.preview-count {\n  position: absolute;\n  bottom: 4px;\n  right: 4px;\n  background-color: rgba(0, 0, 0, 0.5);\n  color: white;\n  font-size: 12px;\n  padding: 2px 4px;\n  border-radius: 4px;\n}\n\n.upload-btn {\n  width: 60px;\n  height: 60px;\n  border: 1px dashed #ddd;\n  background-color: #fff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border-radius: 4px;\n}\n\n.icon-plus:before {\n  content: \"+\";\n  font-size: 24px;\n  color: #999;\n}\n\n.diet-container {\n  border: 1px solid #eee;\n  border-radius: 4px;\n  padding: 16px;\n}\n\n.diet-row {\n  display: flex;\n  margin-bottom: 12px;\n}\n\n.diet-row:last-child {\n  margin-bottom: 0;\n}\n\n.diet-option {\n  margin-right: 24px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n}\n\n.diet-option input {\n  margin-right: 4px;\n}\n\n.conclusion-textarea {\n  width: 100%;\n  min-height: 100px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  padding: 12px;\n  resize: vertical;\n}\n\n.required {\n  color: #f44336;\n  margin-left: 4px;\n}\n\n.admission-decision {\n  display: flex;\n  margin-bottom: 20px;\n}\n\n.radio-option {\n  margin-right: 24px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n}\n\n.radio-option input {\n  margin-right: 4px;\n}\n\n.action-buttons {\n  display: flex;\n  justify-content: center;\n  margin-top: 40px;\n}\n\n.save-btn {\n  background-color: #2196f3;\n  color: white;\n  border: none;\n  padding: 8px 24px;\n  border-radius: 4px;\n  cursor: pointer;\n  margin-right: 16px;\n}\n\n.cancel-btn {\n  background-color: #f5f5f5;\n  color: #666;\n  border: 1px solid #ddd;\n  padding: 8px 24px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.placeholder {\n  padding: 40px;\n  text-align: center;\n  color: #999;\n}\n\n.search-wrapper {\n  position: relative;\n  min-width: 200px;\n  margin-right: 10px;\n  margin-bottom: 8px;\n}\n\n.search-symptom {\n  width: 100%;\n  padding: 8px 12px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 14px;\n}\n\n.suggestions {\n  position: absolute;\n  top: 100%;\n  left: 0;\n  right: 0;\n  background-color: #fff;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  max-height: 200px;\n  overflow-y: auto;\n  z-index: 1000;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n.suggestion-item {\n  padding: 8px 12px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.suggestion-item:hover {\n  background-color: #f0f8ff;\n}\n\n.preview-img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 4px;\n}\n\n.preview-delete {\n  position: absolute;\n  top: -5px;\n  right: -5px;\n  width: 18px;\n  height: 18px;\n  background-color: rgba(0, 0, 0, 0.5);\n  color: white;\n  border-radius: 50%;\n  font-size: 12px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  opacity: 0;\n  transition: opacity 0.2s;\n}\n\n.upload-preview:hover .preview-delete {\n  opacity: 1;\n}\n\n.care-assessment-item {\n  margin-bottom: 20px;\n}\n\n.care-label {\n  font-size: 16px;\n  font-weight: 500;\n  margin-bottom: 8px;\n}\n\n.care-content {\n  padding: 16px;\n  border: 1px solid #eee;\n  border-radius: 4px;\n}\n\n.care-slider-container {\n  margin-bottom: 16px;\n}\n\n.slider-label {\n  font-size: 14px;\n  color: #666;\n  margin-bottom: 8px;\n}\n\n.slider-container {\n  position: relative;\n  height: 40px;\n  margin-bottom: 15px;\n}\n\n.slider-track {\n  position: relative;\n  display: flex;\n  height: 100%;\n  width: 100%;\n  background-color: #f5f5f5;\n  border-radius: 4px;\n  overflow: hidden;\n}\n\n.slider-level {\n  flex: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border-right: 1px solid #ddd;\n  position: relative;\n  z-index: 2;\n  transition: background-color 0.2s;\n  user-select: none;\n}\n\n.slider-level:last-child {\n  border-right: none;\n}\n\n.slider-level:hover {\n  background-color: rgba(33, 150, 243, 0.1);\n}\n\n.slider-level.active {\n  color: white;\n  font-weight: 500;\n}\n\n.slider-progress {\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  background-color: #2196f3;\n  z-index: 1;\n  transition: width 0.3s ease;\n}\n\n.reason-label {\n  font-size: 14px;\n  color: #666;\n  margin-bottom: 8px;\n}\n\n.reason-textarea-container {\n  position: relative;\n}\n\n.reason-textarea {\n  width: 100%;\n  min-height: 80px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  padding: 8px;\n  resize: vertical;\n}\n\n.reason-note {\n  position: absolute;\n  right: 8px;\n  bottom: 8px;\n  background-color: #ffeb3b;\n  color: #333;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 12px;\n  font-weight: bold;\n}\n\n/* 为不同的级别设置不同的颜色 */\n.slider-level:nth-child(1).active ~ .slider-progress {\n  background-color: #4caf50; /* 正常-绿色 */\n}\n\n.slider-level:nth-child(2).active ~ .slider-progress {\n  background-color: #cddc39; /* 轻度-黄绿色 */\n}\n\n.slider-level:nth-child(3).active ~ .slider-progress {\n  background-color: #ff9800; /* 中度-橙色 */\n}\n\n.slider-level:nth-child(4).active ~ .slider-progress {\n  background-color: #f44336; /* 重度-红色 */\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}