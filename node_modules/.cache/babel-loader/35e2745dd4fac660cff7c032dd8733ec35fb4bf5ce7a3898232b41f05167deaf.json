{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport { getAdmissionList } from '../api/admission';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    patients: []\n  },\n  getters: {\n    pendingAdmissionCount: state => {\n      return state.patients.filter(p => p.healthStatus === '待评估' || p.careStatus === '待评估').length;\n    },\n    pendingDischargeCount: state => {\n      return 0; // 暂时返回0，后续实现离院功能时再修改\n    }\n  },\n  mutations: {\n    SET_PATIENTS(state, patients) {\n      state.patients = patients;\n    },\n    updatePatientHealthAssessment(state, {\n      patientId,\n      status,\n      time,\n      operator\n    }) {\n      const patient = state.patients.find(p => p.patientId === patientId);\n      if (patient) {\n        patient.healthStatus = status;\n        patient.healthTime = time;\n        patient.healthOperator = operator;\n      }\n    },\n    updatePatientCareAssessment(state, {\n      patientId,\n      status,\n      time,\n      operator\n    }) {\n      const patient = state.patients.find(p => p.patientId === patientId);\n      if (patient) {\n        patient.careStatus = status;\n        patient.careTime = time;\n        patient.careOperator = operator;\n      }\n    },\n    completeAdmission(state, patientId) {\n      const patient = state.patients.find(p => p.id === patientId);\n      if (patient) {\n        patient.admissionCompleted = true;\n      }\n    }\n  },\n  actions: {\n    async fetchPatients({\n      commit\n    }, params) {\n      try {\n        const response = await getAdmissionList(params);\n        commit('SET_PATIENTS', response.data.records);\n        return response;\n      } catch (error) {\n        console.error('获取患者列表失败:', error);\n        throw error;\n      }\n    },\n    async updateHealthAssessment({\n      commit\n    }, payload) {\n      try {\n        await submitHealthAssessment(payload);\n        commit('updatePatientHealthAssessment', {\n          patientId: payload.patientId,\n          status: payload.status === 'completed' ? '完成' : payload.status === 'rejected' ? '不同意入院' : '待评估',\n          time: payload.time,\n          operator: payload.operator\n        });\n      } catch (error) {\n        console.error('更新健康评估失败:', error);\n        throw error;\n      }\n    },\n    async updateCareAssessment({\n      commit\n    }, payload) {\n      try {\n        await submitCareAssessment(payload);\n        commit('updatePatientCareAssessment', {\n          patientId: payload.patientId,\n          status: payload.status === 'completed' ? '完成' : payload.status === 'rejected' ? '不同意入院' : '待评估',\n          time: payload.time,\n          operator: payload.operator\n        });\n      } catch (error) {\n        console.error('更新照护评估失败:', error);\n        throw error;\n      }\n    },\n    async fetchHealthAssessmentDetail(commit, id) {\n      const response = await getHealthAssessmentDetail(id);\n      return response;\n    },\n    async fetchCareAssessmentDetail(commit, id) {\n      const response = await getCareAssessmentDetail(id);\n      return response;\n    },\n    async uploadMedicalReport(commit, payload) {\n      const response = await uploadMedicalReport(payload);\n      return response;\n    },\n    async finishAdmission({\n      commit\n    }, patientId) {\n      try {\n        // 这里可以添加完成入院的 API 调用\n        commit('completeAdmission', patientId);\n      } catch (error) {\n        console.error('完成入院失败:', error);\n        throw error;\n      }\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["Vue","Vuex","getAdmissionList","use","Store","state","patients","getters","pendingAdmissionCount","filter","p","healthStatus","careStatus","length","pendingDischargeCount","mutations","SET_PATIENTS","updatePatientHealthAssessment","patientId","status","time","operator","patient","find","healthTime","healthOperator","updatePatientCareAssessment","careTime","careOperator","completeAdmission","id","admissionCompleted","actions","fetchPatients","commit","params","response","data","records","error","console","updateHealthAssessment","payload","submitHealthAssessment","updateCareAssessment","submitCareAssessment","fetchHealthAssessmentDetail","getHealthAssessmentDetail","fetchCareAssessmentDetail","getCareAssessmentDetail","uploadMedicalReport","finishAdmission","modules"],"sources":["/Users/seaocean/projects/test1/hospital/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport { getAdmissionList } from '../api/admission'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    patients: []\n  },\n  getters: {\n    pendingAdmissionCount: state => {\n      return state.patients.filter(p => \n        p.healthStatus === '待评估' || p.careStatus === '待评估'\n      ).length\n    },\n    pendingDischargeCount: state => {\n      return 0 // 暂时返回0，后续实现离院功能时再修改\n    }\n  },\n  mutations: {\n    SET_PATIENTS(state, patients) {\n      state.patients = patients\n    },\n    updatePatientHealthAssessment(state, { patientId, status, time, operator }) {\n      const patient = state.patients.find(p => p.patientId === patientId);\n      if (patient) {\n        patient.healthStatus = status;\n        patient.healthTime = time;\n        patient.healthOperator = operator;\n      }\n    },\n    updatePatientCareAssessment(state, { patientId, status, time, operator }) {\n      const patient = state.patients.find(p => p.patientId === patientId);\n      if (patient) {\n        patient.careStatus = status;\n        patient.careTime = time;\n        patient.careOperator = operator;\n      }\n    },\n    completeAdmission(state, patientId) {\n      const patient = state.patients.find(p => p.id === patientId);\n      if (patient) {\n        patient.admissionCompleted = true;\n      }\n    }\n  },\n  actions: {\n    async fetchPatients({ commit }, params) {\n      try {\n        const response = await getAdmissionList(params)\n        commit('SET_PATIENTS', response.data.records)\n        return response\n      } catch (error) {\n        console.error('获取患者列表失败:', error)\n        throw error\n      }\n    },\n    async updateHealthAssessment({ commit }, payload) {\n      try {\n        await submitHealthAssessment(payload);\n        commit('updatePatientHealthAssessment', {\n          patientId: payload.patientId,\n          status: payload.status === 'completed' ? '完成' :\n            payload.status === 'rejected' ? '不同意入院' : '待评估',\n          time: payload.time,\n          operator: payload.operator\n        });\n      } catch (error) {\n        console.error('更新健康评估失败:', error);\n        throw error;\n      }\n    },\n    async updateCareAssessment({ commit }, payload) {\n      try {\n        await submitCareAssessment(payload);\n        commit('updatePatientCareAssessment', {\n          patientId: payload.patientId,\n          status: payload.status === 'completed' ? '完成' :\n            payload.status === 'rejected' ? '不同意入院' : '待评估',\n          time: payload.time,\n          operator: payload.operator\n        });\n      } catch (error) {\n        console.error('更新照护评估失败:', error);\n        throw error;\n      }\n    },\n    async fetchHealthAssessmentDetail(commit, id) {\n      const response = await getHealthAssessmentDetail(id);\n      return response;\n    },\n    async fetchCareAssessmentDetail(commit, id) {\n      const response = await getCareAssessmentDetail(id);\n      return response;\n    },\n    async uploadMedicalReport(commit, payload) {\n      const response = await uploadMedicalReport(payload);\n      return response;\n    },\n    async finishAdmission({ commit }, patientId) {\n      try {\n        // 这里可以添加完成入院的 API 调用\n        commit('completeAdmission', patientId);\n      } catch (error) {\n        console.error('完成入院失败:', error);\n        throw error;\n      }\n    }\n  },\n  modules: {\n  }\n}) "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}