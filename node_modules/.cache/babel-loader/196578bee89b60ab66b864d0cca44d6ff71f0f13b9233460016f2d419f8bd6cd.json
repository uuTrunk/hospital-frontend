{"ast":null,"code":"import axios from 'axios';\n\n// 创建axios实例\nconst api = axios.create({\n  baseURL: '/api/v1',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// 请求拦截器\napi.interceptors.request.use(config => {\n  // 从localStorage获取token\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// 响应拦截器\napi.interceptors.response.use(response => {\n  const res = response.data;\n  if (res.code !== 200) {\n    // 处理业务错误\n    console.error('API Error:', res.message);\n    return Promise.reject(new Error(res.message || 'Error'));\n  }\n  return res;\n}, error => {\n  // 处理HTTP错误\n  console.error('HTTP Error:', error);\n  return Promise.reject(error);\n});\n\n// 评估列表\nexport const getAssessmentList = params => {\n  return api.get('/assessments', {\n    params\n  });\n};\n\n// 健康评估\nexport const getHealthAssessment = assessmentId => {\n  return api.get(`/assessments/${assessmentId}/health`);\n};\nexport const submitHealthAssessment = (assessmentId, data) => {\n  return api.post(`/assessments/${assessmentId}/health`, data);\n};\n\n// 照护评估\nexport const getCareAssessment = assessmentId => {\n  return api.get(`/assessments/${assessmentId}/care`);\n};\nexport const submitCareAssessment = (assessmentId, data) => {\n  return api.post(`/assessments/${assessmentId}/care`, data);\n};\n\n// 医疗报告\nexport const uploadMedicalReport = (assessmentId, formData) => {\n  return api.post(`/assessments/${assessmentId}/reports`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n};","map":{"version":3,"names":["axios","api","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","response","res","data","code","console","message","Error","getAssessmentList","params","get","getHealthAssessment","assessmentId","submitHealthAssessment","post","getCareAssessment","submitCareAssessment","uploadMedicalReport","formData"],"sources":["/Users/seaocean/projects/test/hospital/src/api/assessment.js"],"sourcesContent":["import axios from 'axios';\n\n// 创建axios实例\nconst api = axios.create({\n    baseURL: '/api/v1',\n    timeout: 10000,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\n// 请求拦截器\napi.interceptors.request.use(\n    config => {\n        // 从localStorage获取token\n        const token = localStorage.getItem('token');\n        if (token) {\n            config.headers['Authorization'] = `Bearer ${token}`;\n        }\n        return config;\n    },\n    error => {\n        return Promise.reject(error);\n    }\n);\n\n// 响应拦截器\napi.interceptors.response.use(\n    response => {\n        const res = response.data;\n        if (res.code !== 200) {\n            // 处理业务错误\n            console.error('API Error:', res.message);\n            return Promise.reject(new Error(res.message || 'Error'));\n        }\n        return res;\n    },\n    error => {\n        // 处理HTTP错误\n        console.error('HTTP Error:', error);\n        return Promise.reject(error);\n    }\n);\n\n// 评估列表\nexport const getAssessmentList = (params) => {\n    return api.get('/assessments', { params });\n};\n\n// 健康评估\nexport const getHealthAssessment = (assessmentId) => {\n    return api.get(`/assessments/${assessmentId}/health`);\n};\n\nexport const submitHealthAssessment = (assessmentId, data) => {\n    return api.post(`/assessments/${assessmentId}/health`, data);\n};\n\n// 照护评估\nexport const getCareAssessment = (assessmentId) => {\n    return api.get(`/assessments/${assessmentId}/care`);\n};\n\nexport const submitCareAssessment = (assessmentId, data) => {\n    return api.post(`/assessments/${assessmentId}/care`, data);\n};\n\n// 医疗报告\nexport const uploadMedicalReport = (assessmentId, formData) => {\n    return api.post(`/assessments/${assessmentId}/reports`, formData, {\n        headers: {\n            'Content-Type': 'multipart/form-data'\n        }\n    });\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACrBC,OAAO,EAAE,SAAS;EAClBC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACxBC,MAAM,IAAI;EACN;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUK,KAAK,EAAE;EACvD;EACA,OAAOD,MAAM;AACjB,CAAC,EACDI,KAAK,IAAI;EACL,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;;AAED;AACAZ,GAAG,CAACK,YAAY,CAACU,QAAQ,CAACR,GAAG,CACzBQ,QAAQ,IAAI;EACR,MAAMC,GAAG,GAAGD,QAAQ,CAACE,IAAI;EACzB,IAAID,GAAG,CAACE,IAAI,KAAK,GAAG,EAAE;IAClB;IACAC,OAAO,CAACP,KAAK,CAAC,YAAY,EAAEI,GAAG,CAACI,OAAO,CAAC;IACxC,OAAOP,OAAO,CAACC,MAAM,CAAC,IAAIO,KAAK,CAACL,GAAG,CAACI,OAAO,IAAI,OAAO,CAAC,CAAC;EAC5D;EACA,OAAOJ,GAAG;AACd,CAAC,EACDJ,KAAK,IAAI;EACL;EACAO,OAAO,CAACP,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;EACnC,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;;AAED;AACA,OAAO,MAAMU,iBAAiB,GAAIC,MAAM,IAAK;EACzC,OAAOvB,GAAG,CAACwB,GAAG,CAAC,cAAc,EAAE;IAAED;EAAO,CAAC,CAAC;AAC9C,CAAC;;AAED;AACA,OAAO,MAAME,mBAAmB,GAAIC,YAAY,IAAK;EACjD,OAAO1B,GAAG,CAACwB,GAAG,CAAC,gBAAgBE,YAAY,SAAS,CAAC;AACzD,CAAC;AAED,OAAO,MAAMC,sBAAsB,GAAGA,CAACD,YAAY,EAAET,IAAI,KAAK;EAC1D,OAAOjB,GAAG,CAAC4B,IAAI,CAAC,gBAAgBF,YAAY,SAAS,EAAET,IAAI,CAAC;AAChE,CAAC;;AAED;AACA,OAAO,MAAMY,iBAAiB,GAAIH,YAAY,IAAK;EAC/C,OAAO1B,GAAG,CAACwB,GAAG,CAAC,gBAAgBE,YAAY,OAAO,CAAC;AACvD,CAAC;AAED,OAAO,MAAMI,oBAAoB,GAAGA,CAACJ,YAAY,EAAET,IAAI,KAAK;EACxD,OAAOjB,GAAG,CAAC4B,IAAI,CAAC,gBAAgBF,YAAY,OAAO,EAAET,IAAI,CAAC;AAC9D,CAAC;;AAED;AACA,OAAO,MAAMc,mBAAmB,GAAGA,CAACL,YAAY,EAAEM,QAAQ,KAAK;EAC3D,OAAOhC,GAAG,CAAC4B,IAAI,CAAC,gBAAgBF,YAAY,UAAU,EAAEM,QAAQ,EAAE;IAC9D5B,OAAO,EAAE;MACL,cAAc,EAAE;IACpB;EACJ,CAAC,CAAC;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}